button_card_templates:
  police:
    styles:
      card:
        - font-family: Avenir
  sidebar:
    entity: weather.beaucouze
    show_entity_picture: false
    show_icon: false
    show_name: false
    show_state: false
    show_label: false
    template:
      - police
    styles:
      grid:
        - grid-template-areas: |
            "date"
            "meteo"
            "alerte"
            "titre_programme"
            "anniv"
            "calendrier"
            "poubelle"
            "titre_avertissement"
            "device_hs"
            "titre_activite"
            "rappel"
            "mouvement"
            "porte"
            "lumiere"
            "appareil"
            "modes"
            "app_connectes"
            "adguard"
            "enedis"
            "titre_maj"
            "maj"
        - grid-template-columns: 1fr
        - grid-template-rows: >-
            min-content min-content min-content min-content  min-content 
            min-content  min-content  min-content  min-content  min-content 
            min-content  min-content   min-content  min-content  min-content
            min-content  min-content  min-content  min-content  min-content 
            min-content 1fr
        - gap: 0%
        - overflow: hidden
      card:
        - '-webkit-tap-highlight-color': rgba(0,0,0,0)
        - padding: 2% 4% 2% 4%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
        - line-height: 105%
        - font-size: 13px
      custom_fields:
        reglages:
          - opacity: 100%
          - position: absolute
          - top: 3.5%
          - left: 130.5%
          - width: calc(80% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
        date:
          - color: var(--text_on)
          - padding: 02px 0px 0px 0px
          - text-transform: null
          - font-weight: bold
          - align-self: middle
          - line-height: null
          - white-space: normal
        meteo:
          - padding: 05px 0px 0px 0px
          - padding-left: 8px
          - color: var(--text_on_sidebar)
          - align-self: middle
          - white-space: normal
        alerte:
          - padding: 05px 0px 0px 0px
          - padding-left: 8px
          - font-size: 95%
          - color: |
              [[[
                if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Jaune')
                  return 'yellow'
                if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Orange')
                  return 'orange'
                if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Rouge')
                  return 'red'
                return ''
              ]]]
          - align-self: middle
          - white-space: normal
        titre_programme:
          - padding: 15px 0px 01px 0px
          - font-weight: bold
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_sidebar)
          - white-space: normal
        anniv:
          - border-left: |
              [[[
                if (states['sensor.anniversaire'].state == 'Aucun')
                  return '';
                return '2px tomato solid';
              ]]]
          - padding: 0px 0px 0px 0px
          - padding-left: 8px
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_info_sidebar)
          - white-space: normal
        calendrier:
          - border-left: 2px tomato solid
          - padding: 0px 0px 0px 0px
          - padding-left: 8px
          - color: |
              [[[
                if (states['sensor.calendar_famille'].state == 'Aucun évènement')
                  return 'var(--text_off_sidebar)';
                return 'var(--text_on_info_sidebar)';
              ]]]
          - justifiy-self: start
          - text-align: left
          - white-space: normal
        poubelle:
          - border-left: 2px tomato solid
          - padding: 0px 0px 0px 0px
          - padding-left: 8px
          - color: |
              [[[
                if (states['sensor.calendar_poubelles'].state == 'Aucun rappel')
                  return 'var(--text_off_sidebar)';
                return 'var(--text_on_info_sidebar)';
              ]]]
          - justifiy-self: start
          - text-align: left
          - white-space: normal
        titre_avertissement:
          - padding: |
              [[[
                if (states['sensor.systeme_sidebar'].state == '' )
                  return "0px 0px 0px 0px" ;
                return "15px 0px 01px 0px" ;
              ]]]
          - font-weight: bold
          - justifiy-self: start
          - text-align: left
          - color: red
          - white-space: normal
        device_hs:
          - border-left: 2px red solid
          - padding: |
              [[[
                if (states['sensor.systeme_sidebar'].state == '' )
                  return "0px 0px 0px 0px" ;
                return "0px 0px 0px 08px" ;
              ]]]
          - justifiy-self: start
          - color: red
          - white-space: normal
          - text-align: left
        titre_activite:
          - padding: 15px 0px 01px 0px
          - font-weight: bold
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_sidebar)
          - white-space: normal
        appareil:
          - border-left: 2px grey solid
          - white-space: normal
          - text-align: left
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - color: |
              [[[
                if (states['sensor.compteur_autre'].state == '0')
                  return 'var(--text_off_sidebar)';
                return 'var(--text_on_info_sidebar)';
              ]]]
        lumiere:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - color: |
              [[[
                if (states['light.tout'].state == 'off')
                  return 'var(--text_off_sidebar)';
                return 'var(--text_on_info_sidebar)';
              ]]]
          - white-space: normal
          - text-align: left
        mouvement:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: |
              [[[
                if (states['binary_sensor.mouvements'].state == 'off')
                  return 'var(--text_off_sidebar)';
                return 'var(--text_on_info_sidebar)';
              ]]]
          - white-space: normal
        porte:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: |
              [[[
                if (states['binary_sensor.portes'].state == 'off')
                  return 'var(--text_off_sidebar)';
                return 'var(--text_on_info_sidebar)';
              ]]]
          - white-space: normal
        rappel:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - white-space: normal
          - color: |
              [[[
                if (states['sensor.rappel'].state == 'Aucun')
                  return 'var(--text_off_sidebar)';
                return 'var(--text_on_info_sidebar)';
              ]]]
        modes:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_info_sidebar)
          - white-space: normal
        app_connectes:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_info_sidebar)
          - white-space: normal
        adguard:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_info_sidebar)
          - white-space: normal
        enedis:
          - border-left: 2px grey solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_info_sidebar)
          - white-space: normal
        titre_maj:
          - padding: 15px 0px 01px 0px
          - font-weight: bold
          - justifiy-self: start
          - text-align: left
          - color: var(--text_on_sidebar)
          - white-space: normal
        maj:
          - border-left: 2px dodgerblue solid
          - padding: 0px 0px 0px 08px
          - justifiy-self: start
          - text-align: left
          - color: |
              [[[
                if (states['sensor.maj'].state == 'Aucune')
                  return "var(--text_off)" ;
                return "var(--text_on_info_sidebar)" 
              ]]]
          - white-space: normal
    custom_fields:
      date: |
        [[[ return states['sensor.date_simple'].state  ]]]
      meteo: >
        [[[ return  states['sensor.weather_icon'].state + " " +
        states['sensor.weather_conditions'].state +",
        "+states['sensor.weather_temperature'].state]]]
      alerte: |
        [[[
          if (states['sensor.weather_alerte_couleur_v2'].state == "Aucune vigilance en cours" ) 
            return ""
          return "Vigilance "+states['sensor.weather_alerte'].state
        ]]]
      titre_programme: |
        [[[ return "Aujourd’hui" 
        ]]]
      anniv: |
        [[[
          if (states['sensor.anniversaire'].state == 'Aucun')
            return "" 
          return "🎁 " + states['sensor.anniversaire'].state
        ]]]
      calendrier: |
        [[[ return  states['sensor.calendar_famille'].state
        ]]]
      poubelle: |
        [[[ return  states['sensor.calendar_poubelles'].state
        ]]]
      titre_avertissement: |
        [[[
          if (states['sensor.systeme_sidebar'].state == '')
            return "" 
          return "Avertissement" 
        ]]]
      device_hs: |
        [[[
          if (states['sensor.systeme_sidebar'].state == '')
            return "" 
          return states['sensor.systeme_sidebar'].state ;
        ]]]
      titre_activite: |
        [[[ return "Activité" 
        ]]]
      appareil: |
        [[[
          if (states['sensor.compteur_autre'].state == 0 || states['input_boolean.sidecar_show_autre'].state == 'off')
            return ""
          return `<ha-icon
            icon="mdi:home"
            style="width: 18px; color: var(--text_on_sidebar); height: 18px; margin-right: 2px;">
            </ha-icon><span> ${states['sensor.autres_appareils'].state}</span>`
        ]]]
      lumiere: |
        [[[
          if (states['sensor.lumiere_etat'].state == 'Aucune' || states['input_boolean.sidecar_show_lumiere'].state == 'off')
            return ""
          return `<ha-icon
            icon="phu:bulb-group-filament-candle"
            style="width: 18px; color: gold; height: 18px; margin-right: 2px;">
            </ha-icon><span> ${states['sensor.lumiere_etat'].state}</span>`
        ]]]
      mouvement: |
        [[[
          if (states['sensor.mouv_on'].state == 'Aucun' || states['input_boolean.sidecar_show_mouvement'].state == 'off')
            return ""
          return `<ha-icon
            icon="mdi:run"
            style="width: 18px; color: var(--text_on_sidebar); height: 18px; margin-right: 2px;">
            </ha-icon><span> ${states['sensor.mouv_on'].state}</span>`
        ]]]
      porte: |
        [[[
          if (states['sensor.porte_on'].state == 'Aucune'|| states['input_boolean.sidecar_show_porte'].state == 'off')
            return ""
          return `<ha-icon
            icon="mdi:door-open"
            style="width: 18px; color: var(--text_on_sidebar); height: 18px; margin-right: 2px;">
            </ha-icon><span> ${states['sensor.porte_on'].state}</span>`
        ]]]
      rappel: |
        [[[
          if (states['sensor.rappel'].state == "Aucun")
            return ""
          return `<ha-icon
            icon="mdi:reminder"
            style="width: 18px; color: var(--text_on_sidebar); height: 18px; margin-right: 2px;">
            </ha-icon><span> ${states['sensor.rappel'].state}</span>`
        ]]]
      modes: |
        [[[
          if (states['sensor.modes'].state == 'Aucun'|| states['input_boolean.sidecar_show_mode'].state == 'off')
            return ""
          return `<ha-icon
            icon="mdi:checkbox-multiple-marked-outline"
            style="width: 18px; color: var(--text_on_sidebar); height: 18px; margin-right: 2px;">
            </ha-icon><span> ${states['sensor.modes'].state}</span>`
        ]]]
      app_connectes: |
        [[[
          if (states['sensor.app_connectes'].state == 'Aucun' || states['input_boolean.sidecar_show_connecte'].state == 'off')
            return ""
          return `<ha-icon
            icon="mdi:desktop-mac"
            style="width: 18px; color: var(--text_on_sidebar); height: 18px; margin-right: 2px;">
            </ha-icon><span> ${states['sensor.app_connectes'].state}</span>`
        ]]]
      adguard: |
        [[[
          if (states['switch.adguard_protection'].state == 'on')
          return `<ha-icon
            icon="mdi:shield-check"
            style="width: 18px; color: red; height: 18px; margin-right: 2px;">
            </ha-icon><span> AdGuard activé</span>`
          if (states['switch.adguard_protection'].state == 'off')
          return `<ha-icon
            icon="mdi:shield-off"
            style="width: 18px; color: green; height: 18px; margin-right: 2px;">
            </ha-icon><span> AdGuard désactivé</span>`
        ]]]
      enedis: |
        [[[
          if (states['sensor.myenedis_cost_yesterday_09397539765420'].state == '-1.0')
          return `<ha-icon
            icon="mdi:flash-alert"
            style="width: 18px; color: var(--text_on_sidebar); height: 18px; margin-right: 2px;">
            </ha-icon><span>Enedis: en attente</span>`
          if (states['sensor.myenedis_cost_yesterday_09397539765420'].state == 'unavailable')
          return `<ha-icon
            icon="mdi:flash-off"
            style="width: 18px; color: var(--text_on_sidebar); height: 18px; margin-right: 2px;">
            </ha-icon><span>Enedis : indisponible</span>`
          if (states['sensor.myenedis_cost_yesterday_09397539765420'].state != '-1.0')
          return `<ha-icon
            icon="mdi:flash"
            style="width: 18px; color: gold; height: 18px; margin-right: 2px;">
            </ha-icon><span>Enedis : ${states['sensor.myenedis_conso_hier_kwh'].state}kWh / ${states['sensor.myenedis_cout_j1v2'].state}€</span>`
        ]]]
      titre_maj: |
        [[[ return "Mise à jour" 
        ]]]
      maj: |
        [[[ return states['sensor.maj'].state ;
        ]]]
      reglages:
        card:
          type: custom:button-card
          name: reglages
          template:
            - badge_1_auto
          label: |
            [[[
              return `<ha-icon
                icon="mdi:cog"
                style="width: 15px; height: 15px; color: var(--text_off_sidebar);"> 
                </ha-icon>`
            ]]]
          styles:
            card:
              - font-size: 80%
              - border-radius: 8px
          tap_action:
            action: navigate
            navigation_path: /lovelace/Reglages
  base:
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    template:
      - police
    styles:
      grid:
        - grid-template-areas: '"i n" "i s" "i l" '
        - grid-template-columns: min-content auto
        - grid-template-rows: min-content min-content min-content
      img_cell:
        - background-color: var(--pastille_off)
        - border-radius: 50%
        - place-self: start
        - text-align: start
        - width: 30px
        - height: 30px
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
      icon:
        - width: 70%
        - color: var(--icon_off)
      name:
        - color: lightgrey
        - align-self: end
        - justify-self: start
        - text-align: left
        - font-weight: bold
        - font-size: 13px
        - margin-left: 9px
      state:
        - color: darkgrey
        - justify-self: start
        - align-self: end
        - font-weight: bold
        - text-align: left
        - font-size: 12px
        - filter: opacity(85%)
        - margin-left: 9px
      label:
        - color: darkgrey
        - justify-self: start
        - align-self: start
        - text-align: left
        - font-weight: bold
        - font-size: 12px
        - filter: opacity(85%)
        - margin-left: 9px
      card:
        - padding: 8px
        - font-size: 100%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
        - animation: ball-scale 0.2s
        - white-space: normal
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  base_petite:
    styles:
      card:
        - height: 50px
  base_moyenne:
    styles:
      card:
        - height: 70px
  base_large:
    styles:
      card:
        - height: 90px
  base_tres_large:
    styles:
      card:
        - height: 140px
  carte_piece:
    styles:
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 3%
          - top: 35%
          - height: 20%
          - width: 10%
          - font-size: 85%
          - line-height: 167%
          - font-weight: null
        lum:
          - position: absolute
          - top: 48%
          - left: 66%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 8
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
        appareil:
          - position: absolute
          - top: 73%
          - left: 58%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 2
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
        graph:
          - opacity: 60%
          - position: absolute
          - top: 50%
          - left: 50%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 4
          - '--paper-card-background-color': rgba(0, 0, 0, 0)
          - '--ha-card-background': rgba(0, 0, 0, 0)"
          - '--ha-card-box-shadow': none
          - pointer-events: none
        graph_fixe:
          - opacity: 60%
          - position: absolute
          - top: 50%
          - left: 50%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 12
          - '--paper-card-background-color': rgba(0, 0, 0, 0)
          - '--ha-card-background': rgba(0, 0, 0, 0)"
          - '--ha-card-box-shadow': none
          - pointer-events: none
  carte_piece_appareil:
    show_name: false
    show_label: false
    show_state: false
    template:
      - state_unavailable
    styles:
      icon:
        - width: 70%
        - padding-bottom: 10px
      card:
        - height: 20px
        - width: 20px
        - border-radius: 20px
        - box-shadow: var(--card_box_shadow)
        - animation: ball-scale 0.2s
    state:
      - value: 'on'
        styles:
          icon:
            - color: red
      - value: heat
        styles:
          icon:
            - color: red
      - value: 'off'
        styles:
          icon:
            - color: darkgrey
    tap_action:
      action: more-info
  piece_jauge_lumiere:
    custom_fields:
      lum:
        card:
          type: conditional
          card:
            type: custom:my-slider
            radius: 5px
            height: 10px
            width: 68%
            mainSliderColor: var(--button-card-light-color-no-temperature)
            secondarySliderColor: darkslategrey
            thumbHorizontalPadding: 0px
            thumbVerticalPadding: 0px
            minSet: 1
            thumbWidth: 1px
            thumbColor: var(--text_on)
  piece_graph:
    custom_fields:
      graph:
        card:
          type: conditional
          card:
            type: custom:mini-graph-card
            height: 150
            line_width: 4
            lower_bound: 20
            points_per_hour: 1
            hours_to_show: 24
            show:
              fill: fade
              icon: false
              name: false
              state: false
              legend: false
              points: false
              labels: false
  piece_graph_fixe:
    custom_fields:
      graph_fixe:
        card:
          type: custom:mini-graph-card
          height: 150
          line_width: 4
          lower_bound: 20
          points_per_hour: 1
          hours_to_show: 24
          show:
            fill: fade
            icon: false
            name: false
            state: false
            legend: false
            points: false
            labels: false
  jauge_lumiere:
    styles:
      custom_fields:
        lum:
          - position: absolute
          - top: 65%
          - left: 50%
          - width: calc(90% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
  carte_jauge:
    show_icon: true
    show_name: true
    show_state: false
    show_label: false
    show_last_changed: true
    template:
      - police
    styles:
      grid:
        - grid-template-areas: '"i n" "info1 info2 " "info3 info4"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 1fr 1fr 1fr
        - column-gap: 1px
        - row-gap: 1px
      img_cell:
        - border-radius: 50%
        - width: 37px
        - height: 37px
        - background-color: var(--pastille_off)
        - color: var(--text_systeme_info)
        - justifiy-self: start
        - place-self: start
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
      icon:
        - color: var(--icon_off)
        - width: 65%
      name:
        - padding: 0px 0px 0px 0px
        - color: var(--text_on)
        - top: 4%
        - left: 15%
        - position: absolute
        - font-size: 110%
        - font-weight: bold
        - text-align: left
        - place-self: start
      label:
        - padding: 0px 0px 0px 0px
        - color: var(--text_off)
        - top: 17%
        - left: 15%
        - position: absolute
        - font-size: 90%
        - font-style: italic
        - text-align: left
        - place-self: start
      card:
        - height: 140px
        - font-size: 100%
        - padding-top: 1%
        - padding-bottom: 3%
        - padding-left: 1%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
        - line-height: 130%
      custom_fields:
        graph:
          - position: absolute
          - top: 60%
          - left: 50%
          - width: calc(0% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 12
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
        pile:
          - position: absolute
          - top: 5%
          - left: 85%
          - font-size: 90%
          - opacity: 100%
        info1:
          - color: var(--text_systeme_info)
          - padding-left: 10%
          - align-self: middle
          - font-size: 90%
          - font-weight: null
          - text-align: left
        jauge_info1:
          - position: absolute
          - top: 50%
          - left: 7%
          - opacity: 100%
          - width: calc(40% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
        info2:
          - color: var(--text_systeme_info)
          - padding-left: 10%
          - justifiy-self: start
          - font-size: 90%
          - font-weight: null
          - text-align: left
        jauge_info2:
          - position: absolute
          - top: 50%
          - left: 57%
          - opacity: 100%
          - width: calc(40% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
        info3:
          - color: var(--text_systeme_info)
          - padding-left: 10%
          - justifiy-self: start
          - font-size: 90%
          - font-weight: null
          - text-align: left
        jauge_info3:
          - position: absolute
          - top: 80%
          - left: 7%
          - opacity: 100%
          - width: calc(40% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
        info4:
          - color: var(--text_systeme_info)
          - padding-left: 10%
          - justifiy-self: start
          - font-size: 90%
          - font-weight: null
          - text-align: left
        jauge_info4:
          - position: absolute
          - top: 80%
          - left: 57%
          - opacity: 100%
          - width: calc(40% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
    custom_fields:
      jauge_info1:
        card:
          type: custom:bar-card
          entity_row: true
          max: 40
          direction: null
          positions:
            value: 'off'
            name: 'off'
            indicator: 'off'
          height: 8px
          width: 100%
          icon: 'off'
      jauge_info2:
        card:
          type: custom:bar-card
          entity_row: true
          max: 100
          direction: null
          unit_of_measurement: null
          positions:
            value: 'off'
            name: 'off'
            indicator: 'off'
          height: 8px
          width: 100%
          icon: 'off'
      jauge_info3:
        card:
          type: custom:bar-card
          entity_row: true
          max: 1000
          direction: null
          unit_of_measurement: null
          positions:
            value: 'off'
            name: 'off'
            indicator: 'off'
          height: 8px
          width: 100%
          icon: 'off'
      jauge_info4:
        card:
          type: custom:bar-card
          entity_row: true
          max: 1000
          direction: null
          unit_of_measurement: null
          positions:
            value: 'off'
            name: 'off'
            indicator: 'off'
          height: 8px
          width: 100%
          icon: 'off'
  carte_meteo:
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    show_last_changed: false
    template:
      - police
    name: |
      [[[
        return states['sensor.weather_conditions'].state
      ]]]
    label: |
      [[[
        return states['sensor.weather_alerte_couleur_v2'].state +" "+states['sensor.weather_alerte'].state
      ]]]
    icon: |
      [[[
        if (states['weather.beaucouze'].state == 'sunny' )
              return 'mdi:weather-sunny';
        if (states['weather.beaucouze'].state == 'rainy' )
              return 'mdi:weather-rainy';
        if (states['weather.beaucouze'].state == 'partlycloudy' )
              return 'mdi:weather-partly-cloudy';
        if (states['weather.beaucouze'].state == 'cloudy' )
              return 'mdi:weather-cloudy';
         if (states['weather.beaucouze'].state == 'clear-night' )
              return 'mdi:weather-night';
         if (states['weather.beaucouze'].state == 'fog' )
              return 'mdi:weather-fog';
         if (states['weather.beaucouze'].state == 'hail' )
              return 'mdi:weather-hail';
         if (states['weather.beaucouze'].state == 'lightning-rainy' )
              return 'mdi:weather-lightning-rainy';
         if (states['weather.beaucouze'].state == 'lightning' )
              return 'mdi:weather-lightning';
         if (states['weather.beaucouze'].state == 'pourring' )
              return 'mdi:weather-pouring';
         if (states['weather.beaucouze'].state == 'snowy-rainy' )
              return 'mdi:weather-snowy-rainy';
         if (states['weather.beaucouze'].state == 'snowy' )
              return 'mdi:weather-snowy';
         if (states['weather.beaucouze'].state == 'windy-variant' )
              return 'mdi:weather-windy-variant';
         if (states['weather.beaucouze'].state == 'windy' )
              return 'mdi:weather-windy';
            if (states['weather.ta_ville'].state == 'exceptional' )
              return 'mdi:weather-cloudy-alert';
            return 'mdi:weather-sunny';
      ]]]
    styles:
      grid:
        - grid-template-areas: '"i n" "temp vent " "nuage pluie" "uv neige"'
        - grid-template-columns: 1fr 1fr
        - grid-template-rows: 1fr 1fr 1fr 1fr
        - column-gap: 1px
        - row-gap: 1px
      img_cell:
        - border-radius: 50%
        - width: 40px
        - height: 40px
        - background-color: var(--pastille_off)
        - color: var(--text_systeme_info)
        - justifiy-self: start
        - place-self: start
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
      icon:
        - color: var(--icon_off)
        - width: 65%
        - animation: |
            [[[
                  if (states['weather.beaucouze'].state == 'sunny' )
                    return 'rotating 9s infinite'
                  if (states['weather.beaucouze'].state == 'lightning' )
                    return 'blink 2s ease infinite'
                  if (states['weather.beaucouze'].state == 'lightning-rainy' )
                    return 'blink 2s ease infinite'
                  if (states['weather.beaucouze'].state == 'exceptional' )
                    return 'blink 2s ease infinite'
                  if (states['weather.beaucouze'].state == 'windy-variant' )
                    return 'swing 5s ease infinite'
                  if (states['weather.beaucouze'].state == 'windy' )
                    return 'swing 5s ease infinite'
                  return 'swing 10s ease infinite'
            ]]]
        - color: |
            [[[
                  if (states['weather.beaucouze'].state == 'sunny' )
                    return 'gold';
                  if (states['weather.beaucouze'].state == 'rainy' )
                    return 'skyblue';
                  if (states['weather.beaucouze'].state == 'partlycloudy' )
                    return 'lightgrey';
                  if (states['weather.beaucouze'].state == 'cloudy' )
                    return 'silver';
                  if (states['weather.beaucouze'].state == 'clear-night' )
                    return 'lightgrey';
                  if (states['weather.beaucouze'].state == 'fog' )
                    return 'silver';
                  if (states['weather.beaucouze'].state == 'hail' )
                    return 'skyblue';
                  if (states['weather.beaucouze'].state == 'lightning-rainy' )
                    return 'skyblue';
                  if (states['weather.beaucouze'].state == 'lightning' )
                    return 'silver';
                  if (states['weather.beaucouze'].state == 'pourring' )
                    return 'silver';
                  if (states['weather.beaucouze'].state == 'snowy-rainy' )
                    return 'silver';
                  if (states['weather.beaucouze'].state == 'snowy' )
                    return 'silver';
                  if (states['weather.beaucouze'].state == 'windy-variant' )
                    return 'silver';
                  if (states['weather.beaucouze'].state == 'windy' )
                    return 'silver';
                  if (states['weather.beaucouze'].state == 'exceptional' )
                    return 'firebrick';
                  return 'silver';
            ]]]
      name:
        - padding: 0px 0px 0px 0px
        - color: var(--text_on)
        - top: 4%
        - left: 15%
        - position: absolute
        - font-size: 100%
        - font-weight: bold
        - text-align: left
        - place-self: start
      label:
        - padding: 0px 0px 0px 0px
        - top: 13%
        - left: 15%
        - position: absolute
        - font-size: 95%
        - font-style: null
        - text-align: left
        - place-self: start
        - color: |
            [[[
              if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Jaune')
                return 'yellow'
              if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Orange')
                return 'orange'
              if (states['sensor.weather_alerte_couleur_v2'].state == 'Vigilance Rouge')
                return 'red'
              return 'var(--text_on)'
            ]]]
      card:
        - height: 230px
        - font-size: 100%
        - padding-top: 1%
        - padding-bottom: 3%
        - padding-left: 1%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
        - line-height: 130%
      custom_fields:
        soleil:
          - position: absolute
          - top: 4%
          - left: 72%
          - font-size: 90%
          - opacity: 100%
        temp:
          - color: var(--text_systeme_info)
          - padding-left: 10%
          - align-self: middle
          - font-size: 90%
          - font-weight: null
          - text-align: left
          - '--text-color-sensor': |
              [[[
                if (states['sensor.weather_temperature'].state == "unavailable")
                 return 'transparent'
                if (states['sensor.weather_temperature'].state < 19.1)
                 return 'dodgerblue'
                if (states['sensor.weather_temperature'].state > 26.9)
                 return 'tomato'
                return 'lightgrey'
              ]]]
        jauge_temp:
          - position: absolute
          - top: 40%
          - left: 7%
          - opacity: 100%
          - width: calc(40% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
        vent:
          - color: var(--text_systeme_info)
          - padding-left: 10%
          - justifiy-self: start
          - font-size: 90%
          - font-weight: null
          - text-align: left
          - '--text-color-sensor': |
              [[[
                if (states['sensor.weather_conditions_vent'].state == "unavailable")
                 return 'transparent'
                if (states['sensor.weather_conditions_vent'].state > 39.9)
                 return 'tomato'
                return 'lightgrey'
              ]]]
        jauge_vent:
          - position: absolute
          - top: 40%
          - left: 57%
          - opacity: 100%
          - width: calc(40% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
        nuage:
          - color: var(--text_systeme_info)
          - padding-left: 10%
          - justifiy-self: start
          - font-size: 90%
          - font-weight: null
          - text-align: left
          - '--text-color-sensor': |
              [[[
                if (states['sensor.weather_conditions_ciel'].state == "unavailable")
                 return 'transparent'
                if (states['sensor.weather_conditions_ciel'].state > 69.9)
                 return 'tomato'
                return 'lightgrey'
              ]]]
        jauge_nuage:
          - position: absolute
          - top: 62%
          - left: 7%
          - opacity: 100%
          - width: calc(40% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
        pluie:
          - color: var(--text_systeme_info)
          - padding-left: 10%
          - justifiy-self: start
          - font-size: 90%
          - font-weight: null
          - text-align: left
          - '--text-color-sensor': |
              [[[
                if (states['sensor.weather_conditions_pluie'].state == "unavailable")
                 return 'transparent'
                if (states['sensor.weather_conditions_pluie'].state > 39.9)
                 return 'tomato'
                return 'lightgrey'
              ]]]
        jauge_pluie:
          - position: absolute
          - top: 62%
          - left: 57%
          - opacity: 100%
          - width: calc(40% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
        uv:
          - color: var(--text_systeme_info)
          - padding-left: 10%
          - justifiy-self: start
          - font-size: 90%
          - font-weight: null
          - text-align: left
          - '--text-color-sensor': |
              [[[
                if (states['sensor.weather_conditions_uv'].state == "unavailable")
                 return 'transparent'
                if (states['sensor.weather_conditions_uv'].state > 7)
                 return 'tomato'
                return 'lightgrey'
              ]]]
        jauge_uv:
          - position: absolute
          - top: 86%
          - left: 7%
          - opacity: 100%
          - width: calc(40% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
        neige:
          - color: var(--text_systeme_info)
          - padding-left: 10%
          - justifiy-self: start
          - font-size: 90%
          - font-weight: null
          - text-align: left
          - '--text-color-sensor': |
              [[[
                if (states['sensor.weather_conditions_neige'].state == "unavailable")
                 return 'transparent'
                if (states['sensor.weather_conditions_neige'].state > 10)
                 return 'tomato'
                return 'lightgrey'
              ]]]
        jauge_neige:
          - position: absolute
          - top: 86%
          - left: 57%
          - opacity: 100%
          - width: calc(40% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
    custom_fields:
      soleil: |
        [[[
          return states['sensor.weather_soleil'].state
        ]]]
      temp: |
        [[[
          return `<ha-icon
            icon="mdi:thermometer"
            style="width: 20px; height: 20px; color: lightgrey;">
            </ha-icon><span> Température : <span style="color: var(--text-color-sensor);"><b>${states['sensor.weather_temperature_v2'].state} °</span></span>`
        ]]]
      jauge_temp:
        card:
          type: custom:bar-card
          entities:
            - entity: sensor.weather_temperature_v2
              color: tomato
          entity_row: true
          max: 40
          direction: null
          positions:
            value: 'off'
            name: 'off'
            indicator: 'off'
          height: 8px
          width: 100%
          icon: 'off'
      vent: |
        [[[
          return `<ha-icon
            icon="mdi:weather-dust"
            style="width: 20px; height: 20px; color: lightgrey;">
            </ha-icon><span> Vent : <span style="color: var(--text-color-sensor);"><b>${states['sensor.weather_conditions_vent'].state} %</span></span>`
        ]]]
      jauge_vent:
        card:
          type: custom:bar-card
          entities:
            - entity: sensor.weather_conditions_vent
              color: grey
          entity_row: true
          max: 100
          direction: null
          unit_of_measurement: null
          positions:
            value: 'off'
            name: 'off'
            indicator: 'off'
          height: 8px
          width: 100%
          icon: 'off'
      nuage: |
        [[[
          return `<ha-icon
            icon="mdi:weather-cloudy"
            style="width: 20px; height: 20px; color: lightgrey;">
            </ha-icon><span> Nuages : <span style="color: var(--text-color-sensor);"><b>${states['sensor.weather_conditions_ciel'].state} %</span></span>`
        ]]]
      jauge_nuage:
        card:
          type: custom:bar-card
          entities:
            - entity: sensor.weather_conditions_ciel
              color: lightgrey
          entity_row: true
          max: 100
          direction: null
          unit_of_measurement: null
          positions:
            value: 'off'
            name: 'off'
            indicator: 'off'
          height: 8px
          width: 100%
          icon: 'off'
      pluie: |
        [[[
          return `<ha-icon
            icon="mdi:weather-rainy"
            style="width: 20px; height: 20px; color: lightgrey;">
            </ha-icon><span> Pluie : <span style="color: var(--text-color-sensor);"><b>${states['sensor.weather_conditions_pluie'].state} %</span></span>`
        ]]]
      jauge_pluie:
        card:
          type: custom:bar-card
          entities:
            - entity: sensor.weather_conditions_pluie
              color: dodgerblue
          entity_row: true
          max: 100
          direction: null
          unit_of_measurement: null
          positions:
            value: 'off'
            name: 'off'
            indicator: 'off'
          height: 8px
          width: 100%
          icon: 'off'
      uv: |
        [[[
          return `<ha-icon
            icon="mdi:weather-sunny"
            style="width: 20px; height: 20px; color: lightgrey;">
            </ha-icon><span> UV : <span style="color: var(--text-color-sensor);"><b>${states['sensor.weather_conditions_uv'].state}</span></span>`
        ]]]
      jauge_uv:
        card:
          type: custom:bar-card
          entities:
            - entity: sensor.weather_conditions_uv
              color: gold
          entity_row: true
          max: 12
          direction: null
          unit_of_measurement: null
          positions:
            value: 'off'
            name: 'off'
            indicator: 'off'
          height: 8px
          width: 100%
          icon: 'off'
      neige: |
        [[[
          return `<ha-icon
            icon="mdi:weather-snowy-heavy"
            style="width: 20px; height: 20px; color: lightgrey;">
            </ha-icon><span> Neige : <span style="color: var(--text-color-sensor);"><b>${states['sensor.weather_conditions_neige'].state} %</span></span>`
        ]]]
      jauge_neige:
        card:
          type: custom:bar-card
          entities:
            - entity: sensor.weather_conditions_neige
              color: dodgerblue
          entity_row: true
          max: 100
          direction: null
          unit_of_measurement: null
          positions:
            value: 'off'
            name: 'off'
            indicator: 'off'
          height: 8px
          width: 100%
          icon: 'off'
  carte_badge:
    show_icon: true
    show_name: true
    show_state: false
    show_label: false
    template:
      - police
    styles:
      img_cell:
        - border-radius: 50%
        - width: 30px
        - height: 30px
        - background-color: var(--pastille_off)
        - color: var(--text_systeme_info)
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
        - margin-top: 10%
      icon:
        - width: 70%
        - color: var(--icon_off)
      label:
        - font-weight: null
        - font-size: 10px%
        - color: var(--text_on)
      state:
        - font-weight: null
        - font-size: 10px
        - color: var(--text_on)
      name:
        - font-weight: bold
        - font-size: 11px
        - padding-top: 10%
        - color: var(--text_on)
      card:
        - border-radius: 15px
        - padding: 02px
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 8%
          - top: 60%
          - height: 28%
          - width: 28%
          - font-size: 70%
          - line-height: 127%
          - font-weight: null
    state:
      - value: 'off'
        styles:
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
          label:
            - color: var(--text_off)
          state:
            - color: var(--text_off)
    double_tap_action:
      action: more-info
  state_lumiere:
    state:
      - value: 'on'
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--button-card-light-color)
          img_cell:
            - background-color: var(--button-card-light-color)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: 'off'
        color: grey
        styles:
          card:
            - animation: ball-scale2 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
  state_porte:
    state:
      - value: 'on'
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--porte)
          img_cell:
            - background-color: var(--porte)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: 'off'
        color: grey
        styles:
          card:
            - animation: ball-scale2 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
  state_mouv:
    state:
      - value: 'on'
        icon: mdi:run-fast
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--mouv)
          img_cell:
            - background-color: var(--mouv)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: 'off'
        color: grey
        styles:
          card:
            - animation: ball-scale2 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
  state_person:
    state:
      - value: Travail
        styles:
          label:
            - color: orange
          state:
            - color: orange
      - value: Collège
        styles:
          label:
            - color: orange
          state:
            - color: orange
      - value: Lycée
        styles:
          label:
            - color: orange
          state:
            - color: orange
      - value: home
        operator: '!='
        styles:
          label:
            - color: orange
          state:
            - color: orange
      - value: 'off'
        styles:
          label:
            - color: orange
          state:
            - color: orange
  state_alarme:
    state:
      - value: disarmed
        color: grey
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
      - value: 'off'
        color: grey
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
      - value: armed_away
        color: red
        styles:
          card:
            - background-color: var(--back_securite)
          img_cell:
            - background-color: var(--back_securite)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: armed_night
        color: red
        styles:
          card:
            - background-color: var(--back_securite)
          img_cell:
            - background-color: var(--back_securite)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: 'on'
        color: red
        styles:
          card:
            - background-color: var(--back_securite)
          img_cell:
            - background-color: var(--back_securite)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: arming
        color: gold
        styles:
          card:
            - background-color: var(--back_securite)
          img_cell:
            - background-color: var(--back_securite)
          icon:
            - animation: blink 1s ease infinite
            - color: var(--icon_on)
            - transition: 1s ease
      - value: pending
        color: red
        styles:
          card:
            - background-color: var(--back_securite)
          img_cell:
            - background-color: var(--back_securite)
          icon:
            - animation: blink 1s ease infinite
            - color: var(--icon_on)
            - transition: 1s ease
      - value: triggered
        color: red
        styles:
          card:
            - background-color: var(--back_securite)
          img_cell:
            - background-color: var(--back_securite)
          icon:
            - animation: blink 1s ease infinite
            - color: var(--icon_on)
            - transition: 1s ease
  state_temp:
    state:
      - value: 26.9
        operator: '>'
        styles:
          card: null
          img_cell:
            - background-color: tomato
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
          state:
            - font-weight: bold
      - value: 19.1
        operator: <
        styles:
          card: null
          img_cell:
            - background-color: dodgerblue
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
          state:
            - font-weight: bold
  state_temp_exterieur:
    state:
      - value: 25
        operator: '>'
        styles:
          card: null
          img_cell:
            - background-color: tomato
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
          state:
            - font-weight: bold
      - value: 10
        operator: <
        styles:
          card: null
          img_cell:
            - background-color: dodgerblue
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
          state:
            - font-weight: bold
  state_humidite:
    state:
      - value: 70
        operator: '>'
        styles:
          card: null
          img_cell:
            - background-color: dodgerblue
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
          state:
            - font-weight: bold
      - value: 40
        operator: <
        styles:
          card: null
          img_cell:
            - background-color: tomato
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
          state:
            - font-weight: bold
  state_luminosite:
    state:
      - value: 500
        operator: '>'
        styles:
          img_cell:
            - background-color: tomato
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: 50
        operator: <
        styles:
          card: null
          img_cell:
            - background-color: royalblue
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
  state_imprimante:
    state:
      - value: idle
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_imprim)
          img_cell:
            - background-color: var(--pastille_imprim)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: printing
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_imprim)
          img_cell:
            - background-color: var(--pastille_imprim)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: stopped
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_imprim)
          img_cell:
            - background-color: var(--pastille_imprim)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: unavailable
        color: var(--text_off)
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
      - value: 'off'
        color: var(--text_off)
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
  state_appareil:
    state:
      - value: 'on'
        styles:
          card:
            - background-color: var(--pastille_appareil)
          img_cell:
            - background-color: var(--pastille_appareil)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: 'off'
        color: var(--text_off)
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
  state_musique:
    state:
      - value: 'on'
        styles:
          card:
            - background-color: dimgrey
          img_cell:
            - background-color: dimgrey
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: playing
        styles:
          card:
            - background-color: dimgrey
          img_cell:
            - background-color: dimgrey
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: 'off'
        color: var(--text_off)
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
  state_machine:
    state:
      - value: 'on'
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_machine)
          img_cell:
            - background-color: var(--pastille_machine)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: 'off'
        color: var(--text_off)
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
  state_lave_linge:
    state:
      - value: 'on'
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_machine)
          img_cell:
            - background-color: var(--pastille_machine)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: veille
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_machine)
          img_cell:
            - background-color: var(--pastille_machine)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: 'off'
        color: var(--text_off)
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
  state_aspi:
    state:
      - value: 'on'
        styles:
          icon:
            - animation: rotating 4s ease infinite
            - color: var(--icon_on)
            - transition: 1s ease
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_aspi)
          img_cell:
            - background-color: var(--pastille_aspi)
      - value: cleaning
        styles:
          icon:
            - animation: rotating 4s ease infinite
            - color: var(--icon_on)
            - transition: 1s ease
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_aspi)
          img_cell:
            - background-color: var(--pastille_aspi)
      - value: returning
        styles:
          icon:
            - animation: rotating 4s ease infinite
            - color: var(--icon_on)
            - transition: 1s ease
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_aspi)
          img_cell:
            - background-color: var(--pastille_aspi)
      - value: idle
        styles:
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_aspi)
          img_cell:
            - background-color: var(--pastille_aspi)
      - value: paused
        styles:
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_aspi)
          img_cell:
            - background-color: var(--pastille_aspi)
      - value: docked
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
      - value: 'off'
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
      - value: error
        styles:
          icon:
            - animation: blink 1s ease infinite
            - color: firebrick
            - transition: 1s ease
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          name:
            - color: firebrick
          label:
            - color: firebrick
            - font-weight: bold
    tap_action:
      action: navigate
      navigation_path: /lovelace/Aspis
  state_tv:
    state:
      - value: 'on'
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_multimedia)
          img_cell:
            - background-color: var(--pastille_multimedia)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: home
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_multimedia)
          img_cell:
            - background-color: var(--pastille_multimedia)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: 'off'
        color: var(--text_off)
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 1s ease
  state_batterie:
    show_state: true
    show_last_changed: true
    units: '%'
    state:
      - value: 50
        operator: '>'
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_appareil)
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: 20
        operator: '>'
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: tomato
          img_cell:
            - background-color: tomato
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
      - value: 0
        operator: '>'
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: firebrick
          img_cell:
            - background-color: firebrick
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
            - animation: blink 1s ease infinite
      - value: 0
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: firebrick
          img_cell:
            - background-color: firebrick
          icon:
            - color: var(--icon_on)
            - transition: 1s ease
            - animation: blink 1s ease infinite
      - value: unavailable
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - opacity: 100%
          img_cell:
            - background-color: black
          icon:
            - color: red
            - transition: 1s ease
          name:
            - color: red
          label:
            - color: red
            - font-size: 65%
          state:
            - color: red
            - font-weight: bold
  state_annonces:
    icon: |
      [[[
      if (states['script.cest_lheure_daller_a_lecole'].state == "on" )
        return "mdi-bus-school";
      if (states['script.1590760144160'].state == "on" )
        return "phu:rooms-mancave";
                if (states['script.gouter'].state == "on" )
                  return "mdi:food-croissant";
                if (states['script.a_table'].state == "on" )
                  return "mdi:silverware-variant";
                if (states['script.annonce_au_lit'].state == "on" )
                  return "mdi:sleep";
                if (states['script.tom_va_se_coucher'].state == "on" )
                  return "mdi:sleep";
                return "mdi:bullhorn";
      ]]]
    label: |
      [[[
                if (states['script.cest_lheure_daller_a_lecole'].state == "on" )
                  return " Enfants";
                if (states['script.1590760144160'].state == "on" )
                  return " Fin des écrans";
                if (states['script.gouter'].state == "on" )
                  return " Goûter ";
                if (states['script.a_table'].state == "on" )
                  return " A table !";
                if (states['script.annonce_au_lit'].state == "on" )
                  return " Filles au lit";
                if (states['script.tom_va_se_coucher'].state == "on" )
                  return " Tom au lit";
                return "Aucune";
      ]]]
    state:
      - value: 'on'
        styles:
          icon:
            - color: var(--icon_on)
          img_cell:
            - background: var(--pastille_appareil)
          card:
            - background-color: var(--pastille_appareil)
          state:
            - font-weight: bold
      - value: 'off'
        styles:
          icon:
            - color: var(--icon_off)
            - opacity: 100%
          card:
            - opacity: 100%
  state_modes:
    icon: |
      [[[
        if (states['input_boolean.nilemato'].state == "on" && states['sensor.compteur_modes'].state == 1)
          return "mdi:human-female-boy";
        if (states['automation.annonce_ecole'].state == "on" && states['sensor.compteur_modes'].state == 2)
          return "mdi:bus-school";
        if (states['input_boolean.belle_saison'].state == "on" && states['sensor.compteur_modes'].state == 1)
          return "mdi:sunglasses";
        if (states['input_boolean.piscine'].state == "on" && states['sensor.compteur_modes'].state == 1)
          return "mdi:swim";
        if (states['input_boolean.vacances'].state == "on" && states['sensor.compteur_modes'].state == 1)
          return "mdi:airplane";
        if (states['input_boolean.noel'].state == "on" && states['sensor.compteur_modes'].state == 1)
          return "phu:christmas-tree-v2";
        if (states['input_boolean.halloween'].state == "on" && states['sensor.compteur_modes'].state == 1)
          return "mdi:halloween";
        if (states['sensor.compteur_modes'].state == 0)
          return "mdi:cog";
        return "mdi:cog" ;
      ]]]
    name: |
      [[[
        if (states['input_boolean.nilemato'].state == "on" && states['sensor.compteur_modes'].state == 1)
          return "Enfants";
        if (states['automation.annonce_ecole'].state == "on" && states['sensor.compteur_modes'].state == 2)
          return "Ecole";
        if (states['input_boolean.belle_saison'].state == "on" && states['sensor.compteur_modes'].state == 1)
          return "Eté";
        if (states['input_boolean.piscine'].state == "on" && states['sensor.compteur_modes'].state == 1)
          return "Piscine";
        if (states['input_boolean.vacances'].state == "on" && states['sensor.compteur_modes'].state == 1)
          return "Vacances";
        if (states['input_boolean.noel'].state == "on" && states['sensor.compteur_modes'].state == 1)
          return "Noël";
        if (states['input_boolean.halloween'].state == "on" && states['sensor.compteur_modes'].state == 1)
          return "Halloween";
        if (states['sensor.compteur_modes'].state == 0)
          return "Réglages";
        return "Réglages" ;
      ]]]
    state:
      - value: 'on'
        styles:
          icon:
            - color: var(--icon_on)
          img_cell:
            - background: |
                [[[
                  if (states['input_boolean.nilemato'].state == "on" && states['sensor.compteur_modes'].state == 1)
                    return "var(--pastille_appareil)";
                  if (states['automation.annonce_ecole'].state == "on" && states['sensor.compteur_modes'].state == 2)
                    return "var(--pastille_appareil)";
                  if (states['input_boolean.belle_saison'].state == "on" && states['sensor.compteur_modes'].state == 1)
                    return "rgba(255,215,0,0.7)";
                  if (states['input_boolean.piscine'].state == "on" && states['sensor.compteur_modes'].state == 1)
                    return "var(--pastille_appareil)";
                  if (states['input_boolean.vacances'].state == "on" && states['sensor.compteur_modes'].state == 1)
                    return "rgba(255,215,0,0.7)";
                  if (states['input_boolean.noel'].state == "on" && states['sensor.compteur_modes'].state == 1)
                    return "rgba(0,128,0,0.7)";
                  if (states['input_boolean.halloween'].state == "on" && states['sensor.compteur_modes'].state == 1)
                    return "tomato";
                  if (states['sensor.compteur_modes'].state == 0)
                    return "var(--pastille_off)";
                  return "grey" ;
                ]]]
          card:
            - background-color: |
                [[[
                  if (states['input_boolean.nilemato'].state == "on" && states['sensor.compteur_modes'].state == 1)
                    return "var(--pastille_appareil)";
                  if (states['automation.annonce_ecole'].state == "on" && states['sensor.compteur_modes'].state == 2)
                    return "var(--pastille_appareil)";
                  if (states['input_boolean.belle_saison'].state == "on" && states['sensor.compteur_modes'].state == 1)
                    return "rgba(255,215,0,0.7)";
                  if (states['input_boolean.piscine'].state == "on" && states['sensor.compteur_modes'].state == 1)
                    return "var(--pastille_appareil)";
                  if (states['input_boolean.vacances'].state == "on" && states['sensor.compteur_modes'].state == 1)
                    return "rgba(255,215,0,0.7)";
                  if (states['input_boolean.noel'].state == "on" && states['sensor.compteur_modes'].state == 1)
                    return "rgba(0,128,0,0.7)";
                  if (states['input_boolean.halloween'].state == "on" && states['sensor.compteur_modes'].state == 1)
                    return "tomato";
                  if (states['sensor.compteur_modes'].state == 0)
                    return "var(--pastille_off)";
                  return "grey" ;
                ]]]
          state:
            - font-weight: bold
  state_unavailable:
    state:
      - value: unavailable
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - opacity: 100%
          img_cell:
            - background-color: black
          icon:
            - color: red
            - animation: blink 0.8s ease infinite
            - transition: 1s ease
          name:
            - color: red
          label:
            - color: red
          state:
            - color: red
  carte_personne:
    show_entity_picture: true
    show_state: false
    template:
      - base
      - base_large
      - state_person
    styles:
      entity_picture:
        - width: 100%
      custom_fields:
        pile:
          - position: absolute
          - top: 6%
          - left: 85%
          - font-size: 10px
          - width: calc(70% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
        bouton:
          - position: absolute
          - top: 70%
          - left: 50%
          - width: calc(90% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
  carte_personne_bouton:
    show_name: false
    show_state: true
    show_icon: true
    show_label: false
    show_last_changed: false
    show_units: false
    layout: icon_state
    styles:
      card:
        - border-radius: 0px
        - height: 30px
        - padding: 0px
      icon:
        - color: rgba(211,211,211,0.8)
        - width: 75%
      state:
        - color: rgba(211,211,211,0.8)
        - font-size: 11px
        - margin-right: 25%
        - font-weight: bold
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  carte_appareil:
    styles:
      custom_fields:
        pile:
          - position: absolute
          - top: 6%
          - left: 85%
          - font-weight: bold
          - font-size: 10px
          - width: calc(70% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
        bouton:
          - position: absolute
          - top: 70%
          - left: 50%
          - width: calc(90% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
        jauge:
          - opacity: 80%
          - position: absolute
          - top: 45%
          - left: 0%
          - width: calc(100% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 5
        barre_imprimante_noire:
          - opacity: 90%
          - position: absolute
          - top: 84%
          - left: 30%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
        barre_imprimante_couleur:
          - opacity: 90%
          - position: absolute
          - top: 84%
          - left: 60%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
  carte_appareil_jauge:
    custom_fields:
      jauge:
        card:
          type: custom:bar-card
          name: Batterie
          severity:
            - color: Red
              from: 0
              to: 30
            - color: tomato
              from: 31
              to: 50
            - color: var(--pastille_off)
              from: 51
              to: 100
          entity_row: true
          unit_of_measurement: '%'
          positions:
            value: inside
            name: 'off'
          height: 13px
          width: 100%
          icon: 'off'
          color: var(--pastille_off)
          style: |-
            bar-card-value {
              margin-right: 18%;
              font-size: 12px;
              font-weight: bold;
              color: lightgrey;
            }
  carte_appareil_bouton:
    show_name: false
    show_state: false
    show_label: false
    show_last_changed: false
    styles:
      card:
        - border-radius: 5px
        - height: 25px
      icon:
        - color: var(--icon_off)
        - width: 40%
        - padding-bottom: 5px
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  carte_tv:
    styles:
      card:
        - height: 118px
      label:
        - line-height: 90%
      custom_fields:
        info1:
          - color: darkslategrey
          - padding-left: 0%
          - position: absolute
          - top: 47%
          - left: 05%
          - font-size: 90%
          - font-weight: null
          - text-align: left
        barre_volume:
          - position: absolute
          - opacity: 100%
          - top: 47%
          - left: 5%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
        volume:
          - position: absolute
          - opacity: 100%
          - top: 75%
          - left: 50%
          - width: calc(90% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
  bouton_tv_volume:
    show_name: false
    styles:
      card:
        - border-radius: 20%
        - background-color: var(--pastille_multimedia)
      icon:
        - color: var(--pastille_multimedia)
        - width: 90%
    tap_action:
      action: toggle
  carte_securite:
    show_state: true
    styles:
      custom_fields:
        bouton:
          - position: absolute
          - top: 70%
          - left: 50%
          - width: calc(90% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
        pile:
          - position: absolute
          - top: 6%
          - left: 85%
          - font-weight: bold
          - font-size: 10px
          - width: calc(70% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
  carte_securite_bouton:
    show_name: false
    show_state: false
    show_label: false
    show_last_changed: false
    styles:
      card:
        - border-radius: 5px
        - height: 25px
      icon:
        - color: var(--icon_off)
        - width: 40%
        - padding-bottom: 5px
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  carte_multimedia:
    aspect_ratio: 1/1
    styles:
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 21%
          - top: 03%
          - height: 10%
          - width: 10%
          - font-size: 85%
          - line-height: 137%
          - font-weight: null
        cartes:
          - position: absolute
          - top: 43%
          - left: 50%
          - width: calc(100% + 10px)
          - transform: translate(-50%, calc(-50% + 10px))
  base_verticale_centree:
    show_icon: true
    show_name: true
    show_state: false
    show_label: false
    show_last_changed: false
    template:
      - police
    styles:
      img_cell:
        - background-color: var(--pastille_off)
        - border-radius: 50%
        - width: 33px
        - height: 33px
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
      icon:
        - width: 65%
        - color: var(--icon_off)
      name:
        - padding-top: 1px
        - padding-bottom: 1px
        - color: var(--text_on)
        - font-size: 80%
        - font-weight: null
        - text-align: left
        - white-space: normal
      state:
        - color: var(--text_on)
        - font-size: 80%
        - font-weight: null
        - text-align: left
        - white-space: normal
      label:
        - color: var(--text_on)
        - font-size: 70%
        - font-weight: null
        - text-align: center
      card:
        - padding-left: 1px
        - padding-right: 1px
        - font-size: 100%
        - height: 70px
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
        - animation: ball-scale 0.2s
  titre_section:
    show_icon: false
    show_name: true
    show_state: false
    show_label: true
    template:
      - police
    styles:
      name:
        - font-size: 16px
        - font-weight: bold
        - color: var(--text_on)
        - justify-self: start
      label:
        - font-size: 90%
        - color: var(--text_off)
        - justify-self: start
      card:
        - height: 33px
        - padding: 03%
        - border-radius: 0px
        - line-height: 100%
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
    style:
      .: |
        ha-card {
            --ha-card-background: none !important;
            box-shadow: none !important;
            font-family: Avenir
  badge_1_auto:
    show_icon: true
    show_name: false
    show_state: false
    show_label: true
    template:
      - police
    styles:
      label:
        - font-weight: bold
        - font-size: 70%
        - color: lightgrey
        - padding-left: 1px
      grid:
        - grid-template-areas: '"i l" '
      img_cell:
        - background-color: transparent
        - border-radius: 50%
        - width: 20px
        - height: 20px
        - padding-bottom: 4px
      icon:
        - width: 90%
      card:
        - border-radius: 20px
        - height: 30px
        - width: auto
        - padding: 0px 05px 0px 04px
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
    double_tap_action:
      action: more-info
  badge_2_auto:
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    template:
      - police
    styles:
      name:
        - justify-self: start
        - padding-top: 0px
        - font-weight: null
        - font-size: 70%
        - font-weight: bold
        - color: lightgray
      label:
        - justify-self: start
        - font-weight: null
        - font-size: 70%
        - font-weight: null
        - color: darkgray
      grid:
        - grid-template-areas: '"i n" "i l" '
        - grid-template-columns: 1fr 75%
        - grid-template-rows: min-content 1fr
      img_cell:
        - background-color: transparent
        - border-radius: 50%
        - place-self: start
        - text-align: start
        - width: 20px
        - height: 20px
      icon:
        - width: 90%
      card:
        - border-radius: 10px
        - height: 38px
        - padding-right: 8px
        - padding-left: 4px
        - padding-top: 3px
        - padding-bottom: 04px
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
    double_tap_action:
      action: more-info
  badge_2_regulier:
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    template:
      - police
    styles:
      name:
        - justify-self: start
        - padding-top: 0px
        - font-weight: null
        - font-size: 70%
        - font-weight: bold
        - color: lightgray
      label:
        - justify-self: start
        - font-weight: null
        - font-size: 70%
        - font-weight: null
        - color: darkgray
      grid:
        - grid-template-areas: '"i n" "i l" '
        - grid-template-columns: 1fr 75%
        - grid-template-rows: min-content 1fr
      img_cell:
        - background-color: transparent
        - border-radius: 50%
        - place-self: start
        - text-align: start
        - width: 20px
        - height: 20px
      icon:
        - width: 85%
      card:
        - border-radius: 20px
        - height: 32px
        - width: auto
        - padding-right: 4px
        - padding-left: 4px
        - padding-top: 3px
        - padding-bottom: 04px
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
    double_tap_action:
      action: more-info
  carte_systeme:
    styles:
      custom_fields:
        ic:
          - position: absolute
          - top: 2%
          - left: 113%
          - width: calc(55% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
          - opacity: 100%
        graph:
          - position: absolute
          - top: 70%
          - left: 50%
          - width: calc(100% + 15px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 12
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
        info1:
          - color: var(--text_systeme_info)
          - position: absolute
          - top: 55px
          - left: 10px
          - font-size: 90%
          - font-weight: null
          - text-align: left
          - white-space: normal
        info2:
          - color: var(--text_systeme_info)
          - position: absolute
          - top: 75px
          - left: 10px
          - font-size: 90%
          - font-weight: null
          - text-align: left
        info3:
          - color: var(--text_systeme_info)
          - position: absolute
          - top: 95px
          - left: 10px
          - font-size: 90%
          - font-weight: null
          - text-align: left
        info4:
          - color: var(--text_systeme_info)
          - position: absolute
          - top: 115px
          - left: 10px
          - font-size: 90%
          - font-weight: null
          - text-align: left
  effet:
    extra_styles: |
      @keyframes ball-scale {
        from {
          transform: scale(1);
        }
        to {
          transform: scale(0.90);
        }
      }
      @keyframes ball-scale2 {
        from {
          transform: scale(1);
        }
        to {
          transform: scale(0.90);
        }
      }

      @keyframes ball-scale2 {
        from {
          transform: scale(1);
        }
        to {
          transform: scale(0.90);
        }
      }
      @keyframes ball-scale2 {
        from {
          transform: scale(1);
        }
        to {
          transform: scale(0.90);
        }
      }
title: Chez On
views:
  - theme: Backend-selected
    icon: mdi:home
    visible:
      - user: 76afcf1927a948b19530bcbf1074ac59
      - user: 2f0040afe95a4514ade3c049a0b5d479
      - user: d8316597eafd4333b737464a5b4c62d0
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - cards:
              - type: vertical-stack
                cards:
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: >
                      [[[ return states['sensor.time'].state + " 
                      "+states['sensor.bonjour'].state]]]
                  - type: horizontal-stack
                    cards:
                      - type: custom:button-card
                        entity: sensor.compteur_home
                        name: Personnes
                        icon: mdi:home-account
                        template:
                          - badge_1_auto
                        label: |
                          [[[
                            return states['sensor.compteur_home'].state
                          ]]]
                        styles:
                          icon:
                            - color: |
                                [[[
                                  if (states['sensor.compteur_home'].state == 0)
                                    return "red" ;
                                  return "darkgrey";
                                ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Personnes
                      - type: custom:button-card
                        entity: sensor.temp_moyenne_rdc
                        name: Climat
                        icon: mdi:thermometer
                        template:
                          - badge_1_auto
                        label: |
                          [[[
                            if (entity.state == 'unavailable')
                              return "HS" ;
                            return states['sensor.temp_moyenne_rdc'].state +"°- "+states['sensor.temp_moyenne_etage'].state+"°";
                          ]]]
                        styles:
                          icon:
                            - color: |
                                [[[
                                  if (entity.state < 19.1 || states['sensor.temp_moyenne_etage'].state < 19.1) return 'dodgerblue'
                                  if (entity.state > 26.9 || states['sensor.temp_moyenne_etage'].state > 26.9) return 'tomato'
                                  else return 'darkgrey'
                                ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Temp
                      - type: custom:button-card
                        entity: binary_sensor.portes
                        name: Portes
                        template:
                          - badge_1_auto
                        label: |
                          [[[
                            if (states['sensor.compteur_portes'].state == 0)
                              return "Fermées"
                            if (states['sensor.compteur_portes'].state == 1)
                              return states['sensor.compteur_portes'].state +" ouverte"
                            return states['sensor.compteur_portes'].state +" ouvertes"
                          ]]]
                        styles:
                          icon:
                            - color: |
                                [[[
                                  if (states['binary_sensor.portes'].state == "on")
                                    return "red" ;
                                  return "darkgrey";
                                ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Portes
                      - type: custom:button-card
                        entity: binary_sensor.mouvements
                        name: Mouvements
                        template:
                          - badge_1_auto
                        label: |
                          [[[
                            if (states['sensor.compteur_mouvement'].state == 0)
                              return "Aucun"
                            if (states['sensor.compteur_mouvement'].state == 1)
                              return states['sensor.compteur_mouvement'].state +" détecté"
                            return states['sensor.compteur_mouvement'].state +" détectés"
                          ]]]
                        styles:
                          icon:
                            - color: |
                                [[[
                                  if (states['binary_sensor.mouvements'].state == "on")
                                    return "red" ;
                                  return "darkgrey";
                                ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Mouvements
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: alarm_control_panel.alarme
                        name: Alarme
                        icon: |
                          [[[
                            if (entity.state == "disarmed" )
                              return "mdi:shield-off";
                            if (entity.state == "armed_away" )
                              return "mdi:shield-lock";
                            if (entity.state == "armed_home" )
                              return "mdi:shield-home";
                            if (entity.state == "armed_night" )
                              return "mdi:shield-moon";
                            if (entity.state == "arming" )
                              return "mdi:shield-half-full";
                            if (entity.state == "triggered" )
                              return "mdi:shield-alert";
                            return "mdi:shield-off";
                          ]]]
                        template:
                          - base
                          - base_large
                          - carte_securite
                          - state_alarme
                          - state_unavailable
                        custom_fields:
                          bouton:
                            card:
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: script.alarme_disarmed
                                  template:
                                    - carte_securite_bouton
                                - type: custom:button-card
                                  entity: script.alarme_armed_away
                                  template:
                                    - carte_securite_bouton
                                - type: custom:button-card
                                  entity: script.alarme_armed_night
                                  template:
                                    - carte_securite_bouton
                              columns: 3
                              square: false
                        double_tap_action:
                          action: call-service
                          service: script.alarme_on_off
                          service_data: null
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Alarmes
                      - type: custom:button-card
                        entity: alarm_control_panel.aarlo_sonnette
                        template:
                          - base
                          - base_large
                          - carte_securite
                          - state_alarme
                          - state_unavailable
                        name: |
                          [[[ return "Sonnette "]]]
                        icon: phu:arlo-video-doorbell
                        custom_fields:
                          pile: |
                            [[[
                              if (states['sensor.aarlo_battery_level_sonnette'].state >= 50)
                              return `<ha-icon
                                icon="mdi:battery"
                                style="width: 12px; height: 12px; color: rgba(211,211,211,0.8);">
                                </ha-icon><span><span style="color: rgba(211,211,211,0.8);">${states['sensor.aarlo_battery_level_sonnette'].state}%</span></span>`
                              if (states['sensor.aarlo_battery_level_sonnette'].state < 20)
                              return `<ha-icon
                                icon="mdi:battery-20"
                                style="width: 12px; height: 12px; color: red;">
                                </ha-icon><span><span style="color: rgba(211,211,211,0.8);">${states['sensor.aarlo_battery_level_sonnette'].state}%</span></span>`
                              if (states['sensor.aarlo_battery_level_sonnette'].state < 50)
                              return `<ha-icon
                                icon="mdi:battery-50"
                                style="width: 12px; height: 12px; color: tomato;">
                                </ha-icon><span><span style="color: rgba(211,211,211,0.8);">${states['sensor.aarlo_battery_level_sonnette'].state}%</span></span>`
                            ]]]
                          bouton:
                            card:
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: script.alarme_sonnette_disarmed
                                  template:
                                    - carte_securite_bouton
                                - type: custom:button-card
                                  entity: script.alarme_sonnette_armee
                                  template:
                                    - carte_securite_bouton
                                - type: custom:button-card
                                  entity: switch.aarlo_snapshot_sonnette
                                  template:
                                    - carte_securite_bouton
                              columns: 3
                              square: false
                        double_tap_action:
                          action: call-service
                          service: script.alarme_sonnette_on_off
                          service_data: null
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Alarmes
                  - type: conditional
                    conditions:
                      - entity: alarm_control_panel.camera_g3
                        state: armed_away
                    card:
                      type: horizontal-stack
                      cards:
                        - camera_view: live
                          type: picture-glance
                          title: Salon
                          entities:
                            - entity: alarm_control_panel.camera_g3
                            - entity: binary_sensor.mouv_camera_g3
                            - entity: device_tracker.camera_hub_g3_2725
                          camera_image: camera.camera_hub_g3_2725
                          aspect_ratio: 1/1
                        - camera_view: live
                          type: picture-glance
                          title: Garage
                          entities:
                            - entity: alarm_control_panel.camera_g2hpro
                            - entity: binary_sensor.mouv_camera_g2hpro
                          camera_image: camera.camera_g2hpro
                          aspect_ratio: 1/1
                  - type: conditional
                    conditions:
                      - entity: alarm_control_panel.aarlo_sonnette
                        state: armed_away
                    card:
                      entity: camera.aarlo_sonnette
                      aspect_ratio: square
                      card_size: 3
                      hide:
                        - title
                        - date
                      image_click: play
                      show:
                        - motion
                        - sound
                        - image_date
                        - signal_strength
                        - captured_today
                        - image_date
                        - on_off
                        - snapshot
                        - battery_level
                      top_date: true
                      top_status: false
                      top_title: false
                      type: custom:aarlo-glance
                  - type: horizontal-stack
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.le_bureau_next_timer
                            state_not: unavailable
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_bureau
                          name: Bureau
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.la_cuisine_next_timer
                            state_not: unavailable
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_cuisine
                          name: Cuisine
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.le_salon_next_timer
                            state_not: unavailable
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_salon
                          name: Salon
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.aurel_s_fire_tv_cube_next_timer
                            state_not: unavailable
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_fire_tv
                          name: Fire TV
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.la_salle_de_bain_next_timer
                            state_not: unavailable
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_sdb
                          name: SDB
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.papa_next_timer
                            state_not: unavailable
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_aurel
                          name: Aurel
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.maman_next_timer
                            state_not: unavailable
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_alex
                          name: Alex
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.tom_next_timer
                            state_not: unavailable
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_tom
                          name: Tom
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.nina_next_timer
                            state_not: unavailable
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_nina
                          name: Nina
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.leane_next_timer
                            state_not: unavailable
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_leane
                          name: Léane
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                      - type: conditional
                        conditions:
                          - entity: sensor.manon_next_timer
                            state_not: unavailable
                        card:
                          type: custom:button-card
                          entity: sensor.minuteur_manon
                          name: Manon
                          icon: mdi:timer-sand
                          show_state: true
                          show_label: false
                          show_last_update: false
                          template:
                            - base
                            - base_petite
                  - square: false
                    columns: 6
                    type: grid
                    cards:
                      - type: custom:button-card
                        name: Lumière
                        entity: light.tout
                        show_name: false
                        template:
                          - carte_badge
                          - state_lumiere
                          - state_unavailable
                        label: |
                          [[[
                            if (states['sensor.compteur_lumiere'].state == 0)
                              return "Eteintes"
                            if (states['sensor.compteur_lumiere'].state == 1)
                              return states['sensor.compteur_lumiere'].state +" allumée"
                            return states['sensor.compteur_lumiere'].state +" allumées"
                          ]]]
                        styles:
                          img_cell:
                            - margin-bottom: 5px
                          icon:
                            - color: darkgrey
                          card:
                            - background-color: |
                                [[[
                                  if (states['light.tout'].state == "on")
                                    return "#ccac00" 
                                  return ""
                                ]]]
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_lumiere'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_lumiere'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_lumiere'].state )
                            ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Lumières
                      - type: custom:button-card
                        name: Aspi
                        entity: group.aspis
                        show_name: false
                        icon: phu:roborock
                        template:
                          - carte_badge
                          - state_aspi
                          - state_unavailable
                        label: |
                          [[[
                            if (states['sensor.compteur_aspi'].state == 0)
                              return "En charge"
                            if (states['sensor.compteur_aspi'].state == 1)
                              return states['sensor.compteur_aspi'].state +" en cours"
                            return states['sensor.compteur_aspi'].state +" en cours"
                          ]]]
                        styles:
                          img_cell:
                            - margin-bottom: 5px
                          icon:
                            - color: darkgrey
                          card:
                            - background-color: |
                                [[[
                                  if (states['group.aspis'].state == "on")
                                    return "#0077ea" 
                                  return ""
                                ]]]
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_aspi'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_aspi'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_aspi'].state )
                            ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Aspis
                      - type: custom:button-card
                        entity: sensor.musique3
                        name: Musique
                        show_name: false
                        icon: mdi:speaker-multiple
                        template:
                          - carte_badge
                          - state_musique
                          - state_unavailable
                        label: |
                          [[[
                            if (states['sensor.musique3'].state == 'off' )
                              return "Tous éteints" ;
                            return "En cours";
                          ]]]
                        styles:
                          img_cell:
                            - margin-bottom: 5px
                          icon:
                            - color: darkgrey
                          card:
                            - background-color: |
                                [[[
                                  if (states['sensor.musique3'].state == "off")
                                    return "" 
                                  return "#0077ea"
                                ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Musique
                      - type: custom:button-card
                        entity: group.tv
                        name: TV
                        show_name: false
                        icon: mdi:television
                        template:
                          - carte_badge
                          - state_tv
                          - state_unavailable
                        label: |
                          [[[
                            if (states['sensor.compteur_tv'].state == '0')
                              return "Tous éteints"
                            if (states['sensor.compteur_tv'].state == '1')
                              return states['sensor.compteur_tv'].state +" allumée"
                            return states['sensor.compteur_tv'].state +" allumées"
                          ]]]
                        styles:
                          img_cell:
                            - margin-bottom: 5px
                          icon:
                            - color: darkgrey
                          card:
                            - background-color: |
                                [[[
                                  if (states['group.tv'].state == "on")
                                    return "#0077ea" 
                                  return ""
                                ]]]
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_tv'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_tv'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_tv'].state ) ]]]
                        tap_action:
                          action: more-info
                      - type: custom:button-card
                        name: Autres
                        entity: group.autre
                        show_name: false
                        icon: mdi:home-search
                        template:
                          - carte_badge
                          - state_machine
                          - state_unavailable
                        label: |
                          [[[
                            if (states['sensor.compteur_autre'].state == 0)
                              return "Tout éteints"
                            if (states['sensor.compteur_autre'].state == 1)
                              return states['sensor.compteur_autre'].state +" activé"
                            return states['sensor.compteur_autre'].state +" activés"
                          ]]]
                        styles:
                          img_cell:
                            - margin-bottom: 5px
                          icon:
                            - color: darkgrey
                          card:
                            - background-color: |
                                [[[
                                  if (states['group.autre'].state == "on")
                                    return "#0077ea" 
                                  return ""
                                ]]]
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_autre'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_autre'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_autre'].state )
                            ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Autres
                      - type: custom:button-card
                        entity: group.annonces
                        name: Alexa
                        show_name: false
                        icon: phu:echo-show-5-gen-2
                        template:
                          - carte_badge
                          - state_appareil
                          - state_unavailable
                        label: |
                          [[[
                            if (entity.state == 'off')
                              return "Aucune" ;
                            return "En cours";
                          ]]]
                        styles:
                          img_cell:
                            - margin-bottom: 5px
                          icon:
                            - color: darkgrey
                          card:
                            - background-color: |
                                [[[
                                  if (states['group.annonces'].state == "on")
                                    return "#0077ea" 
                                  return ""
                                ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Annonces
                  - type: horizontal-stack
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.tom_next_alarm
                            state_not: unavailable
                        card:
                          type: custom:button-card
                          entity: sensor.tom_reveil
                          name: Tom
                          show_state: true
                          template:
                            - base
                            - base_petite
                          icon: mdi:alarm
                          styles:
                            card:
                              - background-color: |
                                  [[[
                                    if (states['input_boolean.nilemato'].state == 'off' )
                                      return "red"
                                    return ""
                                  ]]]
                      - type: conditional
                        conditions:
                          - entity: sensor.manon_next_alarm
                            state_not: unavailable
                        card:
                          type: custom:button-card
                          entity: sensor.manon_reveil
                          name: Manon
                          show_state: true
                          template:
                            - base
                            - base_petite
                          icon: mdi:alarm
                          styles:
                            card:
                              - background-color: |
                                  [[[
                                    if (states['input_boolean.nilemato'].state == 'off' )
                                      return "red"
                                    return ""
                                  ]]]
                      - type: conditional
                        conditions:
                          - entity: sensor.leane_next_alarm
                            state_not: unavailable
                        card:
                          type: custom:button-card
                          entity: sensor.leane_reveil
                          name: Léane
                          show_state: true
                          template:
                            - base
                            - base_petite
                          icon: mdi:alarm
                          styles:
                            card:
                              - background-color: |
                                  [[[
                                    if (states['input_boolean.nilemato'].state == 'off' )
                                      return "red"
                                    return ""
                                  ]]]
                      - type: conditional
                        conditions:
                          - entity: sensor.nina_next_alarm
                            state_not: unavailable
                        card:
                          type: custom:button-card
                          entity: sensor.nina_reveil
                          name: Nina
                          show_state: true
                          template:
                            - base
                            - base_petite
                          icon: mdi:alarm
                          styles:
                            card:
                              - background-color: |
                                  [[[
                                    if (states['input_boolean.nilemato'].state == 'off' )
                                      return "red"
                                    return ""
                                  ]]]
                  - type: custom:button-card
                    template:
                      - sidebar
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Meteo
                  - type: custom:button-card
                    entity: sensor.moniteur_qualite_air
                    name: Qualité de l'air de la maison
                    icon: mdi:virus-outline
                    show_state: true
                    show_label: true
                    template:
                      - base
                      - base_moyenne
                    label: |
                      [[[
                        if (entity.state < 200 )
                          return "Excellente"
                        if (entity.state < 3000 )
                          return "Correcte"
                        if (entity.state < 2500 )
                          return "Moyenne"
                        if (entity.state > 2500 )
                          return "Mauvaise"
                      ]]]
                    styles:
                      label:
                        - white-space: normal
                      custom_fields:
                        graph:
                          - position: absolute
                          - top: 50%
                          - left: 50%
                          - width: calc(100% + 10px)
                          - transform: translate(-50%, calc(-50% + 10px))
                          - z-index: 1
                          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                          - '--ha-card-box-shadow': none
                    state:
                      - value: 200
                        operator: <
                        styles:
                          img_cell:
                            - background-color: var(--pastille_off)
                          icon:
                            - color: var(--icon_off)
                      - value: 3000
                        operator: <
                        styles:
                          img_cell:
                            - background-color: rgb(189,183,107)
                          label:
                            - color: rgb(189,183,107)
                          icon:
                            - color: var(--icon_on)
                      - value: 25000
                        operator: <
                        styles:
                          img_cell:
                            - background-color: tomato
                          label:
                            - color: tomato
                          icon:
                            - color: var(--icon_on)
                      - value: 25000
                        operator: ''
                        styles:
                          card:
                            - background-color: red
                          img_cell:
                            - background-color: red
                          icon:
                            - color: var(--icon_on)
                    custom_fields:
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(1,128,0,0.5)
                              entity: sensor.moniteur_qualite_air
                          height: 40
                          line_width: 1
                          lower_bound: 1
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/air
            type: vertical-stack
        layout:
          width: 350
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: vertical-stack
            cards:
              - cards:
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Rez-de-chaussée" ]]]
                  - type: grid
                    cards:
                      - type: custom:button-card
                        entity: light.sejour
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - piece_jauge_lumiere
                          - piece_graph
                          - state_lumiere
                          - state_unavailable
                          - effet
                        name: Séjour
                        icon: |
                          [[[
                            if (states['sensor.compteur_sejour'].state == 1 && states['light.lampe_de_bureau'].state == 'on' )
                              return 'mdi:desk-lamp';
                              if (states['sensor.compteur_sejour'].state == 1 && states['light.bandeau_led'].state == 'on' )
                              return 'phu:light-strip';
                              if (states['sensor.compteur_sejour'].state == 1 && states['light.lustre_salon'].state == 'on' )
                              return 'phu:pendant-round';
                              if (states['sensor.compteur_sejour'].state == 1 && states['light.lustre_salle_a_manger'].state == 'on' )
                              return 'phu:pendant-round';
                            return 'phu:rooms-living';
                          ]]]
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return (states['sensor.temp_sejour'].state )+"°"  + " / " + Math.round(entity.attributes.brightness / 2.54) + "%";
                            return states['sensor.temp_sejour'].state + "°";
                          ]]]
                        styles:
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_sejour'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_sejour'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_sejour'].state )
                            ]]]
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.sejour
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.sejour
                          graph:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.sejour
                                  state: 'off'
                              card:
                                type: custom:mini-graph-card
                                entities:
                                  - color: var(--graph_line)
                                    entity: sensor.temp_sejour
                          appareil:
                            card:
                              square: false
                              columns: 3
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.porte_salle_a_manger
                                  template:
                                    - carte_piece_appareil
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_salon
                                  template:
                                    - carte_piece_appareil
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_salle_a_manger
                                  template:
                                    - carte_piece_appareil
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Séjour
                      - type: custom:button-card
                        entity: light.entree_et_couloir
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - piece_jauge_lumiere
                          - piece_graph
                          - state_lumiere
                          - state_unavailable
                          - effet
                        name: Entrée-Véranda
                        icon: |
                          [[[
                              if (states['sensor.compteur_entree'].state == 1 && states['light.aqara_hub_54e1'].state == 'on' )
                              return 'mdi:alarm-light';
                              if (states['light.veranda'].state == 'on' )
                              return 'mdi:outdoor-lamp';
                            return 'phu:wall-spot';
                          ]]]
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return (states['sensor.temp_couloir_rdc'].state ) + "°" + " / " + Math.round(entity.attributes.brightness / 2.54) + "%";
                            return (states['sensor.temp_couloir_rdc'].state )  + "°";
                          ]]]
                        styles:
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_entree'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_entree'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_entree'].state )
                            ]]]
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.entree_et_couloir
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.entree_et_couloir
                          appareil:
                            card:
                              square: false
                              columns: 3
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.porte_entree
                                  template:
                                    - carte_piece_appareil
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_couloir
                                  template:
                                    - carte_piece_appareil
                          graph:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.entree_et_couloir
                                  state: 'off'
                              card:
                                type: custom:mini-graph-card
                                entities:
                                  - color: var(--graph_line)
                                    entity: sensor.temp_couloir_rdc
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Entrée
                      - type: custom:button-card
                        entity: binary_sensor.porte_cuisine
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - piece_graph
                          - state_lumiere
                          - state_unavailable
                          - effet
                        icon: mdi:food-fork-drink
                        name: Cuisine
                        label: >
                          [[[ return (states['sensor.temp_cuisine'].state )  +
                          "°"

                          ]]]
                        tap_action:
                          action: more-info
                        custom_fields:
                          appareil:
                            card:
                              square: false
                              columns: 3
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.porte_cuisine
                                  template:
                                    - carte_piece_appareil
                          graph:
                            card:
                              type: conditional
                              conditions:
                                - entity: binary_sensor.porte_cuisine
                                  state: 'off'
                              card:
                                type: custom:mini-graph-card
                                entities:
                                  - color: var(--graph_line)
                                    entity: sensor.temp_cuisine
                      - type: custom:button-card
                        entity: light.lavabo
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - piece_jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                          - effet
                        name: Lavabo
                        icon: phu:rooms-toilet
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return  Math.round(entity.attributes.brightness / 2.54) + "%";
                            return "Éteint"
                          ]]]
                        styles:
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_wc'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_wc'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_wc'].state ) ]]]
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.lavabo
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.lavabo
                          appareil:
                            card:
                              square: false
                              columns: 3
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_salle_d_eau
                                  template:
                                    - carte_piece_appareil
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Lavabo
                      - type: custom:button-card
                        entity: light.parents
                        name: Parents
                        icon: phu:rooms-bedroom
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - piece_jauge_lumiere
                          - piece_graph
                          - state_lumiere
                          - state_unavailable
                          - effet
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return (states['sensor.temp_parents'].state ) + "°" + " / " + Math.round(entity.attributes.brightness / 2.54) + "%";
                            return (states['sensor.temp_parents'].state )  + "°"
                          ]]]
                        styles:
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_parents'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_parents'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_parents'].state )
                            ]]]
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.parents
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.parents
                          appareil:
                            card:
                              square: false
                              columns: 3
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.porte_chambre_parents
                                  template:
                                    - carte_piece_appareil
                                - type: custom:button-card
                                  entity: climate.chauffage_parents
                                  template:
                                    - carte_piece_appareil
                                  icon: |
                                    [[[
                                      if (states['climate.chauffage_parents'].state == "heat")
                                        return 'mdi:radiator';
                                     return 'mdi:radiator-off';
                                    ]]]
                                - type: custom:button-card
                                  entity: switch.moustique_parents
                                  template:
                                    - carte_piece_appareil
                          graph:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.parents
                                  state: 'off'
                              card:
                                type: custom:mini-graph-card
                                entities:
                                  - color: var(--graph_line)
                                    entity: sensor.temp_parents
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Parents
                      - type: custom:button-card
                        entity: light.cagibi
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - piece_jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                          - effet
                        name: Garage
                        icon: |
                          [[[
                            if (states['binary_sensor.porte_garage'].state == "on")
                              return "mdi:garage-open-variant"
                            return "mdi:garage-variant"
                          ]]]
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return  Math.round(entity.attributes.brightness / 2.54) + "%" ;
                            return "Éteint"
                          ]]]
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Garage
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.cagibi
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.cagibi
                          appareil:
                            card:
                              square: false
                              columns: 3
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.porte_cagibi
                                  template:
                                    - carte_piece_appareil
                                - type: custom:button-card
                                  entity: binary_sensor.porte_garage
                                  icon: mdi:garage-open-variant
                                  template:
                                    - carte_piece_appareil
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_garage
                                  template:
                                    - carte_piece_appareil
                    columns: 2
                    square: false
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Etage" ]]]
                  - type: grid
                    cards:
                      - type: custom:button-card
                        entity: light.tom
                        name: Tom
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - piece_jauge_lumiere
                          - piece_graph
                          - state_lumiere
                          - state_unavailable
                          - effet
                        icon: |
                          [[[
                            if (states['sensor.compteur_tom'].state == 1 && states['light.lampe_de_bureau_tom'].state == 'on' )
                              return 'mdi:desk-lamp';
                            return 'mdi:bat';
                          ]]] 
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return (states['sensor.temp_tom'].state ) + "°" + " / " + Math.round(entity.attributes.brightness / 2.54) + "%";
                            return (states['sensor.temp_tom'].state )  + "°"
                          ]]]
                        styles:
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_tom'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_tom'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_tom'].state ) ]]]
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.tom
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.tom
                          appareil:
                            card:
                              square: false
                              columns: 3
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_tom
                                  template:
                                    - carte_piece_appareil
                                - type: custom:button-card
                                  entity: switch.moustique_tom
                                  template:
                                    - carte_piece_appareil
                          graph:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.tom
                                  state: 'off'
                              card:
                                type: custom:mini-graph-card
                                entities:
                                  - color: var(--graph_line)
                                    entity: sensor.temp_tom
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Tom
                      - type: custom:button-card
                        entity: light.manon_et_leane
                        name: Manon Léane
                        icon: mdi:death-star-variant
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - piece_jauge_lumiere
                          - piece_graph
                          - state_lumiere
                          - state_unavailable
                          - effet
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return (states['sensor.temp_manon'].state ) + "°" + " / " + Math.round(entity.attributes.brightness / 2.54) + "%";
                            return (states['sensor.temp_manon'].state )  + "°"
                          ]]]
                        styles:
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_manon'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_manon'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_manon'].state )
                            ]]]
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.manon_et_leane
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.manon_et_leane
                          appareil:
                            card:
                              square: false
                              columns: 3
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_manon
                                  template:
                                    - carte_piece_appareil
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_leane
                                  template:
                                    - carte_piece_appareil
                                - type: custom:button-card
                                  entity: switch.moustique_manon
                                  template:
                                    - carte_piece_appareil
                          graph:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.manon_et_leane
                                  state: 'off'
                              card:
                                type: custom:mini-graph-card
                                entities:
                                  - color: var(--graph_line)
                                    entity: sensor.temp_manon
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Manon Léane
                      - type: custom:button-card
                        entity: light.nina
                        name: Nina
                        icon: |
                          [[[
                            if (states['sensor.compteur_nina'].state == 1 && states['light.lampe_de_bureau_nina'].state == 'on' )
                              return 'mdi:desk-lamp';
                            return 'mdi:owl';
                          ]]]
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - piece_jauge_lumiere
                          - piece_graph
                          - state_lumiere
                          - state_unavailable
                          - effet
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return (states['sensor.temp_nina'].state ) + "°" + " / " + Math.round(entity.attributes.brightness / 2.54) + "%";
                            return (states['sensor.temp_nina'].state )  + "°"
                          ]]]
                        styles:
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_nina'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_nina'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_nina'].state )
                            ]]]
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.nina
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.nina
                          appareil:
                            card:
                              square: false
                              columns: 3
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_nina
                                  template:
                                    - carte_piece_appareil
                                - type: custom:button-card
                                  entity: switch.moustique_nina
                                  template:
                                    - carte_piece_appareil
                          graph:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.nina
                                  state: 'off'
                              card:
                                type: custom:mini-graph-card
                                entities:
                                  - color: var(--graph_line)
                                    entity: sensor.temp_nina
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Nina
                      - type: custom:button-card
                        entity: switch.radiateur
                        name: SDB
                        icon: phu:rooms-bathroom
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - piece_graph_fixe
                          - state_lumiere
                          - state_unavailable
                          - effet
                        label: >
                          [[[ return (states['sensor.temp_salle_de_bain'].state
                          )  + "° / "+(states['sensor.hum_salle_de_bain'].state
                          ) + "%" ;

                          ]]]
                        custom_fields:
                          graph_fixe:
                            card:
                              type: custom:mini-graph-card
                              entities:
                                - color: var(--graph_line)
                                  entity: sensor.temp_salle_de_bain
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/SDB
                      - type: custom:button-card
                        entity: light.escalier
                        name: Escalier
                        icon: mdi:stairs
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - piece_jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                          - effet
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return Math.round(entity.attributes.brightness / 2.54) + "%";
                            return "Éteint"
                          ]]]
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.escalier
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.escalier
                          appareil:
                            card:
                              square: false
                              columns: 3
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_escalier
                                  template:
                                    - carte_piece_appareil
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Escalier
                      - type: custom:button-card
                        entity: light.palier
                        name: Palier
                        icon: phu:rooms-attic
                        template:
                          - base
                          - base_large
                          - carte_piece
                          - piece_jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                          - effet
                        color: auto
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return (states['sensor.mouv_palier_lum'].state ) + " lx" + " / " + Math.round(entity.attributes.brightness / 2.54) + "%";
                            return (states['sensor.mouv_palier_lum'].state ) + " lx";
                          ]]]
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.palier
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.palier
                          appareil:
                            card:
                              square: false
                              columns: 3
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_palier
                                  template:
                                    - carte_piece_appareil
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Escalier
                    columns: 2
                    square: false
                type: vertical-stack
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - cards:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Multimédia" ]]]
              - type: grid
                cards:
                  - type: custom:button-card
                    entity: media_player.tv_salon
                    name: TV Salon
                    icon: |
                      [[[
                        if (states['sensor.tv_salon_source'].state == "Netflix")
                          return "phu:netflix";
                        if (states['sensor.tv_salon_source'].state == "Prime Video")
                          return "phu:amazon-logo";
                        if (states['sensor.tv_salon_source'].state == "Disque Dur")
                          return "mdi:movie-open";
                        if (states['sensor.tv_salon_source'].state == "YouTube")
                          return "mdi:youtube";
                        return "mdi:television-play";
                      ]]]
                    template:
                      - base
                      - carte_tv
                      - state_tv
                      - state_unavailable
                      - effet
                    label: |
                      [[[
                        if (states['media_player.tv_salon'].state == "on")
                          return states['sensor.tv_salon_source'].state
                        return "Éteint"
                      ]]]
                    custom_fields:
                      info1: |
                        [[[
                          if (states['media_player.tv_salon'].state == 'on' && states['sensor.tv_salon_sortie_audio'].state == 'Casque')
                          return `<ha-icon
                            icon="mdi-headphones"
                            style="width: 17px; height: 17px; color: lightgrey;">
                            </ha-icon>`
                          if (states['media_player.tv_salon'].state == 'on' && states['sensor.tv_salon_sortie_audio'].state == 'TV')
                          return `<ha-icon
                            icon="mdi:volume-source"
                            style="width: 17px; height: 17px; color: lightgrey;">
                            </ha-icon>`
                          if (states['media_player.tv_salon'].state == 'on' && states['sensor.tv_salon_sortie_audio'].state == 'Barre de son')
                          return `<ha-icon
                            icon="mdi:speaker-bluetooth"
                            style="width: 17px; height: 17px; color: lightgrey;">
                            </ha-icon>`
                        ]]]
                      barre_volume:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.tv_salon
                              state: 'on'
                          card:
                            type: custom:bar-card
                            name: vol tv salon
                            entities:
                              - entity: sensor.tv_salon_vol
                                color: var(--pastille_off)
                            entity_row: true
                            max: 100
                            direction: null
                            unit_of_measurement: '%'
                            positions:
                              value: inside
                              name: 'off'
                              indicator: 'off'
                            height: 20px
                            width: 100%
                            icon: 'off'
                            style: |-
                              bar-card-value {
                                margin-right: 18%;
                                font-size: 13px;
                                font-weight: bold;
                                color: lightgrey;
                              }
                      volume:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.tv_salon
                              state: 'on'
                          card:
                            type: grid
                            square: false
                            columns: 5
                            cards:
                              - type: custom:button-card
                                entity: script.tv_salon_volume_mute
                                template: bouton_tv_volume
                                styles:
                                  icon:
                                    - color: |
                                        [[[
                                          if (states['media_player.tv_salon'].attributes.is_volume_muted == true)
                                            return 'red'
                                          return "var(--pastille_multimedia)"
                                        ]]]
                              - type: custom:button-card
                                entity: script.tv_salon_volume_bas
                                template: bouton_tv_volume
                              - type: custom:button-card
                                entity: script.tv_salon_volume_haut
                                template: bouton_tv_volume
                              - type: custom:button-card
                                entity: script.tv_salon_chaine_bas
                                template: bouton_tv_volume
                              - type: custom:button-card
                                entity: script.tv_salon_chaine_haut
                                template: bouton_tv_volume
                    double_tap_action:
                      action: call-service
                      service: script.tv_salon_on_off
                      service_data: null
                  - type: custom:button-card
                    entity: switch.tele_des_parents
                    name: TV Parents
                    icon: |
                      [[[
                        if (states['sensor.tv_parents_source'].state == "Netflix")
                          return "phu:netflix";
                        if (states['sensor.tv_parents_source'].state == "YouTube (FireTV)")
                          return "mdi:youtube";
                        if (states['sensor.tv_parents_source'].state == "DD Externe")
                          return "mdi:movie-open";
                        return "mdi:television";
                      ]]]
                    template:
                      - base
                      - carte_tv
                      - state_tv
                      - state_unavailable
                      - effet
                    label: |
                      [[[
                        if ( entity.state  == 'on')
                          return states['sensor.tv_parents_source'].state;
                        if ( entity.state  == 'off')
                          return 'Éteint'
                        return ''
                      ]]]
                    styles:
                      custom_fields:
                        info1:
                          - padding-bottom: 1%
                    custom_fields:
                      info1: |
                        [[[
                          if (states['switch.tele_des_parents'].state == 'on')
                          return `<ha-icon
                            icon="mdi:volume-source"
                            style="width: 15px; height: 15px; color: lightgrey;">
                            </ha-icon>`
                        ]]]
                      barre_volume:
                        card:
                          type: conditional
                          conditions:
                            - entity: switch.tele_des_parents
                              state: 'on'
                          card:
                            type: custom:bar-card
                            name: vol tv parents
                            entities:
                              - entity: sensor.tv_parents_vol
                                color: var(--pastille_off)
                            entity_row: true
                            max: 100
                            direction: null
                            unit_of_measurement: '%'
                            positions:
                              value: inside
                              name: 'off'
                              indicator: 'off'
                            height: 20px
                            width: 100%
                            icon: 'off'
                            style: |-
                              bar-card-value {
                                margin-right: 18%;
                                font-size: 13px;
                                font-weight: bold;
                                color: lightgrey;
                              }
                      volume:
                        card:
                          type: conditional
                          conditions:
                            - entity: switch.tele_des_parents
                              state: 'on'
                          card:
                            type: grid
                            square: false
                            columns: 5
                            cards:
                              - type: custom:button-card
                                entity: script.tv_parents_menu
                                template: bouton_tv_volume
                              - type: custom:button-card
                                entity: script.tv_parents_gauche
                                template: bouton_tv_volume
                              - type: custom:button-card
                                entity: script.tv_parents_droite
                                template: bouton_tv_volume
                              - type: custom:button-card
                                entity: script.tv_parents_bas
                                template: bouton_tv_volume
                              - type: custom:button-card
                                entity: script.tv_parents_haut
                                template: bouton_tv_volume
                    double_tap_action:
                      action: toggle
                    tap_action:
                      action: more-info
                columns: 2
                square: false
              - type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.musique_rdc_on
                    name: RDC
                    icon: mdi:speaker
                    template:
                      - base
                      - carte_multimedia
                      - state_musique
                      - effet
                    styles:
                      custom_fields:
                        notification:
                          - background-color: |
                              [[[
                                if (states['sensor.compteur_musique_rdc'].state == 0)
                                  return 'rgba(0,191,205,0)';
                               return 'rgba(0,0,0,0.4)';
                              ]]]
                          - color: |
                              [[[
                                if (states['sensor.compteur_musique_rdc'].state == 0)
                                  return 'transparent';
                               return 'var(--text_on)';
                              ]]]
                      notification: >
                        [[[ return
                        Math.floor(states['sensor.compteur_musique_rdc'].state )
                        ]]]
                    custom_fields:
                      cartes:
                        card:
                          type: custom:swipe-card
                          parameters:
                            fadeEffect:
                              crossFade: true
                            autoplay:
                              delay: 3000
                            speed: 2000
                          cards:
                            - type: conditional
                              conditions:
                                - entity: media_player.partout
                                  state: playing
                              card:
                                info: scroll
                                artwork: full-cover-fit
                                hide:
                                  volume: true
                                  source: true
                                  power: true
                                  name: false
                                  icon: true
                                  controls: true
                                type: custom:mini-media-player
                                entity: media_player.partout
                            - type: conditional
                              conditions:
                                - entity: media_player.sejour
                                  state: playing
                              card:
                                info: scroll
                                artwork: full-cover-fit
                                hide:
                                  volume: true
                                  source: true
                                  power: true
                                  name: false
                                  icon: true
                                  controls: true
                                type: custom:mini-media-player
                                entity: media_player.sejour
                            - type: conditional
                              conditions:
                                - entity: media_player.la_cuisine
                                  state: playing
                              card:
                                info: scroll
                                artwork: full-cover-fit
                                hide:
                                  volume: true
                                  source: true
                                  power: true
                                  name: false
                                  icon: true
                                  controls: true
                                type: custom:mini-media-player
                                entity: media_player.la_cuisine
                            - type: conditional
                              conditions:
                                - entity: media_player.chambre_des_parents
                                  state: playing
                              card:
                                info: scroll
                                artwork: full-cover-fit
                                hide:
                                  volume: true
                                  source: true
                                  power: true
                                  name: false
                                  icon: true
                                  controls: true
                                type: custom:mini-media-player
                                entity: media_player.chambre_des_parents
                            - type: conditional
                              conditions:
                                - entity: media_player.en_bas
                                  state: playing
                              card:
                                info: scroll
                                artwork: full-cover-fit
                                hide:
                                  volume: true
                                  source: true
                                  power: true
                                  name: false
                                  icon: true
                                  controls: true
                                type: custom:mini-media-player
                                entity: media_player.en_bas
                          columns: 2
                  - type: custom:button-card
                    entity: sensor.musique_etage_on
                    name: Etage
                    icon: mdi:speaker
                    template:
                      - base
                      - carte_multimedia
                      - state_musique
                      - effet
                    styles:
                      custom_fields:
                        notification:
                          - background-color: |
                              [[[
                                if (states['sensor.compteur_musique_etage'].state == 0)
                                  return 'rgba(0,191,205,0)';
                               return 'rgba(0,0,0,0.4)';
                              ]]]
                          - color: |
                              [[[
                                if (states['sensor.compteur_musique_etage'].state == 0)
                                  return 'transparent';
                               return 'var(--text_on)';
                              ]]]
                      notification: >
                        [[[ return
                        Math.floor(states['sensor.compteur_musique_etage'].state
                        ) ]]]
                    custom_fields:
                      cartes:
                        card:
                          type: custom:swipe-card
                          parameters:
                            fadeEffect:
                              crossFade: true
                            autoplay:
                              delay: 3000
                            speed: 2000
                          cards:
                            - type: conditional
                              conditions:
                                - entity: media_player.la_salle_de_bain
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                                - entity: media_player.etage
                                  state_not: playing
                              card:
                                info: scroll
                                artwork: full-cover-fit
                                hide:
                                  volume: true
                                  source: true
                                  power: true
                                  name: false
                                  icon: true
                                  controls: true
                                type: custom:mini-media-player
                                entity: media_player.la_salle_de_bain
                            - type: conditional
                              conditions:
                                - entity: media_player.leane
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                                - entity: media_player.etage
                                  state_not: playing
                                - entity: media_player.chambre_de_manon_et_leane
                                  state_not: playing
                              card:
                                info: scroll
                                artwork: full-cover-fit
                                hide:
                                  volume: true
                                  source: true
                                  power: true
                                  name: false
                                  icon: true
                                  controls: true
                                type: custom:mini-media-player
                                entity: media_player.leane
                            - type: conditional
                              conditions:
                                - entity: media_player.tom
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                                - entity: media_player.etage
                                  state_not: playing
                              card:
                                info: scroll
                                artwork: full-cover-fit
                                hide:
                                  volume: true
                                  source: true
                                  power: true
                                  name: false
                                  icon: true
                                  controls: true
                                type: custom:mini-media-player
                                entity: media_player.tom
                            - type: conditional
                              conditions:
                                - entity: media_player.nina
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                                - entity: media_player.etage
                                  state_not: playing
                              card:
                                info: scroll
                                artwork: full-cover-fit
                                hide:
                                  volume: true
                                  source: true
                                  power: true
                                  name: false
                                  icon: true
                                  controls: true
                                type: custom:mini-media-player
                                entity: media_player.nina
                            - type: conditional
                              conditions:
                                - entity: media_player.manon
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                                - entity: media_player.etage
                                  state_not: playing
                                - entity: media_player.chambre_de_manon_et_leane
                                  state_not: playing
                              card:
                                info: scroll
                                artwork: full-cover-fit
                                hide:
                                  volume: true
                                  source: true
                                  power: true
                                  name: false
                                  icon: true
                                  controls: true
                                type: custom:mini-media-player
                                entity: media_player.manon
                            - type: conditional
                              conditions:
                                - entity: media_player.etage
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                              card:
                                info: scroll
                                artwork: full-cover-fit
                                hide:
                                  volume: true
                                  source: true
                                  power: true
                                  name: false
                                  icon: true
                                  controls: true
                                type: custom:mini-media-player
                                entity: media_player.etage
                            - type: conditional
                              conditions:
                                - entity: media_player.chambre_de_manon_et_leane
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                              card:
                                info: scroll
                                artwork: full-cover-fit
                                hide:
                                  volume: true
                                  source: true
                                  power: true
                                  name: false
                                  icon: true
                                  controls: true
                                type: custom:mini-media-player
                                entity: media_player.chambre_de_manon_et_leane
                          columns: 2
                columns: 2
                square: false
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Appareils" ]]]
              - type: grid
                cards:
                  - type: custom:button-card
                    entity: vacuum.wall_e
                    icon: phu:roborock
                    template:
                      - base
                      - base_large
                      - carte_appareil
                      - carte_appareil_jauge
                      - state_aspi
                      - state_unavailable
                      - effet
                    name: Wall-E
                    label: |
                      [[[ return states['sensor.walle_state'].state   ]]]
                    custom_fields:
                      pile: |
                        [[[
                          if (states['sensor.walle_batterie'].state >= 50)
                          return `<ha-icon
                            icon="mdi:battery"
                            style="width: 12px; height: 12px; color: rgba(211,211,211,0.8);">
                            </ha-icon><span><span style="color: rgba(211,211,211,0.8);">${states['sensor.walle_batterie'].state}%</span></span>`
                          if (states['sensor.walle_batterie'].state < 20)
                          return `<ha-icon
                            icon="mdi:battery-20"
                            style="width: 12px; height: 12px; color: red;">
                            </ha-icon><span><span style="color: rgba(211,211,211,0.8);">${states['sensor.walle_batterie'].state}%</span></span>`
                          if (states['sensor.walle_batterie'].state < 50)
                          return `<ha-icon
                            icon="mdi:battery-50"
                            style="width: 12px; height: 12px; color: tomato;">
                            </ha-icon><span><span style="color: rgba(211,211,211,0.8);">${states['sensor.walle_batterie'].state}%</span></span>`
                        ]]]
                      bouton:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: script.aspi_walle_demarrage
                              template:
                                - carte_appareil_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.walle_state'].state == "Nettoyage")
                                          return 'var(--pastille_aspi)';
                                        return "var(--icon_off)"
                                      ]]]
                                  - width: 60%
                            - type: custom:button-card
                              entity: script.aspi_pause
                              template:
                                - carte_appareil_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.walle_state'].state == "En pause")
                                          return 'var(--pastille_aspi)';
                                        return "var(--icon_off)"
                                      ]]]
                                  - width: 60%
                            - type: custom:button-card
                              entity: script.sortir_l_aspi
                              template:
                                - carte_appareil_bouton
                              styles:
                                icon:
                                  - width: 60%
                            - type: custom:button-card
                              entity: script.aspi_retour_base
                              template:
                                - carte_appareil_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.walle_state'].state == "Base")
                                          return 'var(--pastille_aspi)';
                                        return "var(--icon_off)"
                                      ]]]
                                  - width: 60%
                          columns: 4
                          square: false
                  - type: custom:button-card
                    entity: vacuum.r2d2
                    icon: phu:roborock
                    template:
                      - base
                      - base_large
                      - carte_appareil
                      - carte_appareil_jauge
                      - state_aspi
                      - state_unavailable
                      - effet
                    name: R2D2
                    label: |
                      [[[ return states['sensor.r2d2_state'].state  ]]]
                    custom_fields:
                      pile: |
                        [[[
                          if (states['sensor.r2d2_batterie'].state >= 50)
                          return `<ha-icon
                            icon="mdi:battery"
                            style="width: 12px; height: 12px; color: rgba(211,211,211,0.8);">
                            </ha-icon><span><span style="color: rgba(211,211,211,0.8);">${states['sensor.r2d2_batterie'].state}%</span></span>`
                          if (states['sensor.r2d2_batterie'].state < 20)
                          return `<ha-icon
                            icon="mdi:battery-20"
                            style="width: 12px; height: 12px; color: red;">
                            </ha-icon><span><span style="color: rgba(211,211,211,0.8);">${states['sensor.r2d2_batterie'].state}%</span></span>`
                          if (states['sensor.r2d2_batterie'].state < 50)
                          return `<ha-icon
                            icon="mdi:battery-50"
                            style="width: 12px; height: 12px; color: tomato;">
                            </ha-icon><span><span style="color: rgba(211,211,211,0.8);">${states['sensor.r2d2_batterie'].state}%</span></span>`
                        ]]]
                      bouton:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: script.aspi_r2d2_demarrage
                              template:
                                - carte_appareil_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.r2d2_state'].state == "Nettoyage")
                                          return 'var(--pastille_aspi)';
                                        if (states['sensor.r2d2_state'].state == "Retour")
                                          return "var(--pastille_aspi)"
                                        return "var(--icon_off)"
                                      ]]]
                            - type: custom:button-card
                              entity: script.aspi_pause
                              template:
                                - carte_appareil_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.r2d2_state'].state == "En pause")
                                          return 'var(--pastille_aspi)';
                                        return "var(--icon_off)"
                                      ]]]
                            - type: custom:button-card
                              entity: script.aspi_retour_base
                              template:
                                - carte_appareil_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.r2d2_state'].state == "Base")
                                          return 'var(--pastille_aspi)';
                                        return "var(--icon_off)"
                                      ]]]
                          columns: 3
                          square: false
                  - type: custom:button-card
                    entity: switch.lave_vaisselle_power
                    name: Vaisselle
                    icon: mdi:dishwasher
                    template:
                      - base
                      - base_large
                      - carte_appareil
                      - state_machine
                      - state_unavailable
                      - effet
                    label: |
                      [[[
                        if (states['switch.lave_vaisselle_power'].state == "on")
                          return states['sensor.lave_vaisselle'].state
                        if (states['switch.lave_vaisselle_power'].state == "off")
                          return "Éteint "
                        return "" 
                      ]]]
                    tap_action:
                      action: more-info
                    double_tap_action:
                      action: toggle
                    custom_fields:
                      bouton:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: switch.lave_vaisselle_power
                              icon: mdi:power
                              template:
                                - carte_appareil_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['switch.lave_vaisselle_power'].state == "on")
                                          return 'dodgerblue'
                                        return "var(--icon_off)"
                                      ]]]
                            - type: custom:button-card
                              entity: switch.lave_vaisselle_program_auto2
                              icon: mdi:flag-checkered
                              template:
                                - carte_appareil_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.lave_vaisselle_operation_state'].state == "Run")
                                          return 'dodgerblue'
                                        return "var(--icon_off)"
                                      ]]]
                            - type: custom:button-card
                              entity: binary_sensor.lave_vaisselle_door
                              template:
                                - carte_appareil_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['switch.lave_vaisselle_power'].state == "off" && states['binary_sensor.lave_vaisselle_door'].state == "off")
                                          return 'grey'
                                        if (states['switch.lave_vaisselle_power'].state == "off" && states['binary_sensor.lave_vaisselle_door'].state == "on")
                                          return 'grey'
                                        if (states['switch.lave_vaisselle_power'].state == "on" && states['binary_sensor.lave_vaisselle_door'].state == "off")
                                          return 'grey'
                                        if (states['switch.lave_vaisselle_power'].state == "on" && states['binary_sensor.lave_vaisselle_door'].state == "on")
                                          return 'dodgerblue'
                                        return "grey"
                                      ]]]
                          columns: 3
                          square: false
                      jauge:
                        card:
                          type: conditional
                          conditions:
                            - entity: switch.lave_vaisselle_power
                              state: 'on'
                          card:
                            type: custom:bar-card
                            name: Batterie
                            severity:
                              - color: Red
                                from: 0
                                to: 30
                              - color: tomato
                                from: 31
                                to: 50
                              - color: var(--pastille_off)
                                from: 51
                                to: 100
                            entities:
                              - entity: sensor.lave_vaisselle_program_progress
                            entity_row: true
                            unit_of_measurement: '%'
                            positions:
                              value: inside
                              name: 'off'
                            height: 11px
                            width: 100%
                            icon: 'off'
                            color: var(--pastille_off)
                            style: |-
                              bar-card-value {
                                margin-right: 18%;
                                font-size: 11px;
                                font-weight: bold;
                                color: lightgrey;
                              }
                  - type: custom:button-card
                    entity: input_select.lave_linge
                    name: Linge
                    icon: mdi:tshirt-crew
                    template:
                      - base
                      - base_large
                      - carte_appareil
                      - state_lave_linge
                      - state_unavailable
                      - effet
                    label: |
                      [[[
                        if (states['input_select.lave_linge'].state == "off")
                          return "Éteint"
                        if (states['input_select.lave_linge'].state == "veille")
                          return "Veille : "+ states['sensor.lave_linge_duree'].state
                        if (states['input_select.lave_linge'].state == "on")
                          return "Cycle : "+ states['sensor.lave_linge_duree'].state
                      ]]]
                    tap_action:
                      action: more-info
                    double_tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: binary_sensor.boite_aux_lettres
                    name: Lettres
                    icon: mdi:email
                    show_last_changed: true
                    show_state: true
                    template:
                      - base
                      - base_large
                      - carte_appareil
                      - state_appareil
                      - state_unavailable
                      - effet
                    double_tap_action:
                      action: toggle
                    tap_action:
                      action: more-info
                  - type: custom:button-card
                    entity: sensor.canon_mg4100_series
                    name: Imprimante
                    icon: mdi:printer
                    label: |
                      [[[
                        if (states['sensor.canon_mg4100_series'].state == "unavailable")
                          return "Éteint"
                        if (states['sensor.canon_mg4100_series'].state == "printing")
                          return "Impression"
                        if (states['sensor.canon_mg4100_series'].state == "stopped")
                          return "Arrêt"
                        if (states['sensor.canon_mg4100_series'].state == "idle")
                          return "Veille"
                        return states['sensor.canon_mg4100_series'].state
                      ]]]
                    template:
                      - base
                      - base_large
                      - carte_appareil
                      - state_imprimante
                      - effet
                    custom_fields:
                      barre_imprimante_noire:
                        card:
                          type: conditional
                          conditions:
                            - entity: sensor.canon_mg4100_series
                              state_not: unavailable
                          card:
                            type: custom:bar-card
                            name: Batterie
                            entities:
                              - entity: sensor.canon_mg4100_series_black
                                color: black
                            entity_row: true
                            direction: up
                            unit_of_measurement: '%'
                            positions:
                              value: inside
                              name: 'off'
                              indicator: 'off'
                            height: 40px
                            width: 25%
                            icon: 'off'
                            style: |-
                              bar-card-value {
                                margin-right: -90%;
                                font-size: 13px;
                                font-weight: bold;
                                color: var(--text_on);
                              }
                      barre_imprimante_couleur:
                        card:
                          type: conditional
                          conditions:
                            - entity: sensor.canon_mg4100_series
                              state_not: unavailable
                          card:
                            type: custom:bar-card
                            name: Batterie
                            entities:
                              - entity: sensor.canon_mg4100_series_color
                                color: purple
                            entity_row: true
                            direction: up
                            unit_of_measurement: '%'
                            positions:
                              value: inside
                              name: 'off'
                              indicator: 'off'
                            height: 40px
                            width: 25%
                            icon: 'off'
                            style: |-
                              bar-card-value {
                                margin-right: -90%;
                                font-size: 13px;
                                font-weight: bold;
                                color: var(--text_on);
                              }
                    tap_action:
                      action: more-info
                    double_tap_action:
                      action: toggle
                columns: 2
                square: false
            type: vertical-stack
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - cards:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Personnes" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: person.herve
                    template:
                      - carte_personne
                    label: |
                      [[[return states["sensor.aurel_gps"].state]]]
                    styles:
                      label:
                        - white-space: normal
                    custom_fields:
                      bouton:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: sensor.iphone_aurel_battery_level
                              icon: |
                                [[[
                                  if (states['sensor.iphone_aurel_battery_level'].state >= 70 && states['sensor.iphone_aurel_battery_state'].state == 'Charging')
                                    return "mdi:battery-charging"      
                                  if (states['sensor.iphone_aurel_battery_level'].state >= 70 && states['sensor.iphone_aurel_battery_state'].state == 'Not Charging')
                                    return "mdi:battery"   
                                  if (states['sensor.iphone_aurel_battery_level'].state >= 50 && states['sensor.iphone_aurel_battery_state'].state == 'Charging')
                                    return "mdi:battery-charging-50"  
                                  if (states['sensor.iphone_aurel_battery_level'].state >= 50 && states['sensor.iphone_aurel_battery_state'].state == 'Not Charging')
                                    return "mdi:battery-50"  
                                  if (states['sensor.iphone_aurel_battery_level'].state >= 30 && states['sensor.iphone_aurel_battery_state'].state == 'Charging')
                                    return "mdi:battery-charging-30"  
                                  if (states['sensor.iphone_aurel_battery_level'].state >= 30 && states['sensor.iphone_aurel_battery_state'].state == 'Not Charging')
                                    return "mdi:battery-30"  
                                  if (states['sensor.iphone_aurel_battery_level'].state < 30 && states['sensor.iphone_aurel_battery_state'].state == 'Charging')
                                    return "mdi:battery-charging-10"  
                                  if (states['sensor.iphone_aurel_battery_level'].state < 30 && states['sensor.iphone_aurel_battery_state'].state == 'Not Charging')
                                    return "mdi:battery-10"  
                                ]]]
                              template:
                                - carte_personne_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.iphone_aurel_battery_level'].state >= 70 )
                                          return "rgba(211,211,211,0.8)"       
                                        if (states['sensor.iphone_aurel_battery_level'].state >= 50 )
                                          return "gold"  
                                        if (states['sensor.iphone_aurel_battery_level'].state >= 30 )
                                          return "orange"  
                                        if (states['sensor.iphone_aurel_battery_level'].state < 30 )
                                          return "red"  
                                      ]]]
                            - type: custom:button-card
                              entity: sensor.macbook_aurel_internal_battery_level
                              icon: mdi:desktop-mac
                              template:
                                - carte_personne_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.macbook_aurel_internal_battery_state'].state == "Charging")
                                          return 'gold'
                                        if (states['sensor.macbook_aurel_internal_battery_state'].state == "Full")
                                          return 'red'
                                        return "rgba(211,211,211,0.8)"
                                      ]]]
                            - type: custom:button-card
                              entity: sensor.ipad_aurel_battery_level
                              icon: mdi:tablet
                              template:
                                - carte_personne_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.ipad_aurel_battery_state'].state == "Charging")
                                          return 'gold'
                                        if (states['sensor.ipad_aurel_battery_state'].state == "Full")
                                          return 'red'
                                        return "rgba(211,211,211,0.8)"
                                      ]]]
                          columns: 3
                          square: false
                  - type: custom:button-card
                    entity: person.alex
                    label: |
                      [[[return states["sensor.alex_gps"].state ]]]
                    styles:
                      label:
                        - white-space: normal
                    template:
                      - carte_personne
                    custom_fields:
                      bouton:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: sensor.alex_iphone_battery_level_ha
                              icon: |
                                [[[
                                  if (states['sensor.alex_iphone_battery_level_ha'].state >= 70 && states['sensor.alex_iphone_battery_state_ha'].state == 'Charging')
                                    return "mdi:battery-charging"      
                                  if (states['sensor.alex_iphone_battery_level_ha'].state >= 70 && states['sensor.alex_iphone_battery_state_ha'].state == 'Not Charging')
                                    return "mdi:battery"   
                                  if (states['sensor.alex_iphone_battery_level_ha'].state >= 50 && states['sensor.alex_iphone_battery_state_ha'].state == 'Charging')
                                    return "mdi:battery-charging-50"  
                                  if (states['sensor.alex_iphone_battery_level_ha'].state >= 50 && states['sensor.alex_iphone_battery_state_ha'].state == 'Not Charging')
                                    return "mdi:battery-50"  
                                  if (states['sensor.alex_iphone_battery_level_ha'].state >= 30 && states['sensor.alex_iphone_battery_state_ha'].state == 'Charging')
                                    return "mdi:battery-charging-30"  
                                  if (states['sensor.alex_iphone_battery_level_ha'].state >= 30 && states['sensor.alex_iphone_battery_state_ha'].state == 'Not Charging')
                                    return "mdi:battery-30"  
                                  if (states['sensor.alex_iphone_battery_level_ha'].state < 30 && states['sensor.alex_iphone_battery_state_ha'].state == 'Charging')
                                    return "mdi:battery-charging-10"  
                                  if (states['sensor.alex_iphone_battery_level_ha'].state < 30 && states['sensor.alex_iphone_battery_state_ha'].state == 'Not Charging')
                                    return "mdi:battery-10"  
                                ]]]
                              template:
                                - carte_personne_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.alex_iphone_battery_level_ha'].state >= 70 )
                                          return "rgba(211,211,211,0.8)"       
                                        if (states['sensor.alex_iphone_battery_level_ha'].state >= 50 )
                                          return "gold"  
                                        if (states['sensor.alex_iphone_battery_level_ha'].state >= 30 )
                                          return "orange"  
                                        if (states['sensor.alex_iphone_battery_level_ha'].state < 30 )
                                          return "red"  
                                      ]]]
                            - type: custom:button-card
                              entity: sensor.macbook_alex_internal_battery_level
                              icon: mdi:desktop-mac
                              template:
                                - carte_personne_bouton
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.macbook_alex_internal_battery_level'].state == "Charging")
                                          return 'gold'
                                        if (states['sensor.macbook_alex_internal_battery_level'].state == "Full")
                                          return 'red'
                                        return "rgba(211,211,211,0.8)"
                                      ]]]
                          columns: 3
                          square: false
                  - type: custom:button-card
                    entity: person.tom
                    show_state: true
                    template:
                      - carte_personne
                  - type: custom:button-card
                    entity: person.manon
                    label: |
                      [[[
                        if (states['device_tracker.tablette_manon'].state == 'home')
                          return 'Présent'
                        return 'Absent'
                      ]]]
                    template:
                      - carte_personne
                  - type: custom:button-card
                    entity: person.leane
                    label: |
                      [[[
                        if (states['device_tracker.leane_tab_ping'].state == 'home')
                          return 'Présent'
                        return 'Absent'
                      ]]]
                    template:
                      - carte_personne
                  - type: custom:button-card
                    entity: person.nina
                    show_state: true
                    template:
                      - carte_personne
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Système" ]]]
              - type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.cpu_temperature
                    name: RPI 4
                    icon: mdi:raspberry-pi
                    template:
                      - base
                      - base_tres_large
                      - carte_systeme
                    label: |
                      [[[return states["sensor.cpu_temperature"].state +"°"]]]
                    styles:
                      img_cell:
                        - background-color: |
                            [[[
                              if (entity.state < 50) return 'var(--pastille_off)';
                              if (entity.state >= 50 && entity.state < 60) return 'tomato';
                              else return 'red';
                            ]]]
                      icon:
                        - animation: |
                            [[[
                              if (entity.state > "50" )
                                return "blink 1s ease infinite";
                             return "";
                            ]]]
                        - color: |
                            [[[
                              if (entity.state < 50) return 'var(--icon_off)';
                              if (entity.state >= 50 && entity.state < 60) return 'var(--icon_on)';
                              else return 'var(--icon_on)';
                            ]]]
                      custom_fields:
                        info2:
                          - padding-bottom: 1%
                          - '--text-color-sensor': >-
                              [[[ if
                              (states["sensor.processor_use_percent"].state >
                              50) return "tomato";  else return
                              "var(--text_on)"; ]]]
                        info3:
                          - padding-bottom: 1%
                          - '--text-color-sensor': >-
                              [[[ if (states["sensor.memory_use_percent"].state
                              > 60) return  "tomato";  else return
                              "var(--text_on)"; ]]]
                        info4:
                          - padding-bottom: 1%
                          - '--text-color-sensor': >-
                              [[[ if
                              (states["sensor.disk_use_percent_home"].state >
                              70) return "tomato";  else return
                              "var(--text_on)"; ]]]
                    custom_fields:
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(100,100,100,0.5)
                              entity: sensor.cpu_temperature
                          height: 300
                          line_width: 4
                          lower_bound: 18
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                      info2: |
                        [[[
                          return `<ha-icon
                            icon="mdi:server"
                            style="width: 12px; height: 12px; color: grey;">
                            </ha-icon><span> CPU : <span style="color: var(--text-color-sensor);">${states['sensor.processor_use_percent'].state}%</span></span>`
                        ]]]
                      info3: |
                        [[[
                          return `<ha-icon
                            icon="mdi:memory"
                            style="width: 12px; height: 12px; color: grey;">
                            </ha-icon><span> RAM : <span style="color: var(--text-color-sensor);">${states['sensor.memory_use_percent'].state}%</span></span>`
                        ]]]
                      info4: |
                        [[[
                          return `<ha-icon
                            icon="mdi:harddisk"
                            style="width: 12px; height: 12px; color: grey;">
                            </ha-icon><span> SSD : <span style="color: var(--text-color-sensor);">${states['sensor.disk_use_percent_home'].state}%</span></span>`
                        ]]]
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/RPI
                  - type: custom:button-card
                    entity: sensor.myenedis_cost_yesterday_09397539765420
                    name: Enedis
                    icon: mdi:flash
                    template:
                      - base
                      - base_tres_large
                      - carte_systeme
                      - state_unavailable
                    label: >
                      [[[return states["sensor.myenedis_cout_j1v2"].state
                      +"€"]]]
                    styles:
                      img_cell:
                        - background-color: |
                            [[[
                              if (entity.state < 3) return 'var(--pastille_off)';
                              if (entity.state >= 3 && entity.state < 4) return 'tomato';
                              else return 'tomato';
                            ]]]
                      icon:
                        - color: |
                            [[[
                              if (entity.state < 3) return 'var(--icon_off)';
                              if (entity.state >= 3 && entity.state < 4) return 'var(--icon_on)';
                              else return 'var(--icon_on)';
                            ]]]
                        - animation: |
                            [[[
                              if (entity.state == "unavailable" )
                                return "blink 1s ease infinite";
                             return "";
                            ]]]
                      custom_fields:
                        info2:
                          - padding-bottom: 5%
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.myenedis_conso_semaine_en_cours_v2'].state == "unavailable")
                                 return 'transparent'
                                return 'lightgrey';
                              ]]]
                        info3:
                          - padding-bottom: 5%
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.myenedis_cout_mois_en_cours_abo'].state == "unavailable")
                                 return 'transparent'
                                return 'lightgrey';
                              ]]]
                        info4:
                          - padding-bottom: 5%
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.myenedis_cout_annee_en_cours_abo'].state == "unavailable")
                                 return 'transparent'
                                return 'lightgrey';
                              ]]]
                    custom_fields:
                      ic:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: script.rechargement_integration_myenedis
                              icon: mdi:reload-alert
                              show_name: false
                              styles:
                                icon:
                                  - color: var(--icon_off)
                                  - width: 80%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - entity: sensor.myenedis_cout_j7
                              color: rgba(123,104,238,0.3)
                            - entity: sensor.myenedis_cout_j6
                              color: rgba(123,104,238,0.3)
                            - entity: sensor.myenedis_cout_j5
                              color: rgba(123,104,238,0.3)
                            - entity: sensor.myenedis_cout_j4
                              color: rgba(123,104,238,0.3)
                            - entity: sensor.myenedis_cout_j3
                              color: rgba(123,104,238,0.3)
                            - entity: sensor.myenedis_cout_j2
                              color: rgba(123,104,238,0.3)
                            - entity: sensor.myenedis_cout_j1
                              color: rgba(255,255,0,0.6)
                          height: 300
                          line_width: 1
                          lower_bound: 1
                          group_by: date
                          show:
                            graph: bar
                            fill: false
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                      info2: |
                        [[[
                          return `
                            </ha-icon><span>Semaine : <span style="color: var(--text-color-sensor);">${states['sensor.myenedis_conso_semaine_en_cours_v2'].state}€</span></span>`
                        ]]]
                      info3: |
                        [[[
                          return `
                            </ha-icon><span>Mois : <span style="color: var(--text-color-sensor);">${states['sensor.myenedis_cout_mois_en_cours_abo'].state}€</span></span>`
                        ]]]
                      info4: |
                        [[[
                          return `
                            </ha-icon><span>Année : <span style="color: var(--text-color-sensor);">${states['sensor.myenedis_cout_annee_en_cours_abo'].state}€</span></span>`
                        ]]]
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Conso Enedis
                  - type: custom:button-card
                    entity: sensor.temp_moyenne
                    icon: mdi:thermometer
                    name: Température
                    template:
                      - base
                      - base_tres_large
                      - carte_systeme
                    label: |
                      [[[return states["sensor.temp_moyenne_rdc"].state +"°"]]]
                    styles:
                      icon:
                        - color: |
                            [[[
                              if (entity.state < 18) return 'var(--icon_on)';
                              if (entity.state >= 19 && entity.state < 26.9) return 'var(--icon_off)';
                              else return 'var(--icon_on)';
                            ]]]
                      img_cell:
                        - background-color: |
                            [[[
                              if (entity.state < 18) return 'dodgerblue';
                              if (entity.state >= 19 && entity.state < 26.9) return 'var(--pastille_off)';
                              else return 'tomato';
                            ]]]
                      custom_fields:
                        info2:
                          - padding-bottom: 5%
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.temp_moyenne_etage'].state <= 19)
                                  return 'rgba(0,191,255,0.5)';
                                if (states['sensor.temp_moyenne_etage'].state > 26.9)
                                  return 'tomato';
                                return 'lightgrey';
                              ]]]
                        info3:
                          - padding-bottom: 5%
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.temp_salle_de_bain'].state <= 19)
                                  return 'rgba(0,191,255,0.5)';
                                if (states['sensor.temp_salle_de_bain'].state > 26.9)
                                  return 'tomato';
                                return 'lightgrey';
                              ]]]
                        info4:
                          - padding-bottom: 5%
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.plante_citro_temp'].state <= 10)
                                  return 'rgba(0,191,255,0.5)';
                                if (states['sensor.plante_citro_temp'].state > 27)
                                  return 'tomato';
                                return 'lightgrey';
                              ]]]
                    custom_fields:
                      info2: |
                        [[[
                          return `
                            </ha-icon><span> Etage : <span style="color: var(--text-color-sensor);">${states['sensor.temp_moyenne_etage'].state}°</span></span>`
                        ]]]
                      info3: |
                        [[[
                          return `
                            </ha-icon><span> SdB : <span style="color: var(--text-color-sensor);">${states['sensor.temp_salle_de_bain'].state}°</span></span>`
                        ]]]
                      info4: |
                        [[[
                          return `
                            </ha-icon><span> Véranda : <span style="color: var(--text-color-sensor);">${states['sensor.plante_citro_temp'].state}°</span></span>`
                        ]]]
                      ic:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: script.rechargement_integration_ble_monitor
                              icon: mdi:reload-alert
                              show_name: false
                              styles:
                                icon:
                                  - color: var(--icon_off)
                                  - width: 75%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                              tap_action:
                                action: toggle
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(255,0,0,0.5)
                              entity: sensor.temp_moyenne_rdc
                          height: 300
                          line_width: 4
                          lower_bound: 18
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                    double_tap_action:
                      action: more-info
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Temp
                  - type: custom:button-card
                    entity: sensor.plante_citro_temp
                    name: Plantes
                    icon: mdi:flower-tulip
                    template:
                      - base
                      - base_tres_large
                      - carte_systeme
                    styles:
                      img_cell:
                        - background-color: |
                            [[[
                              if (states['sensor.plante_citro_humidite'].state < 5 || states['sensor.plante_hum_pied_elephant'].state < 5 || states['sensor.plante_hum_dracaena'].state < 5) return 'dodgerblue'
                              else return 'var(--pastille_off)';
                            ]]]
                      icon:
                        - color: |
                            [[[
                              if (states['sensor.plante_citro_humidite'].state < 5 || states['sensor.plante_hum_pied_elephant'].state < 5 || states['sensor.plante_hum_dracaena'].state < 5) return 'var(--icon_on)'
                              else return 'var(--icon_off)';
                            ]]]
                      custom_fields:
                        info2:
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.plante_hum_dracaena'].state == "unavailable")
                                 return 'transparent'
                                if (states['sensor.plante_hum_dracaena'].state < 5)
                                 return 'dodgerblue'
                                return 'lightgrey';
                              ]]]
                        info3:
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.plante_hum_pied_elephant'].state == "unavailable")
                                 return 'transparent'
                                if (states['sensor.plante_hum_pied_elephant'].state < 5)
                                 return 'dodgerblue'
                                return 'lightgrey'
                              ]]]
                        info4:
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.plante_citro_humidite'].state == "unavailable" )
                                 return 'transparent'
                                if (states['sensor.plante_citro_humidite'].state < 5)
                                 return 'dodgerblue'
                                return 'lightgrey';
                              ]]]
                    custom_fields:
                      info2: |
                        [[[
                          return `<span> Dracena
                            <ha-icon
                            icon="mdi:water"
                            style="width: 13px; height: 15px; color: dodgerblue;">
                            </ha-icon><span style="color: var(--text-color-sensor);">${states['sensor.plante_hum_dracaena'].state}%</span></span>`
                        ]]]
                      info3: |
                        [[[
                          return `<span> Pied Eleph
                            <ha-icon
                            icon="mdi:water"
                            style="width: 13px; height: 15px; color: dodgerblue;">
                            </ha-icon><span style="color: var(--text-color-sensor);">${states['sensor.plante_hum_pied_elephant'].state}%</span></span>`
                        ]]]
                      info4: |
                        [[[
                          return `<span> Citronnier
                            <ha-icon
                            icon="mdi:water"
                            style="width: 13px; height: 15px; color: dodgerblue;">
                            </ha-icon><span style="color: var(--text-color-sensor);">${states['sensor.plante_citro_humidite'].state}%</span></span>`
                        ]]]
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(30,144,255,0.5)
                              entity: sensor.plante_hum_dracaena
                          height: 300
                          line_width: 4
                          lower_bound: 18
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Plantes
                columns: 2
                square: false
            type: vertical-stack
        layout:
          width: 280
  - theme: Backend-selected
    title: Batteries
    path: batteries
    icon: mdi:battery-60
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - cards:
              - type: custom:button-card
                template:
                  - titre_section
                style:
                  .: |
                    ha-card {
                        --ha-card-background: none !important;
                        box-shadow: none !important;
                        font-family: Avenir
                name: |
                  [[[ return "Mouvements " ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.mouv_salon_batterie
                    name: Salon
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.mouv_salle_a_manger_batterie
                    name: SaM
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.mouv_couloir_batterie
                    name: Couloir
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.mouv_salle_d_eau_batterie
                    name: S d'eau
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.mouv_garage_batterie
                    name: Garage
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.mouv_escalier_batterie
                    name: Escalier
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.mouv_tom_batterie
                    name: Tom
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.mouv_manon_batterie
                    name: Manon
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.mouv_leane_batterie
                    name: Léane
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.mouv_nina_batterie
                    name: Nina
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
              - type: custom:button-card
                template:
                  - titre_section
                style:
                  .: |
                    ha-card {
                        --ha-card-background: none !important;
                        box-shadow: none !important;
                        font-family: Avenir
                name: |
                  [[[ return "Portes " ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.porte_entree_batterie
                    name: Entrée
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.porte_salle_a_manger_batterie
                    name: SaM
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.porte_cagibi_batterie
                    name: Cagibi
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.porte_garage_batterie
                    name: Garage
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.porte_cuisine_batterie
                    name: Cuisine
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.porte_chambre_parents_batterie
                    name: Parents
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
            type: vertical-stack
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - cards:
              - type: custom:button-card
                template:
                  - titre_section
                style:
                  .: |
                    ha-card {
                        --ha-card-background: none !important;
                        box-shadow: none !important;
                        font-family: Avenir
                name: |
                  [[[ return "Thermomètres " ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.sejour_thermo_batterie
                    name: Séjour
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.couloir_thermo_batterie
                    name: RDC
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.parents_thermo_batterie
                    name: Parents
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.temp_parents_aqara_batterie
                    name: Parents (Aqara)
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.cuisine_thermo_batterie
                    name: Cuisine
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.temp_sdb_battery_level
                    name: SDB
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.tom_thermo_batterie
                    name: Tom
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.manon_thermo_batterie
                    name: Manon
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.nina_thermo_batterie
                    name: Nina
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
              - type: custom:button-card
                template:
                  - titre_section
                style:
                  .: |
                    ha-card {
                        --ha-card-background: none !important;
                        box-shadow: none !important;
                        font-family: Avenir
                name: |
                  [[[ return "Autres " ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.aarlo_battery_level_sonnette
                    name: Sonnette
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.moniteur_qualite_air_batterie
                    name: Air Qualité
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.cube_aqara_batterie
                    name: Cube
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.vibrations_batterie
                    name: Vibrations
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.clavier_alarme_batterie
                    name: Clavier
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
            type: vertical-stack
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - cards:
              - type: custom:button-card
                template:
                  - titre_section
                style:
                  .: |
                    ha-card {
                        --ha-card-background: none !important;
                        box-shadow: none !important;
                        font-family: Avenir
                name: |
                  [[[ return "Interrupteurs " ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.inter_entree_batterie
                    name: Entrée
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.inter_couloir_batterie
                    name: Couloir
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.inter_chambre_parents_batterie
                    name: Parents
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.inter_salon_batterie
                    name: Salon
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.inter_salle_a_manger_batterie
                    name: SàM
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.inter_ambiances_sejour_batterie
                    name: Ambiances
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.inter_salle_d_eau_batterie
                    name: S d'eau
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.inter_chambre_tom_batterie
                    name: Tom chambre
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.inter_chevet_tom_batterie
                    name: Tom chevet
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.inter_grande_chambre_batterie
                    name: Gde chambre
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.inter_chevet_leane_batterie
                    name: Léane chevet
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.inter_chevet_manon_batterie
                    name: Manon chevet
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.inter_chambre_nina_batterie
                    name: Nina chbre
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.inter_chevet_nina_batterie
                    name: Nina chevet
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
                  - type: custom:button-card
                    entity: sensor.inter_palier_batterie
                    name: Palier
                    icon: mdi:battery
                    template:
                      - base
                      - base_moyenne
                      - state_batterie
            type: vertical-stack
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - cards:
              - type: custom:button-card
                template:
                  - titre_section
                style:
                  .: |
                    ha-card {
                        --ha-card-background: none !important;
                        box-shadow: none !important;
                        font-family: Avenir
                name: |
                  [[[ return "Conso électrique " ]]]
              - header:
                  title: 👕 Lave linge
                  show: true
                  show_states: true
                  colorize_states: true
                experimental:
                  brush: true
                graph_span: 120h
                brush:
                  selection_span: 12h
                apex_config:
                  grid:
                    show: false
                  legend:
                    fontSize: 12px
                    height: 40
                  dataLabels:
                    enabled: false
                  stroke:
                    width: 3
                    curve: smooth
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.5
                      opacityTo: 0
                      stops:
                        - - 0
                          - 50
                          - 100
                  tooltip:
                    enabled: true
                  yaxis:
                    - show: true
                      decimalsInFloat: 0
                      labels:
                        style:
                          colors: '#FFB62E'
                          fontSize: 12px
                      forceNiceScale: true
                    - show: false
                      decimalsInFloat: 0
                      opposite: true
                      labels:
                        style:
                          colors: '#2eb9ff'
                          fontSize: 12px
                      forceNiceScale: true
                  xaxis:
                    axisBorder:
                      show: false
                    labels:
                      style:
                        fontSize: 14px
                series:
                  - entity: sensor.lave_linge_conso
                    name: Prise Xiaomi
                    type: area
                    color: grey
                    fill_raw: last
                    float_precision: 1
                type: custom:apexcharts-card
              - type: custom:content-card-linky
                nbJoursAffichage: '7'
                entity: sensor.myenedis_09397539765420
                showDayName: short
                showTitle: true
                titleName: Enedis
                showIcon: false
                showHistory: true
                showInTableUnit: true
                showDayPriceHCHP: false
                showDayHCHP: false
                showMonthRatio: true
                showYesterdayRatio: true
                showError: true
                showPeakOffPeak: false
                showDayPrice: true
                showPrice: true
                showCurrentMonthRatio: true
                showTitreLigne: true
                showWeekRatio: true
                style: |
                  ha-card {
                    color: lightgrey ;
                    font-size: 95%;
                    font-family: Avenir;
                  }
            type: vertical-stack
  - theme: Backend-selected
    title: Temp
    path: temp
    icon: mdi:thermometer
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - square: false
            columns: 1
            type: grid
            cards:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Maison" ]]]
              - type: custom:button-card
                entity: sensor.temp_sejour
                name: Séjour
                icon: phu:rooms-living
                template:
                  - carte_jauge
                  - state_temp
                styles:
                  custom_fields:
                    pile:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.sejour_thermo_batterie'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.sejour_thermo_batterie'].state < 20)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_sejour'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.temp_sejour'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.temp_sejour'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.hum_sejour'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.hum_sejour'].state < 40)
                             return 'dodgerblue'
                            if (states['sensor.hum_sejour'].state > 80)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info3:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_lum_dracaena'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.plante_lum_dracaena'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    info4:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_lum_pied_elephant'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.plante_lum_pied_elephant'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  pile: |
                    [[[
                      return `<ha-icon
                        icon="mdi:battery"
                        style="width: 15px; height: 15px; color: lightgrey;">
                        </ha-icon><span> <span style="color: var(--text-color-sensor);">${states['sensor.sejour_thermo_batterie'].state} %</span></span>`
                    ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.temp_sejour'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.temp_sejour
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.hum_sejour'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.hum_sejour
                          color: dodgerblue
                  info3: |
                    [[[
                      return `<ha-icon
                        icon="mdi:brightness-5"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Dracaena : <span style="color: var(--text-color-sensor);">${states['sensor.plante_lum_dracaena'].state} lx</span></span>`
                    ]]]
                  jauge_info3:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.plante_lum_dracaena
                          color: gold
                  info4: |
                    [[[
                      return `<ha-icon
                        icon="mdi:brightness-5"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Dracaena : <span style="color: var(--text-color-sensor);">${states['sensor.plante_lum_pied_elephant'].state} lx</span></span>`
                    ]]]
                  jauge_info4:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.plante_lum_pied_elephant
                          color: gold
                          max: 1000
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(255,99,71,0.3)
                          entity: sensor.temp_sejour
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: sensor.temp_couloir_rdc
                name: Couloir
                icon: phu:wall-spot
                template:
                  - carte_jauge
                  - state_temp
                styles:
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_couloir_rdc'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.temp_couloir_rdc'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.temp_couloir_rdc'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.hum_couloir_rdc'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.hum_couloir_rdc'].state < 40)
                             return 'dodgerblue'
                            if (states['sensor.hum_couloir_rdc'].state > 80)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  pile: |
                    [[[
                      return `<ha-icon
                        icon="mdi:battery"
                        style="width: 15px; height: 15px; color: lightgrey;">
                        </ha-icon><span> <span style="color: var(--text-color-sensor);">${states['sensor.couloir_thermo_batterie'].state} %</span></span>`
                    ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.temp_couloir_rdc'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.temp_couloir_rdc
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.hum_couloir_rdc'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.hum_couloir_rdc
                          color: dodgerblue
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(255,99,71,0.3)
                          entity: sensor.temp_couloir_rdc
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: sensor.temp_salle_de_bain
                name: Salle de bain
                icon: phu:rooms-bathroom
                template:
                  - carte_jauge
                  - state_temp
                styles:
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_salle_de_bain'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.temp_salle_de_bain'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.temp_salle_de_bain'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.hum_salle_de_bain'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.hum_salle_de_bain'].state < 40)
                             return 'dodgerblue'
                            if (states['sensor.hum_salle_de_bain'].state > 80)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    pile:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_sdb_battery_level'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.temp_sdb_battery_level'].state < 10)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  pile: |
                    [[[
                      return `<ha-icon
                        icon="mdi:battery"
                        style="width: 15px; height: 15px; color: lightgrey;">
                        </ha-icon><span> <span style="color: var(--text-color-sensor);">${states['sensor.temp_sdb_battery_level'].state} %</span></span>`
                    ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.temp_salle_de_bain'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.temp_salle_de_bain
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.hum_salle_de_bain'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.hum_salle_de_bain
                          color: dodgerblue
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(255,99,71,0.3)
                          entity: sensor.temp_salle_de_bain
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - square: false
            columns: 1
            type: grid
            cards:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Chambres" ]]]
              - type: custom:button-card
                entity: sensor.temp_parents
                name: Chambre parents
                icon: phu:rooms-bedroom
                template:
                  - carte_jauge
                  - state_temp
                styles:
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_parents'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.temp_parents'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.temp_parents'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.hum_parents'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.hum_parents'].state < 40)
                             return 'dodgerblue'
                            if (states['sensor.hum_parents'].state > 80)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    pile:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.parents_thermo_batterie'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.parents_thermo_batterie'].state < 10)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  pile: |
                    [[[
                      return `<ha-icon
                        icon="mdi:battery"
                        style="width: 15px; height: 15px; color: lightgrey;">
                        </ha-icon><span> <span style="color: var(--text-color-sensor);">${states['sensor.parents_thermo_batterie'].state} %</span></span>`
                    ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.temp_parents'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.temp_parents
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.hum_parents'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.hum_parents
                          color: dodgerblue
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(255,99,71,0.3)
                          entity: sensor.temp_parents
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: sensor.temp_tom
                name: Chambre Tom
                icon: mdi:bat
                template:
                  - carte_jauge
                  - state_temp
                styles:
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_tom'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.temp_tom'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.temp_tom'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.hum_tom'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.hum_tom'].state < 40)
                             return 'dodgerblue'
                            if (states['sensor.hum_tom'].state > 80)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info3:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.mouv_tom_luminosite'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.mouv_tom_luminosite'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    pile:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.tom_thermo_batterie'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.tom_thermo_batterie'].state < 10)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  pile: |
                    [[[
                      return `<ha-icon
                        icon="mdi:battery"
                        style="width: 15px; height: 15px; color: lightgrey;">
                        </ha-icon><span> <span style="color: var(--text-color-sensor);">${states['sensor.tom_thermo_batterie'].state} %</span></span>`
                    ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.temp_tom'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.temp_tom
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.hum_tom'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.hum_tom
                          color: dodgerblue
                  info3: |
                    [[[
                      return `<ha-icon
                        icon="mdi:brightness-5"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Luminosité : <span style="color: var(--text-color-sensor);">${states['sensor.mouv_tom_luminosite'].state} lx</span></span>`
                    ]]]
                  jauge_info3:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.mouv_tom_luminosite
                          color: gold
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(255,99,71,0.3)
                          entity: sensor.temp_tom
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: sensor.temp_manon
                name: Chambre Manon et Léane
                icon: mdi:death-star-variant
                template:
                  - carte_jauge
                  - state_temp
                styles:
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_manon'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.temp_manon'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.temp_manon'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.hum_manon'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.hum_manon'].state < 40)
                             return 'dodgerblue'
                            if (states['sensor.hum_manon'].state > 80)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info3:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.mouv_manon_luminosite'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.mouv_manon_luminosite'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    info4:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.mouv_leane_luminosite'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.mouv_leane_luminosite'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    pile:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.manon_thermo_batterie'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.manon_thermo_batterie'].state < 10)
                             return 'red'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  pile: |
                    [[[
                      return `<ha-icon
                        icon="mdi:battery"
                        style="width: 15px; height: 15px; color: lightgrey;">
                        </ha-icon><span> <span style="color: var(--text-color-sensor);">${states['sensor.manon_thermo_batterie'].state} %</span></span>`
                    ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.temp_manon'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.temp_manon
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.hum_manon'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.hum_manon
                          color: dodgerblue
                  info3: |
                    [[[
                      return `<ha-icon
                        icon="mdi:brightness-5"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Manon : <span style="color: var(--text-color-sensor);">${states['sensor.mouv_manon_luminosite'].state} lx</span></span>`
                    ]]]
                  jauge_info3:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.mouv_manon_luminosite
                          color: gold
                  info4: |
                    [[[
                      return `<ha-icon
                        icon="mdi:brightness-5"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Léane: <span style="color: var(--text-color-sensor);">${states['sensor.mouv_leane_luminosite'].state} lx</span></span>`
                    ]]]
                  jauge_info4:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.mouv_leane_luminosite
                          color: gold
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(255,99,71,0.3)
                          entity: sensor.temp_manon
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: sensor.temp_nina
                name: Chambre Nina
                icon: mdi:owl
                template:
                  - carte_jauge
                  - state_temp
                styles:
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_nina'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.temp_nina'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.temp_nina'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.hum_nina'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.hum_nina'].state < 40)
                             return 'dodgerblue'
                            if (states['sensor.hum_nina'].state > 80)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info3:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.mouv_nina_luminosite'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.mouv_nina_luminosite'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    pile:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.nina_thermo_batterie'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.nina_thermo_batterie'].state < 10)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  pile: |
                    [[[
                      return `<ha-icon
                        icon="mdi:battery"
                        style="width: 15px; height: 15px; color: lightgrey;">
                        </ha-icon><span> <span style="color: var(--text-color-sensor);">${states['sensor.nina_thermo_batterie'].state} %</span></span>`
                    ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.temp_nina'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.temp_nina
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.hum_nina'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.hum_nina
                          color: dodgerblue
                  info3: |
                    [[[
                      return `<ha-icon
                        icon="mdi:brightness-5"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Luminosité : <span style="color: var(--text-color-sensor);">${states['sensor.mouv_nina_luminosite'].state} lx</span></span>`
                    ]]]
                  jauge_info3:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.mouv_nina_luminosite
                          color: gold
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(255,99,71,0.3)
                          entity: sensor.temp_nina
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - square: false
            columns: 1
            type: grid
            cards:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Plantes" ]]]
              - type: custom:button-card
                entity: sensor.plante_temp_dracaena
                name: Plante salon
                icon: mdi:flower
                label: |
                  [[[ return "Dracaena" ]]]
                show_label: true
                show_last_changed: false
                template:
                  - carte_jauge
                  - state_temp
                styles:
                  img_cell:
                    - background-color: |
                        [[[
                          if (states['sensor.plante_hum_dracaena'].state < 5 ) return 'dodgerblue'
                          else return 'var(--pastille_off)';
                        ]]]
                  icon:
                    - color: |
                        [[[
                          if (states['sensor.plante_hum_dracaena'].state < 5 ) return 'var(--icon_on)'
                          else return 'var(--icon_off)';
                        ]]]
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_temp_dracaena'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.plante_temp_dracaena'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_hum_dracaena'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.plante_hum_dracaena'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey'
                          ]]]
                    info3:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_lum_dracaena'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.plante_lum_dracaena'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    info4:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_fertilite_dracaena'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.plante_fertilite_dracaena'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.plante_temp_dracaena'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.plante_temp_dracaena
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_hum_dracaena'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      name: temp
                      entities:
                        - entity: sensor.plante_hum_dracaena
                          color: dodgerblue
                  info3: |
                    [[[
                      return `<ha-icon
                        icon="mdi:brightness-5"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Luminosité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_lum_dracaena'].state} lx</span></span>`
                    ]]]
                  jauge_info3:
                    card:
                      type: custom:bar-card
                      name: temp
                      entities:
                        - entity: sensor.plante_lum_dracaena
                          color: gold
                  info4: |
                    [[[
                      return `<ha-icon
                        icon="mdi:lightning-bolt"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Fertilité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_fertilite_dracaena'].state} µS/cm</span></span>`
                    ]]]
                  jauge_info4:
                    card:
                      type: custom:bar-card
                      name: temp
                      entities:
                        - entity: sensor.plante_fertilite_dracaena
                          color: green
                          max: 1000
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(0,191,255,0.3)
                          entity: sensor.plante_hum_dracaena
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: sensor.plante_temp_pied_elephant
                name: Pied d’élephant
                icon: mdi:elephant
                label: |
                  [[[ return "Beaucarnea" ]]]
                show_label: true
                show_last_changed: false
                template:
                  - carte_jauge
                  - state_temp
                styles:
                  img_cell:
                    - background-color: |
                        [[[
                          if (states['sensor.plante_hum_pied_elephant'].state < 5 ) return 'dodgerblue'
                          else return 'var(--pastille_off)';
                        ]]]
                  icon:
                    - color: |
                        [[[
                          if (states['sensor.plante_hum_pied_elephant'].state < 5 ) return 'var(--icon_on)'
                          else return 'var(--icon_off)';
                        ]]]
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_temp_pied_elephant'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.plante_temp_pied_elephant'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_hum_pied_elephant'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.plante_hum_pied_elephant'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey'
                          ]]]
                    info3:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_lum_pied_elephant'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.plante_lum_pied_elephant'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    info4:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_fertilite_pied_elephant'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.plante_fertilite_pied_elephant'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.plante_temp_pied_elephant'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.plante_temp_pied_elephant
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_hum_pied_elephant'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.plante_hum_pied_elephant
                          color: dodgerblue
                  info3: |
                    [[[
                      return `<ha-icon
                        icon="mdi:brightness-5"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Luminosité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_lum_pied_elephant'].state} lx</span></span>`
                    ]]]
                  jauge_info3:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.plante_lum_pied_elephant
                          color: gold
                  info4: |
                    [[[
                      return `<ha-icon
                        icon="mdi:lightning-bolt"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Fertilité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_fertilite_pied_elephant'].state} µS/cm</span></span>`
                    ]]]
                  jauge_info4:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.plante_fertilite_pied_elephant
                          color: green
                          max: 1000
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(0,191,255,0.3)
                          entity: sensor.plante_hum_pied_elephant
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: sensor.plante_citro_temp
                name: Citronnier
                icon: mdi:flower-poppy
                label: |
                  [[[ return "Citrus limon" ]]]
                show_label: true
                show_last_changed: false
                template:
                  - carte_jauge
                  - state_temp
                styles:
                  img_cell:
                    - background-color: |
                        [[[
                          if (states['sensor.plante_citro_humidite'].state < 5 ) return 'dodgerblue'
                          else return 'var(--pastille_off)';
                        ]]]
                  icon:
                    - color: |
                        [[[
                          if (states['sensor.plante_citro_humidite'].state < 5 ) return 'var(--icon_on)'
                          else return 'var(--icon_off)';
                        ]]]
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_citro_temp'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.plante_citro_temp'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_citro_humidite'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.plante_citro_humidite'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey'
                          ]]]
                    info3:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_citro_humidite'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.plante_citro_humidite'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    info4:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_citro_fertilite'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.plante_citro_fertilite'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.plante_citro_temp'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.plante_citro_temp
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_citro_humidite'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.plante_citro_humidite
                          color: dodgerblue
                  info3: |
                    [[[
                      return `<ha-icon
                        icon="mdi:brightness-5"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Luminosité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_citro_lum'].state} lx</span></span>`
                    ]]]
                  jauge_info3:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.plante_citro_lum
                          color: gold
                  info4: |
                    [[[
                      return `<ha-icon
                        icon="mdi:lightning-bolt"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Fertilité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_citro_fertilite'].state} µS/cm</span></span>`
                    ]]]
                  jauge_info4:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.plante_citro_fertilite
                          color: green
                          max: 1000
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(0,191,255,0.3)
                          entity: sensor.plante_citro_humidite
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
  - theme: Backend-selected
    icon: mdi:broom
    path: Aspis
    title: Aspis
    visible:
      - user: 2f0040afe95a4514ade3c049a0b5d479
      - user: 76afcf1927a948b19530bcbf1074ac59
      - user: d8316597eafd4333b737464a5b4c62d0
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: true
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 350
        cards:
          - type: vertical-stack
            cards:
              - type: vertical-stack
                cards:
                  - type: custom:xiaomi-vacuum-card
                    style: |
                      ha-card {
                        border-radius: 15px;
                      }
                    entity: vacuum.wall_e
                    image: /local/aspis/walle.jpeg
                    name: Wall-E
                    attributes:
                      main_brush:
                        label: 'Brosse '
                        unit: ' h'
                      side_brush:
                        label: 'Brosette '
                        unit: ' h'
                      filter:
                        label: 'Filtre '
                      sensor:
                        label: 'Capteurs '
                    shortcuts:
                      spot:
                        show: true
                        label: Nettoyage localisé
                      new_button:
                        icon: mdi:flag-variant
                        label: Custom button!
                        service: script.turn_on
                        service_data:
                          entity_id: script.sortir_l_aspi
                  - square: false
                    columns: 8
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: script.aspi_walle_sejour
                        name: Séjour
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_salle_a_manger
                        name: SàM
                        show_name: true
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_walle_salon
                        name: Salon
                        show_name: true
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_walle_chambre_parents
                        name: Parents
                        show_name: true
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_walle_cuisine
                        name: Cuisine
                        show_name: true
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_walle_entree
                        name: Entrée
                        show_name: true
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_walle_tapis
                        name: Tapis
                        show_name: true
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                      - type: custom:button-card
                        entity: script.aspi_walle_couloir
                        name: Couloir
                        show_name: true
                        template:
                          - carte_badge
                        tap_action:
                          action: toggle
                  - type: custom:xiaomi-vacuum-map-card
                    entity: vacuum.wall_e
                    map_source:
                      camera: camera.roborock_s6
                    calibration_source:
                      camera: true
                    language: fr
                    debug: false
                    map_modes:
                      - template: vacuum_clean_zone
                      - template: vacuum_goto
                      - template: vacuum_clean_zone_predefined
                        predefined_selections:
                          - zones:
                              - - 25027
                                - 24933
                                - 28549
                                - 28632
                          - zones:
                              - - 28625
                                - 25085
                                - 31969
                                - 28683
                          - zones:
                              - - 31944
                                - 24883
                                - 33895
                                - 28683
                          - zones:
                              - - 23761
                                - 28734
                                - 27308
                                - 31571
                          - zones:
                              - - 28777
                                - 28759
                                - 32603
                                - 30507
                          - zones:
                              - - 32628
                                - 28835
                                - 33768
                                - 30532
                          - zones:
                              - - 27308
                                - 28759
                                - 28802
                                - 33522
                          - zones:
                              - - 28828
                                - 30608
                                - 29740
                                - 33547
                          - zones:
                              - - 23659
                                - 31672
                                - 27282
                                - 35118
                          - zones:
                              - - 30150
                                - 30550
                                - 33050
                                - 34300
                    map_locked: true
                    two_finger_pan: false
                  - square: false
                    columns: 4
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: script.aspi_walle_reset_brosse_principale
                        name: Brosse principale
                        icon: mdi:robot-vacuum-variant
                        template:
                          - carte_badge
                        confirmation:
                          text: >-
                            [[[ return `Wall-E Reset de la brosse principale ?`
                            ]]]
                        tap_action:
                          action: call-service
                          service: script.turn_on
                          service_data:
                            entity_id: script.aspi_walle_reset_brosse_principale
                      - type: custom:button-card
                        entity: script.aspi_walle_reset_brosse_laterale
                        name: Brosse latérale
                        icon: mdi:broom
                        template:
                          - carte_badge
                        confirmation:
                          text: >-
                            [[[ return `Wall-E Reset de la brosse latérale ?`
                            ]]]
                        tap_action:
                          action: call-service
                          service: script.turn_on
                          service_data:
                            entity_id: script.aspi_walle_reset_brosse_laterale
                      - type: custom:button-card
                        entity: script.aspi_walle_reset_capteurs
                        icon: mdi:state-machine
                        template:
                          - carte_badge
                        name: Capteurs
                        confirmation:
                          text: '[[[ return `Wall-E Reset des capteurs ?` ]]]'
                        tap_action:
                          action: call-service
                          service: script.turn_on
                          service_data:
                            entity_id: script.aspi_walle_reset_capteurs
                      - type: custom:button-card
                        entity: script.aspi_walle_reset_filtre
                        name: Filtre
                        icon: mdi:air-filter
                        template:
                          - carte_badge
                        confirmation:
                          text: '[[[ return `Wall-E Reset du filtre ?` ]]]'
                        tap_action:
                          action: call-service
                          service: script.turn_on
                          service_data:
                            entity_id: script.aspi_walle_reset_filtre
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 350
        cards:
          - type: vertical-stack
            cards:
              - type: custom:xiaomi-vacuum-card
                entity: vacuum.r2d2
                image: /local/aspis/r2d2.jpg
                name: R2D2
                vendor: xiaomi
                attributes:
                  main_brush:
                    label: 'Brosse '
                    unit: ' h'
                  side_brush:
                    label: 'Brossette '
                    unit: ' h'
                  filter:
                    label: 'Filtre: '
                  sensor:
                    label: 'Capteurs: '
                buttons:
                  spot:
                    show: true
                    label: Nettoyage localisé
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    entity: script.aspi_r2d2_chambre_tom
                    name: Tom
                    show_name: true
                    template:
                      - carte_badge
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: script.aspi_r2d2_chambre_manon_leane
                    name: Manon
                    show_name: true
                    template:
                      - carte_badge
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: script.aspi_r2d2_chambre_nina
                    name: Nina
                    show_name: true
                    template:
                      - carte_badge
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: script.aspi_r2d2_salle_de_bain
                    name: SdB
                    show_name: true
                    template:
                      - carte_badge
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: script.aspi_r2d2_palier
                    name: Palier
                    show_name: true
                    template:
                      - carte_badge
                    tap_action:
                      action: toggle
              - type: custom:xiaomi-vacuum-map-card
                entity: vacuum.r2d2
                map_source:
                  camera: camera.roborock_s50
                calibration_source:
                  camera: true
                language: fr
                debug: false
                map_modes:
                  - template: vacuum_clean_zone
                  - template: vacuum_goto
                  - template: vacuum_clean_zone_predefined
                    predefined_selections:
                      - zones:
                          - - 27589
                            - 24459
                            - 30627
                            - 27454
                      - zones:
                          - - 22780
                            - 21316
                            - 26598
                            - 24332
                      - zones:
                          - - 27589
                            - 21505
                            - 31217
                            - 24374
                      - zones:
                          - - 22864
                            - 17730
                            - 31112
                            - 21231
                      - zones:
                          - - 25227
                            - 24501
                            - 27526
                            - 25809
                      - zones:
                          - - 26661
                            - 21442
                            - 27547
                            - 24501
                map_locked: true
                two_finger_pan: false
              - square: false
                columns: 4
                type: grid
                cards:
                  - type: custom:button-card
                    entity: script.aspi_r2d2_reset_brosse_principale
                    name: Brosse principale
                    icon: mdi:robot-vacuum-variant
                    template:
                      - carte_badge
                    confirmation:
                      text: '[[[ return `R2D2 Reset de la brosse principale ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_r2d2_reset_brosse_principale
                  - type: custom:button-card
                    entity: script.aspi_r2d2_reset_brosse_laterale
                    name: Brosse latérale
                    icon: mdi:broom
                    template:
                      - carte_badge
                    confirmation:
                      text: '[[[ return `R2D2 Reset de la brosse latérale ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_r2d2_reset_brosse_laterale
                  - type: custom:button-card
                    entity: script.aspi_r2d2_reset_capteurs
                    icon: mdi:state-machine
                    name: Capteurs
                    template:
                      - carte_badge
                    confirmation:
                      text: '[[[ return `R2D2 Reset des capteurs ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_r2d2_reset_capteurs
                  - type: custom:button-card
                    entity: script.aspi_r2d2_reset_filtre
                    name: Filtre
                    icon: mdi:air-filter
                    template:
                      - carte_badge
                    confirmation:
                      text: '[[[ return `R2D2 Reset du filtre ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_r2d2_reset_filtre
  - theme: Backend-selected
    title: Lumières
    path: Lumières
    icon: mdi:lightbulb-group
    visible:
      - user: d8316597eafd4333b737464a5b4c62d0
      - user: 76afcf1927a948b19530bcbf1074ac59
      - user: 2f0040afe95a4514ade3c049a0b5d479
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: true
    badges:
      - entity: sensor.plante_lum_dracaena
        name: Dracaena
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.plante_lum_dracaena') | float < 90 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}      
      - entity: sensor.plante_lum_pied_elephant
        name: Pied d'Elephant
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.plante_lum_pied_elephant') | float < 90 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}    
      - entity: sensor.salle_a_manger_luminosite
        name: SaM
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.salle_a_manger_luminosite') | float < 90 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}         
      - entity: sensor.mouv_tom_luminosite
        name: Tom
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.mouv_tom_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %} 
      - entity: sensor.mouv_manon_luminosite
        name: Manon
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.mouv_nina_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}   
      - entity: sensor.mouv_leane_luminosite
        name: Léane
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.mouv_nina_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}               
      - entity: sensor.mouv_nina_luminosite
        name: Nina
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.mouv_nina_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %} 
      - entity: sensor.mouv_palier_lum
        name: Palier
        style: |
          :host {
            --label-badge-red: 
              {% if states('sensor.mouv_palier_lum') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %} 
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - cards:
                  - type: custom:button-card
                    template:
                      - titre_section
                    entity: light.sejour
                    name: |
                      [[[ return "Séjour" ]]]
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: light.lampe_de_bureau
                        name: Bureau
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.lampe_de_bureau
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.lampe_de_bureau
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                      - type: custom:button-card
                        entity: light.lampe_tv_salon
                        name: Lampe TV
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - state_lumiere
                          - state_unavailable
                      - type: custom:button-card
                        entity: light.bandeau_led
                        name: Bandeau TV
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.bandeau_led
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.bandeau_led
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                      - type: custom:button-card
                        entity: light.trilampe_gauche
                        name: Tri gauche
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.trilampe_gauche
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.trilampe_gauche
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                      - type: custom:button-card
                        entity: light.trilampe_centre
                        name: Tri centre
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.trilampe_centre
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.trilampe_centre
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                      - type: custom:button-card
                        entity: light.trilampe_droite
                        name: Tri droite
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.trilampe_droite
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.trilampe_droite
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                      - type: custom:button-card
                        entity: light.lustre_salon
                        name: Lustre salon
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.lustre_salon
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.lustre_salon
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                      - type: custom:button-card
                        entity: light.lustre_salle_a_manger
                        name: Lustre SaM
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.lustre_salle_a_manger
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.lustre_salle_a_manger
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                      - type: custom:button-card
                        entity: light.buffet
                        name: Buffet
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.buffet
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.buffet
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                      - type: custom:button-card
                        entity: light.lampadaire
                        name: Lampadaire
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.lampadaire
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.lampadaire
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                  - type: custom:button-card
                    color_type: blank-card
                  - type: custom:button-card
                    template:
                      - titre_section
                    entity: light.entree_et_couloir
                    name: |
                      [[[ return "Entrée" ]]]
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: light.couloir
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.couloir
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.couloir
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                      - type: custom:button-card
                        entity: light.entree
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.entree
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.entree
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                      - type: custom:button-card
                        entity: light.aqara_hub_54e1
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.aqara_hub_54e1
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.aqara_hub_54e1
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                      - type: custom:button-card
                        entity: light.veranda
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.veranda
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.veranda
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                  - type: custom:button-card
                    color_type: blank-card
                  - type: custom:button-card
                    template:
                      - titre_section
                    name: |
                      [[[ return "Garage" ]]]
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: light.cagibi
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.cagibi
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.cagibi
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                type: vertical-stack
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - cards:
              - type: custom:button-card
                template:
                  - titre_section
                entity: light.parents
                name: |
                  [[[ return "Chambre parents" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: switch.tele_des_parents
                    icon: mdi:youtube-tv
                    name: Prise TV
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - state_tv
                      - state_unavailable
                    show_label: false
                  - type: custom:button-card
                    entity: light.lustre_parents
                    name: Lustre
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lustre_parents
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lustre_parents
                            radius: 3px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.chevet
                    name: Chevet
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.chevet
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.chevet
                            radius: 3px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: switch.moustique_parents
                    name: Moustique
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - state_appareil
                      - state_unavailable
                    show_label: false
              - type: custom:button-card
                color_type: blank-card
              - type: custom:button-card
                template:
                  - titre_section
                entity: light.tom
                name: |
                  [[[ return "Chambre Tom" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: light.lustre_tom
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lustre_tom
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lustre_tom
                            radius: 3px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.chevet_tom
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.chevet_tom
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.chevet_tom
                            radius: 3px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.lampe_de_bureau_tom
                    name: Bureau
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lampe_de_bureau_tom
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lampe_de_bureau_tom
                            radius: 3px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.sonoff_10013f6d7e
                    name: Bureau
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_appareil
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.sonoff_10013f6d7e
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.sonoff_10013f6d7e
                            radius: 3px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: switch.moustique_tom
                    name: Moustique
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - state_lumiere
                      - state_unavailable
                    show_label: false
              - type: custom:button-card
                color_type: blank-card
              - type: custom:button-card
                template:
                  - titre_section
                entity: light.manon_et_leane
                name: |
                  [[[ return "Chambre Manon et Léane" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: light.lustre_manon_et_leane
                    name: Lustre
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lustre_manon_et_leane
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lustre_manon_et_leane
                            radius: 3px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.chevet_manon
                    name: Manon
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.chevet_manon
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.chevet_manon
                            radius: 3px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.lampe_de_bureau_manon
                    name: Bureau
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lampe_de_bureau_manon
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lampe_de_bureau_manon
                            radius: 3px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: switch.arbre_lumineux
                    name: Arbre
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    show_label: false
                  - type: custom:button-card
                    entity: light.lampe_manon_et_leane
                    name: Lampadaire
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lampe_manon_et_leane
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lampe_manon_et_leane
                            radius: 3px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.chevet_leane
                    name: Léane
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.chevet_leane
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.chevet_leane
                            radius: 3px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: switch.moustique_manon
                    name: Moustique
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_appareil
                      - state_unavailable
                    show_label: false
              - type: custom:button-card
                color_type: blank-card
              - type: custom:button-card
                template:
                  - titre_section
                entity: light.nina
                name: |
                  [[[ return "Chambre Nina" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: light.lampe_de_bureau_nina
                    name: Bureau
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lampe_de_bureau_nina
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lampe_de_bureau_nina
                            radius: 3px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.lustre_nina
                    name: Lustre
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lustre_nina
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lustre_nina
                            radius: 3px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.chevet_nina
                    name: Chevet
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.chevet_nina
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.chevet_nina
                            radius: 3px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: switch.guirlande_nina
                    name: Guirlande
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    show_label: false
                  - type: custom:button-card
                    entity: light.lampadaire_nina
                    name: Lampadaire
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lampadaire_nina
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lampadaire_nina
                            radius: 3px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: switch.moustique_nina
                    name: Moustique
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    show_label: false
              - type: custom:button-card
                color_type: blank-card
            type: vertical-stack
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - cards:
              - cards:
                  - type: custom:button-card
                    template:
                      - titre_section
                    entity: light.escaliers
                    name: |
                      [[[ return "Escalier et palier" ]]]
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: light.escalier
                        icon: mdi:stairs
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.escalier
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.escalier
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                      - type: custom:button-card
                        entity: light.palier
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.palier
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.palier
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                  - type: custom:button-card
                    color_type: blank-card
                  - type: custom:button-card
                    template:
                      - titre_section
                    entity: light.lavabo
                    name: |
                      [[[ return "Lavabo WC" ]]]
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: light.wc_gauche
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.wc_gauche
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.wc_gauche
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                      - type: custom:button-card
                        entity: light.wc_droit
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.wc_droit
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.wc_droit
                                radius: 3px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                  - type: custom:button-card
                    color_type: blank-card
                  - type: custom:button-card
                    template:
                      - titre_section
                    entity: switch.radiateur
                    name: |
                      [[[ return "Chauffage SDB" ]]]
                  - square: false
                    columns: 2
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: switch.radiateur
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - state_appareil
                          - state_unavailable
                        show_label: false
                  - type: custom:button-card
                    color_type: blank-card
                  - type: custom:button-card
                    template:
                      - titre_section
                    entity: group.noel
                    name: |
                      [[[ return "Lumières de Noël " ]]]
                type: vertical-stack
            type: vertical-stack
  - theme: Backend-selected
    title: Temperature
    path: Temp
    icon: mdi:home-thermometer-outline
    subview: true
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - titre_section
                label: |
                  [[[ return "Extérieur" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.weather_temperature_v2
                    name: >
                      [[[ return
                      states['sensor.weather_conditions_simplifiees'].state]]]
                    units: °C
                    icon: |
                      [[[
                        if (states['weather.beaucouze'].state == 'sunny' )
                          return 'mdi:weather-sunny';
                        if (states['weather.beaucouze'].state == 'rainy' )
                          return 'mdi:weather-rainy';
                        if (states['weather.beaucouze'].state == 'partlycloudy' )
                          return 'mdi:weather-partly-cloudy';
                        if (states['weather.beaucouze'].state == 'cloudy' )
                          return 'mdi:weather-cloudy';
                        if (states['weather.beaucouze'].state == 'clear-night' )
                          return 'mdi:weather-night';
                        if (states['weather.beaucouze'].state == 'fog' )
                          return 'mdi:weather-fog';
                        if (states['weather.beaucouze'].state == 'hail' )
                          return 'mdi:weather-hail';
                        if (states['weather.beaucouze'].state == 'lightning-rainy' )
                          return 'mdi:weather-lightning-rainy';
                        if (states['weather.beaucouze'].state == 'lightning' )
                          return 'mdi:weather-lightning';
                        if (states['weather.beaucouze'].state == 'pourring' )
                          return 'mdi:weather-pouring';
                        if (states['weather.beaucouze'].state == 'snowy-rainy' )
                          return 'mdi:weather-snowy-rainy';
                        if (states['weather.beaucouze'].state == 'snowy' )
                          return 'mdi:weather-snowy';
                        if (states['weather.beaucouze'].state == 'windy-variant' )
                          return 'mdi:weather-windy-variant';
                        if (states['weather.beaucouze'].state == 'windy' )
                          return 'mdi:weather-windy';
                        if (states['weather.beaucouze'].state == 'exceptional' )
                          return 'mdi:weather-cloudy-alert';
                        return 'mdi:weather-sunny';
                      ]]]
                    show_state: true
                    template:
                      - base
                      - base_moyenne
                      - state_temp_exterieur
                      - state_unavailable
                  - type: custom:button-card
                    entity: sensor.plante_citro_temp
                    name: Véranda
                    show_last_changed: true
                    show_state: true
                    template:
                      - base
                      - base_moyenne
                      - state_temp
                      - state_unavailable
              - type: custom:button-card
                template:
                  - titre_section
                label: |
                  [[[ return "Maison" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.temp_sejour
                    name: Séjour
                    show_state: true
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - state_temp
                      - state_unavailable
                  - type: custom:button-card
                    entity: sensor.temp_couloir_rdc
                    name: Couloir
                    show_state: true
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - state_temp
                      - state_unavailable
                  - type: custom:button-card
                    entity: sensor.temp_cuisine
                    name: Cuisine
                    show_state: true
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - state_temp
                      - state_unavailable
                  - type: custom:button-card
                    entity: sensor.temp_parents
                    name: Parents
                    show_state: true
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - state_temp
                      - state_unavailable
                  - type: custom:button-card
                    entity: sensor.temp_tom
                    name: Tom
                    show_state: true
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - state_temp
                      - state_unavailable
                  - type: custom:button-card
                    entity: sensor.temp_manon
                    name: Manon Lélé
                    show_state: true
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - state_temp
                      - state_unavailable
                  - type: custom:button-card
                    entity: sensor.temp_nina
                    name: Nina
                    show_state: true
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - state_temp
                      - state_unavailable
                  - type: custom:button-card
                    entity: sensor.temp_salle_de_bain
                    name: SdB
                    show_state: true
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - state_temp
                      - state_unavailable
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: vertical-stack
                cards:
                  - header:
                      title: 🛋 RDC température
                      show: true
                      show_states: true
                      colorize_states: true
                    experimental:
                      brush: true
                    graph_span: 72h
                    brush:
                      selection_span: 12h
                    apex_config:
                      grid:
                        show: false
                      legend:
                        fontSize: 12px
                        height: 40
                      dataLabels:
                        enabled: false
                      stroke:
                        width: 3
                        curve: smooth
                      fill:
                        type: gradient
                        gradient:
                          type: vertical
                          shadeIntensity: 0.8
                          inverseColors: false
                          opacityFrom: 0.5
                          opacityTo: 0
                          stops:
                            - - 0
                              - 50
                              - 100
                      tooltip:
                        enabled: true
                      xaxis:
                        axisBorder:
                          show: false
                        labels:
                          style:
                            fontSize: 14px
                    series:
                      - entity: sensor.temp_sejour
                        name: Séjour
                        show:
                          extremas: false
                        type: area
                        color: grey
                        fill_raw: last
                        float_precision: 1
                        group_by:
                          duration: 10min
                          func: avg
                      - entity: sensor.temp_couloir_rdc
                        name: Couloir
                        show:
                          extremas: false
                        type: area
                        color: violet
                        fill_raw: last
                        float_precision: 1
                        group_by:
                          duration: 10min
                          func: avg
                      - entity: sensor.temp_cuisine
                        name: Cuisine
                        show:
                          extremas: false
                        type: area
                        color: red
                        fill_raw: last
                        float_precision: 1
                        group_by:
                          duration: 10min
                          func: avg
                      - entity: sensor.temp_moyenne_rdc
                        name: Moyenne
                        color: dodgerblue
                        fill_raw: last
                        type: area
                        stroke_width: 1
                        group_by:
                          duration: 10min
                          func: avg
                        show:
                          in_brush: true
                          in_chart: false
                    card_mod:
                      style: |
                        ha-card {
                        background-color: black;
                        }
                    type: custom:apexcharts-card
                  - header:
                      title: 🛋 RDC humidité
                      show: true
                      show_states: true
                      colorize_states: true
                    experimental:
                      brush: true
                    graph_span: 72h
                    brush:
                      selection_span: 12h
                    apex_config:
                      grid:
                        show: false
                      legend:
                        fontSize: 12px
                        height: 40
                      dataLabels:
                        enabled: false
                      stroke:
                        width: 3
                        curve: smooth
                      fill:
                        type: gradient
                        gradient:
                          type: vertical
                          shadeIntensity: 0.8
                          inverseColors: false
                          opacityFrom: 0.5
                          opacityTo: 0
                          stops:
                            - - 0
                              - 50
                              - 100
                      tooltip:
                        enabled: true
                      xaxis:
                        axisBorder:
                          show: false
                        labels:
                          style:
                            fontSize: 14px
                    series:
                      - entity: sensor.hum_sejour
                        name: Séjour
                        show:
                          extremas: false
                        type: area
                        color: grey
                        fill_raw: last
                        float_precision: 1
                        group_by:
                          duration: 10min
                          func: avg
                      - entity: sensor.hum_couloir_rdc
                        name: Couloir
                        show:
                          extremas: false
                        type: area
                        color: violet
                        fill_raw: last
                        float_precision: 1
                        group_by:
                          duration: 10min
                          func: avg
                      - entity: sensor.hum_cuisine
                        name: Cuisine
                        show:
                          extremas: false
                        type: area
                        color: red
                        fill_raw: last
                        float_precision: 1
                        group_by:
                          duration: 10min
                          func: avg
                    card_mod:
                      style: |
                        ha-card {
                        background-color: black;
                        }
                    type: custom:apexcharts-card
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: vertical-stack
                cards:
                  - header:
                      title: 🛏Chambres température
                      show: true
                      show_states: true
                      colorize_states: true
                    experimental:
                      brush: true
                    graph_span: 72h
                    brush:
                      selection_span: 12h
                    apex_config:
                      grid:
                        show: false
                      legend:
                        fontSize: 12px
                        height: 40
                      dataLabels:
                        enabled: false
                      stroke:
                        width: 3
                        curve: smooth
                      fill:
                        type: gradient
                        gradient:
                          type: vertical
                          shadeIntensity: 0.8
                          inverseColors: false
                          opacityFrom: 0.5
                          opacityTo: 0
                          stops:
                            - - 0
                              - 50
                              - 100
                      tooltip:
                        enabled: true
                      xaxis:
                        axisBorder:
                          show: false
                        labels:
                          style:
                            fontSize: 14px
                    series:
                      - entity: sensor.temp_parents
                        name: Parents
                        show:
                          extremas: false
                        type: area
                        color: grey
                        fill_raw: last
                        float_precision: 1
                        group_by:
                          duration: 10min
                          func: avg
                      - entity: sensor.temp_tom
                        name: Tom
                        show:
                          extremas: false
                        type: area
                        color: dodgerblue
                        fill_raw: last
                        float_precision: 1
                        group_by:
                          duration: 10min
                          func: avg
                      - entity: sensor.temp_manon
                        name: Manon
                        show:
                          extremas: false
                        type: area
                        color: red
                        fill_raw: last
                        float_precision: 1
                        group_by:
                          duration: 10min
                          func: avg
                      - entity: sensor.temp_nina
                        name: Nina
                        show:
                          extremas: false
                        type: area
                        color: salmon
                        fill_raw: last
                        float_precision: 1
                        group_by:
                          duration: 10min
                          func: avg
                      - entity: sensor.temp_parents
                        name: Parents
                        color: grey
                        fill_raw: last
                        type: area
                        stroke_width: 1
                        group_by:
                          duration: 10min
                          func: avg
                        show:
                          in_brush: true
                          in_chart: false
                    card_mod:
                      style: |
                        ha-card {
                        background-color: black;
                        }
                    type: custom:apexcharts-card
                  - header:
                      title: 🛏Chambres humidité
                      show: true
                      show_states: true
                      colorize_states: true
                    experimental:
                      brush: true
                    graph_span: 72h
                    brush:
                      selection_span: 12h
                    apex_config:
                      grid:
                        show: false
                      legend:
                        fontSize: 12px
                        height: 40
                      dataLabels:
                        enabled: false
                      stroke:
                        width: 3
                        curve: smooth
                      fill:
                        type: gradient
                        gradient:
                          type: vertical
                          shadeIntensity: 0.8
                          inverseColors: false
                          opacityFrom: 0.5
                          opacityTo: 0
                          stops:
                            - - 0
                              - 50
                              - 100
                      tooltip:
                        enabled: true
                      xaxis:
                        axisBorder:
                          show: false
                        labels:
                          style:
                            fontSize: 14px
                    series:
                      - entity: sensor.hum_parents
                        name: Parents
                        show:
                          extremas: false
                        type: area
                        color: grey
                        fill_raw: last
                        float_precision: 1
                        group_by:
                          duration: 10min
                          func: avg
                      - entity: sensor.hum_tom
                        name: Tom
                        show:
                          extremas: false
                        type: area
                        color: dodgerblue
                        fill_raw: last
                        float_precision: 1
                        group_by:
                          duration: 10min
                          func: avg
                      - entity: sensor.hum_manon
                        name: Manon
                        show:
                          extremas: false
                        type: area
                        color: red
                        fill_raw: last
                        float_precision: 1
                        group_by:
                          duration: 10min
                          func: avg
                      - entity: sensor.hum_nina
                        name: Nina
                        show:
                          extremas: false
                        type: area
                        color: salmon
                        fill_raw: last
                        float_precision: 1
                        group_by:
                          duration: 10min
                          func: avg
                      - entity: sensor.temp_parents
                        name: Parents
                        color: grey
                        fill_raw: last
                        type: area
                        stroke_width: 1
                        group_by:
                          duration: 10min
                          func: avg
                        show:
                          in_brush: true
                          in_chart: false
                    card_mod:
                      style: |
                        ha-card {
                        background-color: black;
                        }
                    type: custom:apexcharts-card
  - theme: Backend-selected
    title: Alarmes
    path: Alarmes
    icon: mdi:shield-lock-open-outline
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: true
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 350
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - titre_section
                label: |
                  [[[ return "Alarme" ]]]
              - type: horizontal-stack
                cards:
                  - camera_view: live
                    type: picture-glance
                    title: Salon
                    entities:
                      - entity: alarm_control_panel.camera_g3
                      - entity: binary_sensor.mouv_camera_g3
                      - entity: device_tracker.camera_hub_g3_2725
                    camera_image: camera.camera_hub_g3_2725
                    aspect_ratio: 1/1
                  - camera_view: live
                    type: picture-glance
                    title: Garage
                    entities:
                      - entity: alarm_control_panel.camera_g2hpro
                      - entity: binary_sensor.mouv_camera_g2hpro
                    camera_image: camera.camera_g2hpro
                    aspect_ratio: 1/1
              - type: alarm-panel
                states:
                  - arm_away
                  - arm_home
                  - arm_night
                entity: alarm_control_panel.alarme
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - titre_section
                label: |
                  [[[ return "Sirènes" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: siren.frient
                    name: Garage
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
                  - type: custom:button-card
                    entity: siren.sirene_heiman
                    name: Salon
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
              - type: custom:button-card
                template:
                  - titre_section
                label: |
                  [[[ return "Portes et fenêtres" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.porte_entree
                    name: Entrée
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_porte
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.porte_salle_a_manger
                    name: SaM
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_porte
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.porte_cuisine
                    name: Cuisine
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_porte
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.porte_chambre_parents
                    name: Parents
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_porte
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.porte_cagibi
                    name: Cagibi
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_porte
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.porte_garage
                    name: Garage
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_porte
                      - state_unavailable
              - type: custom:button-card
                template:
                  - titre_section
                label: |
                  [[[ return "Mouvements" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.mouv_camera_g3
                    name: Caméra G3
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_camera_g2hpro
                    name: Caméra G2H
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_salon
                    name: Salon
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_salle_a_manger
                    name: SaM
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_couloir
                    name: Couloir
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_salle_d_eau
                    name: Lavabo
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
                    tap_action:
                      action: more-info
                  - type: custom:button-card
                    entity: binary_sensor.mouv_garage
                    name: Garage
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_escalier
                    name: Escaliers
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.mouv_tom
                    name: Tom
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_manon
                    name: Manon
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_leane
                    name: Léane
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_nina
                    name: Nina
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_palier
                    name: Palier
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: custom:button-card
            template:
              - titre_section
            label: |
              [[[ return "Sonnette" ]]]
          - type: alarm-panel
            states:
              - arm_home
              - arm_away
            entity: alarm_control_panel.aarlo_sonnette
          - entity: camera.aarlo_sonnette
            hide:
              - title
              - date
            image_click: play
            show:
              - motion
              - sound
              - image_date
              - signal_strength
              - captured_today
              - image_date
              - on_off
              - snapshot
              - battery_level
            top_date: true
            top_status: false
            top_title: false
            type: custom:aarlo-glance
          - square: false
            columns: 2
            type: grid
            cards:
              - type: custom:button-card
                entity: sensor.aarlo_battery_level_sonnette
                name: Batterie
                show_last_changed: false
                template:
                  - base
                  - base_petite
                  - state_unavailable
                  - state_batterie
                  - state_unavailable
              - type: custom:button-card
                entity: binary_sensor.aarlo_motion_sonnette
                name: Mouvement
                show_last_changed: true
                template:
                  - base
                  - base_petite
                  - state_mouv
                  - state_unavailable
              - type: custom:button-card
                entity: sensor.aarlo_last_sonnette
                name: Dernier
                show_last_changed: true
                template:
                  - base
                  - base_petite
                  - state_appareil
                  - state_unavailable
              - type: custom:button-card
                entity: binary_sensor.aarlo_ding_sonnette
                name: Ding !
                show_last_changed: true
                template:
                  - base
                  - base_petite
                  - state_appareil
                  - state_unavailable
              - type: custom:button-card
                entity: switch.aarlo_snapshot_sonnette
                name: Capture
                show_last_changed: true
                template:
                  - base
                  - base_petite
                  - state_appareil
                  - state_unavailable
              - type: custom:button-card
                entity: sensor.aarlo_captured_today_sonnette
                name: Nbre ce jour
                show_last_changed: false
                show_state: true
                template:
                  - base
                  - base_petite
                  - state_appareil
                  - state_unavailable
              - type: custom:button-card
                entity: binary_sensor.aarlo_connected_sonnette
                name: Statut
                show_last_changed: false
                show_state: true
                template:
                  - base
                  - base_petite
                  - state_appareil
                  - state_unavailable
              - type: custom:button-card
                entity: sensor.aarlo_signal_strength_sonnette
                name: Signal
                show_last_changed: false
                show_state: true
                template:
                  - base
                  - base_petite
                  - state_appareil
                  - state_unavailable
              - type: custom:button-card
                entity: camera.aarlo_sonnette
                name: Caméra
                show_last_changed: false
                show_state: true
                template:
                  - base
                  - base_petite
                  - state_appareil
                  - state_unavailable
              - type: custom:button-card
                entity: switch.aarlo_siren_sonnette
                name: Sirène
                show_last_changed: false
                show_state: true
                template:
                  - base
                  - base_petite
                  - state_appareil
                  - state_unavailable
  - theme: Backend-selected
    subview: true
    icon: mdi:sofa
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    title: Sejour
    path: Séjour
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: sensor.temp_sejour
                name: Séjour
                icon: phu:rooms-living
                template:
                  - carte_jauge
                styles:
                  custom_fields:
                    pile:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.sejour_thermo_batterie'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.sejour_thermo_batterie'].state < 20)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_sejour'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.temp_sejour'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.temp_sejour'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.hum_sejour'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.hum_sejour'].state < 40)
                             return 'dodgerblue'
                            if (states['sensor.hum_sejour'].state > 80)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info3:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_lum_dracaena'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.plante_lum_dracaena'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    info4:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.plante_lum_pied_elephant'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.plante_lum_pied_elephant'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  pile: |
                    [[[
                      return `<ha-icon
                        icon="mdi:battery"
                        style="width: 15px; height: 15px; color: lightgrey;">
                        </ha-icon><span> <span style="color: var(--text-color-sensor);">${states['sensor.sejour_thermo_batterie'].state} %</span></span>`
                    ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.temp_sejour'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.temp_sejour
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.hum_sejour'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.hum_sejour
                          color: dodgerblue
                  info3: |
                    [[[
                      return `<ha-icon
                        icon="mdi:brightness-5"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Dracaena : <span style="color: var(--text-color-sensor);">${states['sensor.plante_lum_dracaena'].state} lx</span></span>`
                    ]]]
                  jauge_info3:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.plante_lum_dracaena
                          color: gold
                  info4: |
                    [[[
                      return `<ha-icon
                        icon="mdi:brightness-5"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Pied d'éléphant : <span style="color: var(--text-color-sensor);">${states['sensor.plante_lum_pied_elephant'].state} lx</span></span>`
                    ]]]
                  jauge_info4:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.plante_lum_pied_elephant
                          color: gold
                          max: 1000
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(255,99,71,0.3)
                          entity: sensor.temp_sejour
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.porte_salle_a_manger
                    name: Porte SàM
                    show_last_changed: true
                    show_name: true
                    template:
                      - base
                      - base_petite
                      - state_porte
                  - type: custom:button-card
                    entity: binary_sensor.mouv_salle_a_manger
                    name: Mouv SàM
                    show_last_changed: true
                    show_name: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                  - type: custom:button-card
                    entity: binary_sensor.mouv_salon
                    name: Mouv Salon
                    show_last_changed: true
                    show_name: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                  - type: custom:button-card
                    entity: binary_sensor.mouv_camera_g3
                    name: Caméra G3
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Lumères, TV et prises" ]]]
              - square: false
                columns: 7
                type: grid
                cards:
                  - type: custom:button-card
                    entity: input_boolean.ambiance_normale
                    name: Normale
                    show_state: false
                    template:
                      - carte_badge
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--icon_on)
                          img_cell:
                            - background: rgba(255,255,0,0.7)
                          card:
                            - background-color: rgba(255,255,0,0.7)
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      service_data:
                        entity_id: scene.ambiance_normale
                  - type: custom:button-card
                    entity: input_boolean.ambiance_doux
                    name: Doux
                    show_state: false
                    template:
                      - carte_badge
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--icon_on)
                          img_cell:
                            - background: rgba(186,85,211,0.5)
                          card:
                            - background-color: rgba(186,85,211,0.5)
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      service_data:
                        entity_id: scene.zen
                  - type: custom:button-card
                    entity: input_boolean.ambiance_repas_tv
                    name: Repas
                    show_state: false
                    template:
                      - carte_badge
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--icon_on)
                          img_cell:
                            - background: rgba(255,0,0,0.7)
                          card:
                            - background-color: rgba(255,0,0,0.7)
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      service_data:
                        entity_id: scene.repas_devant_tv
                  - type: custom:button-card
                    entity: input_boolean.ambiance_tv
                    name: TV
                    icon: mdi:television-play
                    show_state: false
                    template:
                      - carte_badge
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--icon_on)
                          img_cell:
                            - background: rgba(255,0,0,0.7)
                          card:
                            - background-color: rgba(255,0,0,0.7)
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      service_data:
                        entity_id: scene.tv
                  - type: custom:button-card
                    entity: input_boolean.ambiance_apero
                    name: Apero
                    show_state: false
                    template:
                      - carte_badge
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--icon_on)
                          img_cell:
                            - background: rgba(255,120,120,0.5)
                          card:
                            - background-color: rgba(255,120,120,0.5)
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.apero_lum
                  - type: custom:button-card
                    entity: input_boolean.ambiance_anniversaire
                    name: Anniv
                    show_state: false
                    template:
                      - carte_badge
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--icon_on)
                          img_cell:
                            - background: rgba(238,130,238,0.7)
                          card:
                            - background-color: rgba(238,130,238,0.7)
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      service_data:
                        entity_id: scene.anniversaire
                  - type: custom:button-card
                    entity: input_boolean.ambiance_repas_invites
                    name: Invités
                    show_state: false
                    template:
                      - carte_badge
                    state:
                      - value: 'on'
                        styles:
                          icon:
                            - color: var(--icon_on)
                          img_cell:
                            - background: rgba(238,130,238,0.7)
                          card:
                            - background-color: rgba(238,130,238,0.7)
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.ambiance_repas_invites
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: media_player.tv_salon
                    name: TV
                    icon: mdi:youtube-tv
                    template:
                      - base
                      - base_moyenne
                      - state_tv
                      - state_unavailable
                    label: |
                      [[[
                        if (states['media_player.tv_salon'].state == "on")
                          return (states['sensor.tv_salon_source'].state );
                        return "";
                      ]]]
                    styles:
                      label:
                        - color: |
                            [[[
                                if (states['sensor.tv_salon_source'].state == "Netflix")
                                  return "red";
                                return "var(--text_on)";
                              ]]]
                    double_tap_action:
                      action: call-service
                      service: script.tv_salon_on_off
                  - type: custom:button-card
                    entity: light.lampe_de_bureau
                    name: Bureau
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lampe_de_bureau
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lampe_de_bureau
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.lampe_tv_salon
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    name: Lampe TV
                    icon: null
                  - type: custom:button-card
                    entity: light.bandeau_led
                    name: Bandeau TV
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.bandeau_led
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.bandeau_led
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.lampe_canape
                    name: null
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lampe_canape
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lampe_canape
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.lustre_salon
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    name: Lustre salon
                    icon: null
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lustre_salon
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lustre_salon
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.lustre_salle_a_manger
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    name: Lustre SàM
                    icon: null
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lustre_salle_a_manger
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lustre_salle_a_manger
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.buffet
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    name: null
                    icon: null
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.buffet
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.buffet
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.lampadaire
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    name: null
                    icon: null
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lampadaire
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lampadaire
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - square: false
            columns: 1
            type: grid
            cards:
              - type: custom:button-card
                entity: media_player.sejour
                name: Séjour
                icon: mdi:speaker
                template:
                  - base
                  - carte_multimedia
                  - effet
                custom_fields:
                  cartes:
                    card:
                      type: conditional
                      conditions:
                        - entity: media_player.sejour
                          state: playing
                      card:
                        info: scroll
                        artwork: full-cover-fit
                        hide:
                          volume: true
                          source: true
                          power: true
                          name: false
                          icon: true
                          controls: true
                        type: custom:mini-media-player
                        entity: media_player.sejour
              - header:
                  title: 🛋 Séjour ️
                  show: true
                  show_states: true
                  colorize_states: true
                experimental:
                  brush: true
                graph_span: 72h
                brush:
                  selection_span: 12h
                apex_config:
                  grid:
                    show: false
                  legend:
                    fontSize: 15px
                    height: 40
                  dataLabels:
                    enabled: false
                  stroke:
                    width: 3
                    curve: smooth
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.5
                      opacityTo: 0
                      stops:
                        - - 0
                          - 50
                          - 100
                  tooltip:
                    enabled: true
                  yaxis:
                    - show: true
                      decimalsInFloat: 0
                      labels:
                        style:
                          colors: '#FFB62E'
                          fontSize: 14px
                      forceNiceScale: true
                    - show: true
                      decimalsInFloat: 0
                      opposite: true
                      labels:
                        style:
                          colors: '#2eb9ff'
                          fontSize: 14px
                      forceNiceScale: true
                  xaxis:
                    axisBorder:
                      show: false
                    labels:
                      style:
                        fontSize: 14px
                series:
                  - entity: sensor.temp_sejour
                    name: température
                    show:
                      extremas: false
                    type: area
                    color: tomato
                    fill_raw: last
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: avg
                  - entity: sensor.hum_sejour
                    name: humidité
                    show:
                      extremas: false
                    type: area
                    color: dodgerblue
                    fill_raw: last
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: avg
                type: custom:apexcharts-card
        layout:
          width: 280
  - theme: Backend-selected
    subview: true
    icon: mdi:account
    title: Personnes
    path: Personnes
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - square: false
            columns: 2
            type: grid
            cards:
              - type: custom:button-card
                entity: person.herve
                template:
                  - carte_personne
                label: |
                  [[[return states["sensor.aurel_gps"].state ]]]
                styles:
                  label:
                    - white-space: normal
                custom_fields:
                  bouton:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: sensor.iphone_aurel_battery_level
                          icon: |
                            [[[
                              if (states['sensor.iphone_aurel_battery_level'].state >= 70 && states['sensor.iphone_aurel_battery_state'].state == 'Charging')
                                return "mdi:battery-charging"      
                              if (states['sensor.iphone_aurel_battery_level'].state >= 70 && states['sensor.iphone_aurel_battery_state'].state == 'Not Charging')
                                return "mdi:battery"   
                              if (states['sensor.iphone_aurel_battery_level'].state >= 50 && states['sensor.iphone_aurel_battery_state'].state == 'Charging')
                                return "mdi:battery-charging-50"  
                              if (states['sensor.iphone_aurel_battery_level'].state >= 50 && states['sensor.iphone_aurel_battery_state'].state == 'Not Charging')
                                return "mdi:battery-50"  
                              if (states['sensor.iphone_aurel_battery_level'].state >= 30 && states['sensor.iphone_aurel_battery_state'].state == 'Charging')
                                return "mdi:battery-charging-30"  
                              if (states['sensor.iphone_aurel_battery_level'].state >= 30 && states['sensor.iphone_aurel_battery_state'].state == 'Not Charging')
                                return "mdi:battery-30"  
                              if (states['sensor.iphone_aurel_battery_level'].state < 30 && states['sensor.iphone_aurel_battery_state'].state == 'Charging')
                                return "mdi:battery-charging-10"  
                              if (states['sensor.iphone_aurel_battery_level'].state < 30 && states['sensor.iphone_aurel_battery_state'].state == 'Not Charging')
                                return "mdi:battery-10"  
                            ]]]
                          template:
                            - carte_personne_bouton
                          styles:
                            icon:
                              - color: |
                                  [[[
                                    if (states['sensor.iphone_aurel_battery_level'].state >= 70 )
                                      return "rgba(211,211,211,0.8)"       
                                    if (states['sensor.iphone_aurel_battery_level'].state >= 50 )
                                      return "gold"  
                                    if (states['sensor.iphone_aurel_battery_level'].state >= 30 )
                                      return "orange"  
                                    if (states['sensor.iphone_aurel_battery_level'].state < 30 )
                                      return "red"  
                                  ]]]
                        - type: custom:button-card
                          entity: sensor.macbook_aurel_internal_battery_level
                          icon: mdi:desktop-mac
                          template:
                            - carte_personne_bouton
                          styles:
                            icon:
                              - color: |
                                  [[[
                                    if (states['sensor.macbook_aurel_internal_battery_state'].state == "Charging")
                                      return 'gold'
                                    if (states['sensor.macbook_aurel_internal_battery_state'].state == "Full")
                                      return 'red'
                                    return "rgba(211,211,211,0.8)"
                                  ]]]
                        - type: custom:button-card
                          entity: sensor.ipad_aurel_battery_level
                          icon: mdi:tablet
                          template:
                            - carte_personne_bouton
                          styles:
                            icon:
                              - color: |
                                  [[[
                                    if (states['sensor.ipad_aurel_battery_state'].state == "Charging")
                                      return 'gold'
                                    if (states['sensor.ipad_aurel_battery_state'].state == "Full")
                                      return 'red'
                                    return "rgba(211,211,211,0.8)"
                                  ]]]
                      columns: 3
                      square: false
              - type: custom:button-card
                entity: person.alex
                label: |
                  [[[return states["sensor.alex_gps"].state ]]]
                styles:
                  label:
                    - white-space: normal
                template:
                  - carte_personne
                custom_fields:
                  bouton:
                    card:
                      type: grid
                      cards:
                        - type: custom:button-card
                          entity: sensor.alex_iphone_battery_level_ha
                          icon: |
                            [[[
                              if (states['sensor.alex_iphone_battery_level_ha'].state >= 70 && states['sensor.alex_iphone_battery_state_ha'].state == 'Charging')
                                return "mdi:battery-charging"      
                              if (states['sensor.alex_iphone_battery_level_ha'].state >= 70 && states['sensor.alex_iphone_battery_state_ha'].state == 'Not Charging')
                                return "mdi:battery"   
                              if (states['sensor.alex_iphone_battery_level_ha'].state >= 50 && states['sensor.alex_iphone_battery_state_ha'].state == 'Charging')
                                return "mdi:battery-charging-50"  
                              if (states['sensor.alex_iphone_battery_level_ha'].state >= 50 && states['sensor.alex_iphone_battery_state_ha'].state == 'Not Charging')
                                return "mdi:battery-50"  
                              if (states['sensor.alex_iphone_battery_level_ha'].state >= 30 && states['sensor.alex_iphone_battery_state_ha'].state == 'Charging')
                                return "mdi:battery-charging-30"  
                              if (states['sensor.alex_iphone_battery_level_ha'].state >= 30 && states['sensor.alex_iphone_battery_state_ha'].state == 'Not Charging')
                                return "mdi:battery-30"  
                              if (states['sensor.alex_iphone_battery_level_ha'].state < 30 && states['sensor.alex_iphone_battery_state_ha'].state == 'Charging')
                                return "mdi:battery-charging-10"  
                              if (states['sensor.alex_iphone_battery_level_ha'].state < 30 && states['sensor.alex_iphone_battery_state_ha'].state == 'Not Charging')
                                return "mdi:battery-10"  
                            ]]]
                          template:
                            - carte_personne_bouton
                          styles:
                            icon:
                              - color: |
                                  [[[
                                    if (states['sensor.alex_iphone_battery_level_ha'].state >= 70 )
                                      return "rgba(211,211,211,0.8)"       
                                    if (states['sensor.alex_iphone_battery_level_ha'].state >= 50 )
                                      return "gold"  
                                    if (states['sensor.alex_iphone_battery_level_ha'].state >= 30 )
                                      return "orange"  
                                    if (states['sensor.alex_iphone_battery_level_ha'].state < 30 )
                                      return "red"  
                                  ]]]
                        - type: custom:button-card
                          entity: sensor.macbook_alex_internal_battery_level
                          icon: mdi:desktop-mac
                          template:
                            - carte_personne_bouton
                          styles:
                            icon:
                              - color: |
                                  [[[
                                    if (states['sensor.macbook_alex_internal_battery_level'].state == "Charging")
                                      return 'gold'
                                    if (states['sensor.macbook_alex_internal_battery_level'].state == "Full")
                                      return 'red'
                                    return "rgba(211,211,211,0.8)"
                                  ]]]
                      columns: 3
                      square: false
              - type: custom:button-card
                entity: person.tom
                show_state: true
                template:
                  - carte_personne
              - type: custom:button-card
                entity: person.manon
                label: |
                  [[[
                    if (states['device_tracker.tablette_manon'].state == 'home')
                      return 'Présent'
                    return 'Absent'
                  ]]]
                template:
                  - carte_personne
              - type: custom:button-card
                entity: person.leane
                label: |
                  [[[
                    if (states['device_tracker.leane_tab_ping'].state == 'home')
                      return 'Présent'
                    return 'Absent'
                  ]]]
                template:
                  - carte_personne
              - type: custom:button-card
                entity: person.nina
                show_state: true
                template:
                  - carte_personne
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: map
            entities:
              - entity: person.alex
              - entity: person.herve
  - theme: Backend-selected
    subview: true
    icon: mdi:door-open
    path: Portes
    title: Portes
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badges: []
    cards:
      - square: false
        columns: 2
        type: grid
        cards:
          - type: custom:button-card
            entity: binary_sensor.porte_entree
            name: Entrée
            show_last_changed: true
            show_state: true
            template:
              - base
              - base_moyenne
              - state_porte
              - state_unavailable
          - type: custom:button-card
            entity: binary_sensor.porte_salle_a_manger
            name: SaM
            show_last_changed: true
            show_state: true
            template:
              - base
              - base_moyenne
              - state_porte
              - state_unavailable
          - type: custom:button-card
            entity: binary_sensor.porte_cuisine
            name: null
            show_last_changed: true
            show_state: true
            template:
              - base
              - base_moyenne
              - state_porte
              - state_unavailable
          - type: custom:button-card
            entity: binary_sensor.porte_chambre_parents
            name: null
            show_last_changed: true
            show_state: true
            template:
              - base
              - base_moyenne
              - state_porte
              - state_unavailable
          - type: custom:button-card
            entity: binary_sensor.porte_cagibi
            name: null
            show_last_changed: true
            show_state: true
            template:
              - base
              - base_moyenne
              - state_porte
              - state_unavailable
          - type: custom:button-card
            entity: binary_sensor.porte_garage
            name: null
            show_last_changed: true
            show_state: true
            template:
              - base
              - base_moyenne
              - state_porte
              - state_unavailable
  - theme: Backend-selected
    subview: true
    path: Mouvements
    icon: mdi:run-fast
    title: Mouvements
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Rez-de-chaussée" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.mouv_salon
                    name: Salon
                    show_last_changed: true
                    show_state: true
                    template:
                      - base
                      - base_moyenne
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_salle_a_manger
                    name: Salle à manger
                    show_last_changed: true
                    show_state: true
                    template:
                      - base
                      - base_moyenne
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_couloir
                    name: Couloir
                    show_last_changed: true
                    show_state: true
                    template:
                      - base
                      - base_moyenne
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_salle_d_eau
                    name: Salle d'eau
                    show_last_changed: true
                    show_state: true
                    template:
                      - base
                      - base_moyenne
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_garage
                    name: Garage
                    show_last_changed: true
                    show_state: true
                    template:
                      - base
                      - base_moyenne
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_escalier
                    name: Escalier
                    show_last_changed: true
                    show_state: true
                    template:
                      - base
                      - base_moyenne
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_camera_g3
                    name: Caméra Salon
                    show_last_changed: true
                    show_state: true
                    template:
                      - base
                      - base_moyenne
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_camera_g2hpro
                    name: Caméra Garage
                    show_last_changed: true
                    show_state: true
                    template:
                      - base
                      - base_moyenne
                      - state_mouv
                      - state_unavailable
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Etage"]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.mouv_tom
                    name: Tom
                    show_last_changed: true
                    show_state: true
                    template:
                      - base
                      - base_moyenne
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_manon
                    name: Manon
                    show_last_changed: true
                    show_state: true
                    template:
                      - base
                      - base_moyenne
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_leane
                    name: Léane
                    show_last_changed: true
                    show_state: true
                    template:
                      - base
                      - base_moyenne
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_nina
                    name: Nina
                    show_last_changed: true
                    show_state: true
                    template:
                      - base
                      - base_moyenne
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_palier
                    name: Palier
                    show_last_changed: true
                    show_state: true
                    template:
                      - base
                      - base_moyenne
                      - state_mouv
                      - state_unavailable
  - theme: Backend-selected
    icon: mdi:speaker-multiple
    title: Musique
    subview: true
    path: Musique
    badges: []
    cards:
      - square: false
        columns: 2
        type: grid
        cards:
          - type: custom:button-card
            entity: media_player.partout
            name: Partout
            icon: mdi:speaker
            template:
              - base
              - carte_multimedia
              - state_musique
              - effet
            custom_fields:
              cartes:
                card:
                  type: conditional
                  conditions:
                    - entity: media_player.partout
                      state: playing
                  card:
                    info: scroll
                    artwork: full-cover-fit
                    hide:
                      volume: true
                      source: true
                      power: true
                      name: false
                      icon: true
                      controls: true
                    type: custom:mini-media-player
                    entity: media_player.partout
          - type: custom:button-card
            entity: media_player.en_bas
            name: En bas
            icon: mdi:speaker
            template:
              - base
              - carte_multimedia
              - state_musique
              - effet
            custom_fields:
              cartes:
                card:
                  type: conditional
                  conditions:
                    - entity: media_player.en_bas
                      state: playing
                  card:
                    info: scroll
                    artwork: full-cover-fit
                    hide:
                      volume: true
                      source: true
                      power: true
                      name: false
                      icon: true
                      controls: true
                    type: custom:mini-media-player
                    entity: media_player.en_bas
          - type: custom:button-card
            entity: media_player.sejour
            name: Séjour
            icon: mdi:speaker
            template:
              - base
              - carte_multimedia
              - state_musique
              - effet
            custom_fields:
              cartes:
                card:
                  type: conditional
                  conditions:
                    - entity: media_player.sejour
                      state: playing
                  card:
                    info: scroll
                    artwork: full-cover-fit
                    hide:
                      volume: true
                      source: true
                      power: true
                      name: false
                      icon: true
                      controls: true
                    type: custom:mini-media-player
                    entity: media_player.sejour
          - type: custom:button-card
            entity: media_player.la_cuisine
            name: Cuisine
            icon: mdi:speaker
            template:
              - base
              - carte_multimedia
              - state_musique
              - effet
            custom_fields:
              cartes:
                card:
                  type: conditional
                  conditions:
                    - entity: media_player.la_cuisine
                      state: playing
                  card:
                    info: scroll
                    artwork: full-cover-fit
                    hide:
                      volume: true
                      source: true
                      power: true
                      name: false
                      icon: true
                      controls: true
                    type: custom:mini-media-player
                    entity: media_player.la_cuisine
          - type: custom:button-card
            entity: media_player.chambre_des_parents
            name: Parents
            icon: mdi:speaker
            template:
              - base
              - carte_multimedia
              - state_musique
              - effet
            custom_fields:
              cartes:
                card:
                  type: conditional
                  conditions:
                    - entity: media_player.chambre_des_parents
                      state: playing
                  card:
                    info: scroll
                    artwork: full-cover-fit
                    hide:
                      volume: true
                      source: true
                      power: true
                      name: false
                      icon: true
                      controls: true
                    type: custom:mini-media-player
                    entity: media_player.chambre_parents
          - type: custom:button-card
            entity: media_player.etage
            name: Etage
            icon: mdi:speaker
            template:
              - base
              - carte_multimedia
              - state_musique
              - effet
            custom_fields:
              cartes:
                card:
                  type: conditional
                  conditions:
                    - entity: media_player.etage
                      state: playing
                    - entity: media_player.partout
                      state_not: playing
                  card:
                    info: scroll
                    artwork: full-cover-fit
                    hide:
                      volume: true
                      source: true
                      power: true
                      name: false
                      icon: true
                      controls: true
                    type: custom:mini-media-player
                    entity: media_player.etage
      - square: false
        columns: 2
        type: grid
        cards:
          - type: custom:button-card
            entity: media_player.la_salle_de_bain
            name: S. de bain
            icon: mdi:speaker
            template:
              - base
              - carte_multimedia
              - state_musique
              - effet
            custom_fields:
              cartes:
                card:
                  type: conditional
                  conditions:
                    - entity: media_player.la_salle_de_bain
                      state: playing
                    - entity: media_player.partout
                      state_not: playing
                    - entity: media_player.etage
                      state_not: playing
                  card:
                    info: scroll
                    artwork: full-cover-fit
                    hide:
                      volume: true
                      source: true
                      power: true
                      name: false
                      icon: true
                      controls: true
                    type: custom:mini-media-player
                    entity: media_player.la_salle_de_bain
          - type: custom:button-card
            entity: media_player.tom
            name: Tom
            icon: mdi:speaker
            template:
              - base
              - carte_multimedia
              - state_musique
              - effet
            custom_fields:
              cartes:
                card:
                  type: conditional
                  conditions:
                    - entity: media_player.tom
                      state: playing
                    - entity: media_player.partout
                      state_not: playing
                    - entity: media_player.etage
                      state_not: playing
                  card:
                    info: scroll
                    artwork: full-cover-fit
                    hide:
                      volume: true
                      source: true
                      power: true
                      name: false
                      icon: true
                      controls: true
                    type: custom:mini-media-player
                    entity: media_player.tom
          - type: custom:button-card
            entity: media_player.chambre_de_manon_et_leane
            name: Manon Léane
            icon: mdi:speaker
            template:
              - base
              - carte_multimedia
              - state_musique
              - effet
            custom_fields:
              cartes:
                card:
                  type: conditional
                  conditions:
                    - entity: media_player.chambre_de_manon_et_leane
                      state: playing
                    - entity: media_player.partout
                      state_not: playing
                  card:
                    info: scroll
                    artwork: full-cover-fit
                    hide:
                      volume: true
                      source: true
                      power: true
                      name: false
                      icon: true
                      controls: true
                    type: custom:mini-media-player
                    entity: media_player.chambre_de_manon_et_leane
          - type: custom:button-card
            entity: media_player.nina
            name: Nina
            icon: mdi:speaker
            template:
              - base
              - carte_multimedia
              - state_musique
              - effet
            custom_fields:
              cartes:
                card:
                  type: conditional
                  conditions:
                    - entity: media_player.nina
                      state: playing
                    - entity: media_player.partout
                      state_not: playing
                    - entity: media_player.etage
                      state_not: playing
                  card:
                    info: scroll
                    artwork: full-cover-fit
                    hide:
                      volume: true
                      source: true
                      power: true
                      name: false
                      icon: true
                      controls: true
                    type: custom:mini-media-player
                    entity: media_player.nina
          - type: custom:button-card
            entity: media_player.leane
            name: Léane
            icon: mdi:speaker
            template:
              - base
              - carte_multimedia
              - state_musique
              - effet
            custom_fields:
              cartes:
                card:
                  type: conditional
                  conditions:
                    - entity: media_player.leane
                      state: playing
                    - entity: media_player.partout
                      state_not: playing
                    - entity: media_player.etage
                      state_not: playing
                    - entity: media_player.chambre_de_manon_et_leane
                      state_not: playing
                  card:
                    info: scroll
                    artwork: full-cover-fit
                    hide:
                      volume: true
                      source: true
                      power: true
                      name: false
                      icon: true
                      controls: true
                    type: custom:mini-media-player
                    entity: media_player.leane
          - type: custom:button-card
            entity: media_player.manon
            name: Manon
            icon: mdi:speaker
            template:
              - base
              - carte_multimedia
              - state_musique
              - effet
            custom_fields:
              cartes:
                card:
                  type: conditional
                  conditions:
                    - entity: media_player.manon
                      state: playing
                    - entity: media_player.partout
                      state_not: playing
                    - entity: media_player.etage
                      state_not: playing
                    - entity: media_player.chambre_de_manon_et_leane
                      state_not: playing
                  card:
                    info: scroll
                    artwork: full-cover-fit
                    hide:
                      volume: true
                      source: true
                      power: true
                      name: false
                      icon: true
                      controls: true
                    type: custom:mini-media-player
                    entity: media_player.manon
  - theme: Backend-selected
    title: Autres
    path: Autres
    subview: true
    icon: mdi:home-search-outline
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: grid
        cards:
          - type: custom:button-card
            entity: switch.lave_vaisselle_power
            name: Vaisselle
            icon: mdi:dishwasher
            template:
              - base
              - base_large
              - carte_appareil
              - state_machine
              - state_unavailable
              - effet
            label: |
              [[[
                if (states['switch.lave_vaisselle_power'].state == "on")
                  return states['sensor.lave_vaisselle'].state
                if (states['switch.lave_vaisselle_power'].state == "off")
                  return "Éteint "
                return "" 
              ]]]
            tap_action:
              action: more-info
            double_tap_action:
              action: toggle
            custom_fields:
              bouton:
                card:
                  type: grid
                  cards:
                    - type: custom:button-card
                      entity: switch.lave_vaisselle_power
                      icon: mdi:power
                      template:
                        - carte_appareil_bouton
                      styles:
                        icon:
                          - color: |
                              [[[
                                if (states['switch.lave_vaisselle_power'].state == "on")
                                  return 'dodgerblue'
                                return "var(--icon_off)"
                              ]]]
                    - type: custom:button-card
                      entity: switch.lave_vaisselle_program_auto2
                      icon: mdi:flag-checkered
                      template:
                        - carte_appareil_bouton
                      styles:
                        icon:
                          - color: |
                              [[[
                                if (states['sensor.lave_vaisselle_operation_state'].state == "Run")
                                  return 'dodgerblue'
                                return "var(--icon_off)"
                              ]]]
                    - type: custom:button-card
                      entity: binary_sensor.lave_vaisselle_door
                      template:
                        - carte_appareil_bouton
                      styles:
                        icon:
                          - color: |
                              [[[
                                if (states['switch.lave_vaisselle_power'].state == "off" && states['binary_sensor.lave_vaisselle_door'].state == "off")
                                  return 'grey'
                                if (states['switch.lave_vaisselle_power'].state == "off" && states['binary_sensor.lave_vaisselle_door'].state == "on")
                                  return 'grey'
                                if (states['switch.lave_vaisselle_power'].state == "on" && states['binary_sensor.lave_vaisselle_door'].state == "off")
                                  return 'grey'
                                if (states['switch.lave_vaisselle_power'].state == "on" && states['binary_sensor.lave_vaisselle_door'].state == "on")
                                  return 'dodgerblue'
                                return "grey"
                              ]]]
                  columns: 3
                  square: false
              jauge:
                card:
                  type: conditional
                  conditions:
                    - entity: switch.lave_vaisselle_power
                      state: 'on'
                  card:
                    type: custom:bar-card
                    name: Batterie
                    severity:
                      - color: Red
                        from: 0
                        to: 30
                      - color: tomato
                        from: 31
                        to: 50
                      - color: var(--pastille_off)
                        from: 51
                        to: 100
                    entities:
                      - entity: sensor.lave_vaisselle_program_progress
                    entity_row: true
                    unit_of_measurement: '%'
                    positions:
                      value: inside
                      name: 'off'
                    height: 13px
                    width: 100%
                    icon: 'off'
                    color: var(--pastille_off)
                    style: |-
                      bar-card-value {
                        margin-right: 18%;
                        font-size: 12px;
                        font-weight: bold;
                        color: lightgrey;
                      }
          - type: custom:button-card
            entity: input_select.lave_linge
            name: Linge
            icon: mdi:tshirt-crew
            template:
              - base
              - base_large
              - carte_appareil
              - state_lave_linge
              - state_unavailable
              - effet
            label: |
              [[[
                if (states['input_select.lave_linge'].state == "off")
                  return "Éteint"
                if (states['input_select.lave_linge'].state == "veille")
                  return "Veille : "+ states['sensor.lave_linge_duree'].state
                if (states['input_select.lave_linge'].state == "on")
                  return "Cycle : "+ states['sensor.lave_linge_duree'].state
              ]]]
            tap_action:
              action: more-info
            double_tap_action:
              action: toggle
          - type: custom:button-card
            entity: switch.radiateur
            name: Chauffage SDB
            icon: phu:rooms-bathroom
            template:
              - base
              - base_large
              - carte_piece
              - piece_graph_fixe
              - state_lumiere
              - state_unavailable
              - effet
            label: >
              [[[ return (states['sensor.temp_salle_de_bain'].state )  + "° /
              "+(states['sensor.hum_salle_de_bain'].state ) + "%" ;

              ]]]
            custom_fields:
              graph_fixe:
                card:
                  type: custom:mini-graph-card
                  entities:
                    - color: var(--graph_line)
                      entity: sensor.temp_salle_de_bain
            tap_action:
              action: navigate
              navigation_path: /lovelace/SDB
          - type: custom:button-card
            entity: sensor.canon_mg4100_series
            name: Imprimante
            icon: mdi:printer
            label: |
              [[[
                if (states['sensor.canon_mg4100_series'].state == "unavailable")
                  return "Éteint"
                if (states['sensor.canon_mg4100_series'].state == "printing")
                  return "Impression"
                if (states['sensor.canon_mg4100_series'].state == "stopped")
                  return "Arrêt"
                if (states['sensor.canon_mg4100_series'].state == "idle")
                  return "Veille"
                return states['sensor.canon_mg4100_series'].state
              ]]]
            template:
              - base
              - base_large
              - carte_appareil
              - state_imprimante
              - effet
            custom_fields:
              barre_imprimante_noire:
                card:
                  type: conditional
                  conditions:
                    - entity: sensor.canon_mg4100_series
                      state_not: unavailable
                  card:
                    type: custom:bar-card
                    name: Batterie
                    entities:
                      - entity: sensor.canon_mg4100_series_black
                        color: black
                    entity_row: true
                    direction: up
                    unit_of_measurement: '%'
                    positions:
                      value: inside
                      name: 'off'
                      indicator: 'off'
                    height: 40px
                    width: 25%
                    icon: 'off'
                    style: |-
                      bar-card-value {
                        margin-right: -90%;
                        font-size: 13px;
                        font-weight: bold;
                        color: var(--text_on);
                      }
              barre_imprimante_couleur:
                card:
                  type: conditional
                  conditions:
                    - entity: sensor.canon_mg4100_series
                      state_not: unavailable
                  card:
                    type: custom:bar-card
                    name: Batterie
                    entities:
                      - entity: sensor.canon_mg4100_series_color
                        color: purple
                    entity_row: true
                    direction: up
                    unit_of_measurement: '%'
                    positions:
                      value: inside
                      name: 'off'
                      indicator: 'off'
                    height: 40px
                    width: 25%
                    icon: 'off'
                    style: |-
                      bar-card-value {
                        margin-right: -90%;
                        font-size: 13px;
                        font-weight: bold;
                        color: var(--text_on);
                      }
            tap_action:
              action: more-info
            double_tap_action:
              action: toggle
          - type: custom:button-card
            name: Moustiques parents
            show_last_changed: true
            show_state: true
            template:
              - base
              - base_moyenne
              - state_unavailable
              - state_appareil
              - state_unavailable
              - effet
            double_tap_action:
              action: toggle
            tap_action:
              action: more-info
            entity: switch.moustique_parents
          - type: custom:button-card
            name: Moustiques Tom
            show_last_changed: true
            show_state: true
            template:
              - base
              - base_moyenne
              - state_unavailable
              - state_appareil
              - state_unavailable
              - effet
            double_tap_action:
              action: toggle
            tap_action:
              action: more-info
            entity: switch.moustique_tom
          - type: custom:button-card
            name: Moustiques Filles
            show_last_changed: true
            show_state: true
            template:
              - base
              - base_moyenne
              - state_unavailable
              - state_appareil
              - state_unavailable
              - effet
            double_tap_action:
              action: toggle
            tap_action:
              action: more-info
            entity: switch.moustique_manon
          - type: custom:button-card
            name: Moustiques Nina
            show_last_changed: true
            show_state: true
            template:
              - base
              - base_moyenne
              - state_unavailable
              - state_appareil
              - state_unavailable
              - effet
            double_tap_action:
              action: toggle
            tap_action:
              action: more-info
            entity: switch.moustique_nina
        columns: 2
        square: false
  - theme: Backend-selected
    subview: true
    path: Annonces
    title: Annonces
    icon: mdi:speaker-message
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - square: false
            columns: 2
            type: grid
            cards:
              - type: custom:button-card
                entity: script.cest_lheure_daller_a_lecole
                name: Ecole
                show_last_changed: true
                show_state: false
                template:
                  - base
                  - base_moyenne
                  - state_unavailable
                  - state_appareil
                  - state_unavailable
                  - effet
                tap_action:
                  action: toggle
              - type: custom:button-card
                entity: script.a_table
                name: A table
                show_last_changed: true
                show_state: false
                template:
                  - base
                  - base_moyenne
                  - state_unavailable
                  - state_appareil
                  - state_unavailable
                  - effet
                tap_action:
                  action: toggle
              - type: custom:button-card
                entity: script.gouter
                name: Goûter
                show_last_changed: true
                show_state: false
                template:
                  - base
                  - base_moyenne
                  - state_unavailable
                  - state_appareil
                  - state_unavailable
                  - effet
                tap_action:
                  action: toggle
              - type: custom:button-card
                entity: script.1590760144160
                name: Fin écran
                show_last_changed: true
                show_state: false
                template:
                  - base
                  - base_moyenne
                  - state_unavailable
                  - state_appareil
                  - state_unavailable
                  - effet
                tap_action:
                  action: toggle
              - type: custom:button-card
                entity: script.annonce_au_lit
                name: Coucher filles
                show_last_changed: true
                show_state: false
                template:
                  - base
                  - base_moyenne
                  - state_unavailable
                  - state_appareil
                  - state_unavailable
                  - effet
                tap_action:
                  action: toggle
              - type: custom:button-card
                entity: script.tom_va_se_coucher
                name: Coucher Tom
                show_last_changed: true
                show_state: false
                template:
                  - base
                  - base_moyenne
                  - state_unavailable
                  - state_appareil
                  - state_unavailable
                  - effet
                tap_action:
                  action: toggle
              - type: custom:button-card
                entity: script.reveille_tom_annonce_alexa
                name: Réveiller Tom
                show_last_changed: true
                show_state: false
                template:
                  - base
                  - base_moyenne
                  - state_unavailable
                  - state_appareil
                  - state_unavailable
                  - effet
                tap_action:
                  action: toggle
  - theme: Backend-selected
    title: Tom
    path: Tom
    subview: true
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:whistle
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: sensor.temp_tom
                name: Chambre Tom
                icon: mdi:bat
                template:
                  - carte_jauge
                styles:
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_tom'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.temp_tom'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.temp_tom'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.hum_tom'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.hum_tom'].state < 40)
                             return 'dodgerblue'
                            if (states['sensor.hum_tom'].state > 80)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info3:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.mouv_tom_luminosite'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.mouv_tom_luminosite'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    pile:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.tom_thermo_batterie'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.tom_thermo_batterie'].state < 10)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  pile: |
                    [[[
                      return `<ha-icon
                        icon="mdi:battery"
                        style="width: 15px; height: 15px; color: lightgrey;">
                        </ha-icon><span> <span style="color: var(--text-color-sensor);">${states['sensor.tom_thermo_batterie'].state} %</span></span>`
                    ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.temp_tom'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.temp_tom
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.hum_tom'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.hum_tom
                          color: dodgerblue
                  info3: |
                    [[[
                      return `<ha-icon
                        icon="mdi:brightness-5"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Luminosité : <span style="color: var(--text-color-sensor);">${states['sensor.mouv_tom_luminosite'].state} lx</span></span>`
                    ]]]
                  jauge_info3:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.mouv_tom_luminosite
                          color: gold
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(255,99,71,0.3)
                          entity: sensor.temp_tom
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.temp_tom
                    name: Température
                    show_state: true
                    show_last_changed: false
                    template:
                      - base
                      - base_petite
                      - state_temp
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_tom
                    name: Mouv
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_unavailable
                      - state_appareil
                      - state_unavailable
                      - effet
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Réglages" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.tom_reveil
                    show_last_changed: false
                    show_name: true
                    show_state: true
                    template:
                      - base
                      - base_petite
                      - state_unavailable
                      - effet
                    state:
                      - value: Grasse mat !
                        operator: '!='
                        styles:
                          card:
                            - background-color: var(--pastille_appareil)
                          img_cell:
                            - background-color: var(--pastille_appareil)
                          icon:
                            - color: var(--icon_on)
                          name:
                            - color: var(--text_on)'
                    name: Réveil
                    icon: mdi:alarm
                  - type: custom:button-card
                    entity: automation.reveil_tom
                    show_last_changed: true
                    show_name: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
                      - effet
                    name: Auto réveil
                    icon: mdi:progress-clock
                  - type: custom:button-card
                    entity: automation.tom_allumage_auto
                    show_last_changed: true
                    show_name: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
                      - effet
                    name: ON auto chambre
                    icon: mdi:lightbulb-on-outline
                  - type: custom:button-card
                    entity: switch.tom_do_not_disturb_switch
                    show_last_changed: true
                    show_name: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
                      - effet
                    name: Alexa silence
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Lumères et prises" ]]]
              - type: horizontal-stack
                cards:
                  - square: false
                    columns: 3
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: scene.tom_ambiance_normale
                        name: Jour
                        show_name: false
                        template:
                          - carte_badge
                          - state_appareil
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          service_data:
                            entity_id: scene.tom_ambiance_normale
                      - type: custom:button-card
                        entity: scene.tom_ambiance_nuit
                        name: Nuit
                        show_name: false
                        template:
                          - carte_badge
                          - state_appareil
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          service_data:
                            entity_id: scene.tom_ambiance_nuit
                      - type: custom:button-card
                        name: 'OFF'
                        icon: mdi:lightbulb-group-off
                        show_name: false
                        template:
                          - carte_badge
                          - state_appareil
                        tap_action:
                          action: call-service
                          service: light.turn_off
                          service_data:
                            entity_id: light.tom
                  - type: custom:button-card
                    entity: switch.moustique_tom
                    name: Prise moustique
                    show_last_changed: true
                    show_state: false
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
                      - effet
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: light.lustre_tom
                    show_last_changed: true
                    show_state: false
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                      - effet
                    name: null
                    icon: null
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lustre_tom
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lustre_tom
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.chevet_tom
                    show_last_changed: true
                    show_state: false
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                      - effet
                    name: null
                    icon: null
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.chevet_tom
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.chevet_tom
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.sonoff_10013f6d7e
                    show_last_changed: true
                    show_state: false
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                      - effet
                    name: null
                    icon: null
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.sonoff_10013f6d7e
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.sonoff_10013f6d7e
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.lampe_de_bureau_tom
                    show_last_changed: true
                    show_state: false
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                      - effet
                    name: null
                    icon: null
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lampe_de_bureau_tom
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lampe_de_bureau_tom
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: custom:button-card
            entity: media_player.tom
            name: Tom
            icon: mdi:speaker
            template:
              - base
              - carte_multimedia
              - effet
            custom_fields:
              cartes:
                card:
                  type: conditional
                  conditions:
                    - entity: media_player.tom
                      state: playing
                  card:
                    info: scroll
                    artwork: full-cover-fit
                    hide:
                      volume: true
                      source: true
                      power: true
                      name: false
                      icon: true
                      controls: true
                    type: custom:mini-media-player
                    entity: media_player.tom
  - theme: Backend-selected
    subview: true
    path: Manon Léane
    title: Manon Léane
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:cat
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: sensor.temp_manon
                name: Chambre Manon et Léane
                icon: mdi:death-star-variant
                template:
                  - carte_jauge
                styles:
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_manon'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.temp_manon'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.temp_manon'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.hum_manon'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.hum_manon'].state < 40)
                             return 'dodgerblue'
                            if (states['sensor.hum_manon'].state > 80)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info3:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.mouv_manon_luminosite'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.mouv_manon_luminosite'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    info4:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.mouv_leane_luminosite'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.mouv_leane_luminosite'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    pile:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.manon_thermo_batterie'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.manon_thermo_batterie'].state < 10)
                             return 'red'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  pile: |
                    [[[
                      return `<ha-icon
                        icon="mdi:battery"
                        style="width: 15px; height: 15px; color: lightgrey;">
                        </ha-icon><span> <span style="color: var(--text-color-sensor);">${states['sensor.manon_thermo_batterie'].state} %</span></span>`
                    ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.temp_manon'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.temp_manon
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.hum_manon'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.hum_manon
                          color: dodgerblue
                  info3: |
                    [[[
                      return `<ha-icon
                        icon="mdi:brightness-5"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Manon : <span style="color: var(--text-color-sensor);">${states['sensor.mouv_manon_luminosite'].state} lx</span></span>`
                    ]]]
                  jauge_info3:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.mouv_manon_luminosite
                          color: gold
                  info4: |
                    [[[
                      return `<ha-icon
                        icon="mdi:brightness-5"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Léane: <span style="color: var(--text-color-sensor);">${states['sensor.mouv_leane_luminosite'].state} lx</span></span>`
                    ]]]
                  jauge_info4:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.mouv_leane_luminosite
                          color: gold
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(255,99,71,0.3)
                          entity: sensor.temp_manon
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.mouv_manon
                    name: Manon
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_leane
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Réglages" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.manon_reveil
                    show_last_changed: false
                    show_name: true
                    show_state: true
                    template:
                      - base
                      - base_petite
                      - state_unavailable
                      - effet
                    state:
                      - value: Grasse mat !
                        operator: '!='
                        styles:
                          card:
                            - background-color: var(--pastille_appareil)
                          img_cell:
                            - background-color: var(--pastille_appareil)
                          icon:
                            - color: var(--icon_on)
                          name:
                            - color: var(--text_on)'
                    name: Réveil Manon
                    icon: mdi:alarm
                  - type: custom:button-card
                    entity: automation.reveil_manon
                    show_last_changed: true
                    show_name: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
                      - effet
                    name: Auto réveil Manon
                    icon: mdi:progress-clock
                  - type: custom:button-card
                    entity: sensor.leane_reveil
                    show_last_changed: false
                    show_name: true
                    show_state: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
                      - effet
                    state:
                      - value: Grasse mat !
                        operator: '!='
                        styles:
                          card:
                            - background-color: var(--pastille_appareil)
                          img_cell:
                            - background-color: var(--pastille_appareil)
                          icon:
                            - color: var(--icon_on)
                          name:
                            - color: var(--text_on)'
                    name: Réveil Léane
                    icon: mdi:alarm
                  - type: custom:button-card
                    entity: automation.reveil_leane
                    show_last_changed: true
                    show_name: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
                      - effet
                    name: Auto réveil Léane
                    icon: mdi:progress-clock
                  - type: custom:button-card
                    entity: switch.manon_do_not_disturb_switch
                    show_last_changed: true
                    show_name: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
                      - effet
                    name: Alexa Manon silence
                  - type: custom:button-card
                    entity: switch.leane_do_not_disturb_switch
                    show_last_changed: true
                    show_name: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
                      - effet
                    name: Alexa Léane silence
                  - type: custom:button-card
                    entity: automation.manon_leane_chambre_allumage_auto
                    show_last_changed: true
                    show_name: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
                      - effet
                    name: ON auto chambre
                    icon: mdi:lightbulb-on-outline
              - type: custom:button-card
                color_type: blank-card
              - type: custom:button-card
                color_type: blank-card
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Lumères et prises" ]]]
              - type: horizontal-stack
                cards:
                  - square: false
                    columns: 3
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: scene.grande_chambre_ambiance_normale
                        name: Jour
                        show_name: true
                        template:
                          - carte_badge
                          - state_appareil
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          service_data:
                            entity_id: scene.grande_chambre_ambiance_normale
                      - type: custom:button-card
                        entity: scene.grande_chambre_ambiance_nuit
                        name: Nuit
                        show_name: true
                        template:
                          - carte_badge
                          - state_appareil
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          service_data:
                            entity_id: scene.grande_chambre_ambiance_nuit
                      - type: custom:button-card
                        name: 'OFF'
                        icon: mdi:lightbulb-multiple-off
                        show_name: true
                        template:
                          - carte_badge
                          - state_appareil
                        tap_action:
                          action: call-service
                          service: light.turn_off
                          service_data:
                            entity_id: light.manon_et_leane
                  - type: custom:button-card
                    entity: switch.moustique_manon
                    name: Prise moustique
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - state_appareil
                      - state_unavailable
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: light.lustre_manon_et_leane
                    name: Lustre
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    icon: null
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lustre_manon_et_leane
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lustre_manon_et_leane
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.chevet_manon
                    name: Chevet Manon
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.chevet_manon
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.chevet_manon
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.lampe_de_bureau_manon
                    name: Bureau Manon
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lampe_de_bureau_manon
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lampe_de_bureau_manon
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: switch.arbre_lumineux
                    name: Arbre
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                  - type: custom:button-card
                    entity: light.lampe_manon_et_leane
                    name: Lampe
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lampe_manon_et_leane
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lampe_manon_et_leane
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.chevet_leane
                    name: Chevet Lélé
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.chevet_leane
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.chevet_leane
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
              - type: custom:button-card
                color_type: blank-card
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                color_type: blank-card
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: media_player.leane
                    name: Léane
                    icon: mdi:speaker
                    template:
                      - base
                      - carte_multimedia
                      - state_musique
                      - effet
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.leane
                              state: playing
                          card:
                            info: scroll
                            artwork: full-cover-fit
                            hide:
                              volume: true
                              source: true
                              power: true
                              name: false
                              icon: true
                              controls: true
                            type: custom:mini-media-player
                            entity: media_player.leane
                  - type: custom:button-card
                    entity: media_player.manon
                    name: Manon
                    icon: mdi:speaker
                    template:
                      - base
                      - carte_multimedia
                      - state_musique
                      - effet
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.manon
                              state: playing
                          card:
                            info: scroll
                            artwork: full-cover-fit
                            hide:
                              volume: true
                              source: true
                              power: true
                              name: false
                              icon: true
                              controls: true
                            type: custom:mini-media-player
                            entity: media_player.manon
              - square: false
                columns: 1
                type: grid
                cards:
                  - type: custom:button-card
                    entity: media_player.chambre_de_manon_et_leane
                    name: Manon et Léane
                    icon: mdi:speaker
                    template:
                      - base
                      - carte_multimedia
                      - effet
                    show_name: true
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.chambre_de_manon_et_leane
                              state: playing
                          card:
                            info: scroll
                            artwork: full-cover-fit
                            hide:
                              volume: true
                              source: true
                              power: true
                              name: false
                              icon: true
                              controls: true
                            type: custom:mini-media-player
                            entity: media_player.chambre_de_manon_et_leane
  - theme: Backend-selected
    path: Nina
    subview: true
    title: Nina
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:owl
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: sensor.temp_nina
                name: Chambre Nina
                icon: mdi:owl
                template:
                  - carte_jauge
                styles:
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_nina'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.temp_nina'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.temp_nina'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.hum_nina'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.hum_nina'].state < 40)
                             return 'dodgerblue'
                            if (states['sensor.hum_nina'].state > 80)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info3:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.mouv_nina_luminosite'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.mouv_nina_luminosite'].state < 5)
                             return 'dodgerblue'
                            return 'lightgrey';
                          ]]]
                    pile:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.nina_thermo_batterie'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.nina_thermo_batterie'].state < 10)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  pile: |
                    [[[
                      return `<ha-icon
                        icon="mdi:battery"
                        style="width: 15px; height: 15px; color: lightgrey;">
                        </ha-icon><span> <span style="color: var(--text-color-sensor);">${states['sensor.nina_thermo_batterie'].state} %</span></span>`
                    ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.temp_nina'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.temp_nina
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.hum_nina'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.hum_nina
                          color: dodgerblue
                  info3: |
                    [[[
                      return `<ha-icon
                        icon="mdi:brightness-5"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Luminosité : <span style="color: var(--text-color-sensor);">${states['sensor.mouv_nina_luminosite'].state} lx</span></span>`
                    ]]]
                  jauge_info3:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.mouv_nina_luminosite
                          color: gold
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(255,99,71,0.3)
                          entity: sensor.temp_nina
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.temp_nina
                    name: Température
                    show_state: true
                    show_last_changed: false
                    template:
                      - base
                      - base_petite
                      - state_temp
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_nina
                    name: Mouv
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
              - type: custom:button-card
                color_type: blank-card
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Réglages" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.nina_reveil
                    show_state: true
                    show_last_changed: false
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
                    state:
                      - value: Grasse mat !
                        operator: '!='
                        styles:
                          card:
                            - background-color: var(--pastille_appareil)
                          img_cell:
                            - background-color: var(--pastille_appareil)
                          icon:
                            - color: var(--icon_on)
                          name:
                            - color: var(--text_on)'
                    name: Réveil
                    icon: mdi:alarm
                  - type: custom:button-card
                    entity: automation.reveil_nina
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
                    name: Auto réveil
                    icon: mdi:progress-clock
                  - type: custom:button-card
                    entity: automation.tom_allumage_auto
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
                    name: ON auto
                    icon: mdi:lightbulb-on-outline
                  - type: custom:button-card
                    entity: switch.nina_do_not_disturb_switch
                    show_last_changed: true
                    show_name: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                      - state_unavailable
                      - effet
                    name: Alexa silence
              - type: custom:button-card
                color_type: blank-card
              - type: custom:button-card
                color_type: blank-card
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Lumères et prises" ]]]
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: scene.nina_ambiance_normale
                    name: Jour
                    show_name: true
                    template:
                      - carte_badge
                      - state_appareil
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      service_data:
                        entity_id: scene.nina_ambiance_normale
                  - type: custom:button-card
                    entity: scene.nina_ambiance_nuit
                    name: Nuit
                    show_name: true
                    template:
                      - carte_badge
                      - state_appareil
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      service_data:
                        entity_id: scene.nina_ambiance_nuit
                  - type: custom:button-card
                    name: 'OFF'
                    icon: mdi:lightbulb-multiple-off
                    show_name: true
                    template:
                      - carte_badge
                      - state_appareil
                    tap_action:
                      action: call-service
                      service: light.turn_on
                      service_data:
                        entity_id: light.nina
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: light.lampe_de_bureau_nina
                    name: Bureau
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lampe_de_bureau_nina
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lampe_de_bureau_nina
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.lustre_nina
                    name: Lustre
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lustre_nina
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lustre_nina
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.chevet_nina
                    name: Chevet
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.chevet_nina
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.chevet_nina
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: switch.guirlande_nina
                    name: Guirlande
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                  - type: custom:button-card
                    entity: light.lampadaire_nina
                    name: Lampadaire
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.lampadaire_nina
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.lampadaire_nina
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: switch.moustique_nina
                    name: Moustique
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - state_appareil
                      - state_unavailable
              - type: custom:button-card
                color_type: blank-card
              - type: custom:button-card
                color_type: blank-card
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: custom:button-card
            entity: media_player.nina
            name: Nina
            icon: mdi:speaker
            template:
              - base
              - carte_multimedia
              - effet
            custom_fields:
              cartes:
                card:
                  type: conditional
                  conditions:
                    - entity: media_player.nina
                      state: playing
                  card:
                    info: scroll
                    artwork: full-cover-fit
                    hide:
                      volume: true
                      source: true
                      power: true
                      name: false
                      icon: true
                      controls: true
                    type: custom:mini-media-player
                    entity: media_player.nina
  - theme: Backend-selected
    title: Escalier
    path: Escalier
    subview: true
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:stairs
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - square: false
            columns: 2
            type: grid
            cards:
              - type: custom:button-card
                entity: binary_sensor.mouv_escalier
                name: Escalier
                show_state: false
                show_last_changed: true
                template:
                  - base
                  - base_petite
                  - state_mouv
                  - state_unavailable
              - type: custom:button-card
                entity: binary_sensor.mouv_palier
                name: Palier
                show_state: false
                show_last_changed: true
                template:
                  - base
                  - base_petite
                  - state_mouv
                  - state_unavailable
              - type: custom:button-card
                entity: sensor.mouv_palier_lum
                name: Luminosité
                show_state: false
                show_last_changed: true
                template:
                  - base
                  - base_petite
                  - state_luminosite
                  - state_unavailable
              - type: custom:button-card
                entity: automation.palier_allume_sur_mouvement
                name: ON auto
                icon: mdi:lightbulb-on-outline
                show_state: false
                show_last_changed: true
                template:
                  - base
                  - base_petite
                  - state_luminosite
                  - state_unavailable
          - type: custom:button-card
            template:
              - titre_section
            name: |
              [[[ return "Lumières" ]]]
          - square: false
            columns: 2
            type: grid
            cards:
              - type: custom:button-card
                entity: light.escaliers
                name: Tout
                show_state: true
                show_last_changed: true
                template:
                  - base
                  - base_moyenne
                  - jauge_lumiere
                  - state_lumiere
                  - state_unavailable
                custom_fields:
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: light.escaliers
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.escaliers
                        radius: 5px
                        height: 15px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
              - type: custom:button-card
                entity: light.escalier
                show_state: true
                show_last_changed: true
                template:
                  - base
                  - base_moyenne
                  - jauge_lumiere
                  - state_lumiere
                  - state_unavailable
                custom_fields:
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: light.escalier
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.escalier
                        radius: 5px
                        height: 15px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
              - type: custom:button-card
                entity: light.palier
                show_state: true
                show_last_changed: true
                template:
                  - base
                  - base_moyenne
                  - jauge_lumiere
                  - state_lumiere
                  - state_unavailable
                custom_fields:
                  lum:
                    card:
                      type: conditional
                      conditions:
                        - entity: light.palier
                          state: 'on'
                      card:
                        type: custom:my-slider
                        entity: light.palier
                        radius: 5px
                        height: 15px
                        mainSliderColor: var(--button-card-light-color-no-temperature)
                        thumbHorizontalPadding: 0px
                        thumbVerticalPadding: 0px
                        thumbWidth: 2px
                        minSet: 1
  - theme: Backend-selected
    subview: true
    title: SDB
    path: SDB
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:shower-head
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: sensor.temp_salle_de_bain
                name: Salle de bain
                icon: phu:rooms-bathroom
                template:
                  - carte_jauge
                styles:
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_salle_de_bain'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.temp_salle_de_bain'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.temp_salle_de_bain'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.hum_salle_de_bain'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.hum_salle_de_bain'].state < 40)
                             return 'dodgerblue'
                            if (states['sensor.hum_salle_de_bain'].state > 80)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    pile:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_sdb_battery_level'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.temp_sdb_battery_level'].state < 10)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  pile: |
                    [[[
                      return `<ha-icon
                        icon="mdi:battery"
                        style="width: 15px; height: 15px; color: lightgrey;">
                        </ha-icon><span> <span style="color: var(--text-color-sensor);">${states['sensor.temp_sdb_battery_level'].state} %</span></span>`
                    ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.temp_salle_de_bain'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.temp_salle_de_bain
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.hum_salle_de_bain'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.hum_salle_de_bain
                          color: dodgerblue
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(255,99,71,0.3)
                          entity: sensor.temp_salle_de_bain
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - square: false
                columns: 1
                type: grid
                cards:
                  - type: custom:button-card
                    entity: switch.radiateur
                    show_state: true
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - state_appareil
                      - state_unavailable
                    name: Chauffage
                    icon: null
              - type: custom:button-card
                color_type: blank-card
              - type: custom:button-card
                color_type: blank-card
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - square: false
                columns: 1
                type: grid
                cards:
                  - type: custom:button-card
                    entity: media_player.la_salle_de_bain
                    name: Salle de bain
                    icon: mdi:speaker
                    template:
                      - base
                      - carte_multimedia
                      - effet
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.la_salle_de_bain
                              state: playing
                          card:
                            info: scroll
                            artwork: full-cover-fit
                            hide:
                              volume: true
                              source: true
                              power: true
                              name: false
                              icon: true
                              controls: true
                            type: custom:mini-media-player
                            entity: media_player.la_salle_de_bain
              - type: custom:button-card
                color_type: blank-card
              - type: custom:button-card
                color_type: blank-card
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - header:
              title: 🚿Salle de bains ️
              show: true
              show_states: true
              colorize_states: true
            experimental:
              brush: true
            graph_span: 72h
            brush:
              selection_span: 12h
            apex_config:
              grid:
                show: false
              legend:
                fontSize: 12px
                height: 40
              dataLabels:
                enabled: false
              stroke:
                width: 3
                curve: smooth
              fill:
                type: gradient
                gradient:
                  type: vertical
                  shadeIntensity: 0.8
                  inverseColors: false
                  opacityFrom: 0.5
                  opacityTo: 0
                  stops:
                    - - 0
                      - 50
                      - 100
              tooltip:
                enabled: true
              yaxis:
                - show: true
                  decimalsInFloat: 0
                  labels:
                    style:
                      colors: '#FFB62E'
                      fontSize: 12px
                  forceNiceScale: true
                - show: true
                  decimalsInFloat: 0
                  opposite: true
                  labels:
                    style:
                      colors: '#2eb9ff'
                      fontSize: 12px
                  forceNiceScale: true
              xaxis:
                axisBorder:
                  show: false
                labels:
                  style:
                    fontSize: 14px
            series:
              - entity: sensor.temp_salle_de_bain
                name: température
                show:
                  extremas: false
                type: area
                color: yellow
                fill_raw: last
                float_precision: 1
                group_by:
                  duration: 10min
                  func: avg
              - entity: sensor.hum_salle_de_bain
                name: humidité
                show:
                  extremas: false
                type: area
                color: dodgerblue
                fill_raw: last
                float_precision: 1
                group_by:
                  duration: 10min
                  func: avg
              - entity: sensor.temp_salle_de_bain
                name: SdB
                color: yellow
                fill_raw: last
                type: area
                stroke_width: 1
                group_by:
                  duration: 10min
                  func: avg
                show:
                  in_brush: true
                  in_chart: false
            type: custom:apexcharts-card
  - theme: Backend-selected
    title: Entrée
    subview: true
    path: Entrée
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:spotlight-beam
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: sensor.temp_couloir_rdc
                name: Couloir
                icon: phu:wall-spot
                template:
                  - carte_jauge
                styles:
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_couloir_rdc'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.temp_couloir_rdc'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.temp_couloir_rdc'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.hum_couloir_rdc'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.hum_couloir_rdc'].state < 40)
                             return 'dodgerblue'
                            if (states['sensor.hum_couloir_rdc'].state > 80)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  pile: |
                    [[[
                      return `<ha-icon
                        icon="mdi:battery"
                        style="width: 15px; height: 15px; color: lightgrey;">
                        </ha-icon><span> <span style="color: var(--text-color-sensor);">${states['sensor.couloir_thermo_batterie'].state} %</span></span>`
                    ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.temp_couloir_rdc'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.temp_couloir_rdc
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.hum_couloir_rdc'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.hum_couloir_rdc
                          color: dodgerblue
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(255,99,71,0.3)
                          entity: sensor.temp_couloir_rdc
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: binary_sensor.porte_entree
                    name: null
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_porte
                      - state_unavailable
                  - type: custom:button-card
                    entity: binary_sensor.mouv_couloir
                    name: Couloir
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_mouv
                      - state_unavailable
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Lumières" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: light.entree
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    name: null
                    icon: null
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.entree
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.entree
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.couloir
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    name: null
                    icon: null
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.couloir
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.couloir
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.aqara_hub_54e1
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    name: null
                    icon: null
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.aqara_hub_54e1
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.aqara_hub_54e1
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
                  - type: custom:button-card
                    entity: light.veranda
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_moyenne
                      - jauge_lumiere
                      - state_lumiere
                      - state_unavailable
                    name: null
                    icon: null
                    custom_fields:
                      lum:
                        card:
                          type: conditional
                          conditions:
                            - entity: light.veranda
                              state: 'on'
                          card:
                            type: custom:my-slider
                            entity: light.veranda
                            radius: 5px
                            height: 15px
                            mainSliderColor: var(--button-card-light-color-no-temperature)
                            thumbHorizontalPadding: 0px
                            thumbVerticalPadding: 0px
                            thumbWidth: 2px
                            minSet: 1
              - type: custom:button-card
                color_type: blank-card
              - header:
                  title: 🏠 Entrée / véranda ️
                  show: true
                  show_states: true
                  colorize_states: true
                experimental:
                  brush: true
                graph_span: 72h
                brush:
                  selection_span: 12h
                apex_config:
                  grid:
                    show: false
                  legend:
                    fontSize: 12px
                    height: 40
                  dataLabels:
                    enabled: false
                  stroke:
                    width: 3
                    curve: smooth
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.5
                      opacityTo: 0
                      stops:
                        - - 0
                          - 50
                          - 100
                  tooltip:
                    enabled: true
                  yaxis:
                    - show: true
                      decimalsInFloat: 0
                      labels:
                        style:
                          colors: '#FFB62E'
                          fontSize: 12px
                      forceNiceScale: true
                    - show: true
                      decimalsInFloat: 0
                      opposite: true
                      labels:
                        style:
                          colors: '#2eb9ff'
                          fontSize: 12px
                      forceNiceScale: true
                  xaxis:
                    axisBorder:
                      show: false
                    labels:
                      style:
                        fontSize: 14px
                series:
                  - entity: sensor.temp_couloir_rdc
                    name: Temp couloir
                    show:
                      extremas: false
                    type: area
                    color: tomato
                    fill_raw: last
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: avg
                  - entity: sensor.plante_citro_temp
                    name: Temp véranda
                    show:
                      extremas: false
                    type: area
                    color: tomato
                    fill_raw: last
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: avg
                  - entity: sensor.hum_couloir_rdc
                    name: humidité couloir
                    show:
                      extremas: false
                    type: area
                    color: dodgerblue
                    fill_raw: last
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: avg
                  - entity: sensor.temp_couloir_rdc
                    name: SdB
                    color: tomato
                    fill_raw: last
                    type: area
                    stroke_width: 1
                    group_by:
                      duration: 10min
                      func: avg
                    show:
                      in_brush: true
                      in_chart: false
                type: custom:apexcharts-card
  - theme: Backend-selected
    title: Lavabo
    subview: true
    path: Lavabo
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:faucet
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - square: false
            columns: 1
            type: grid
            cards:
              - type: custom:button-card
                entity: binary_sensor.mouv_salle_d_eau
                name: Lavabo
                show_state: false
                show_last_changed: true
                template:
                  - base
                  - base_petite
                  - state_mouv
                  - state_unavailable
          - type: custom:button-card
            color_type: blank-card
          - type: custom:button-card
            color_type: blank-card
          - type: grid
            square: false
            columns: 2
            cards:
              - type: custom:button-card
                entity: light.wc_gauche
                name: null
                show_state: false
                show_last_changed: true
                template:
                  - base
                  - base_moyenne
                  - jauge_lumiere
                  - state_lumiere
                  - state_unavailable
              - type: custom:button-card
                entity: light.wc_droit
                name: null
                show_state: false
                show_last_changed: true
                template:
                  - base
                  - base_moyenne
                  - jauge_lumiere
                  - state_lumiere
                  - state_unavailable
  - theme: Backend-selected
    title: Parents
    path: Parents
    subview: true
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:bed-king
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: sensor.temp_parents
                name: Chambre parents
                icon: phu:rooms-bedroom
                template:
                  - carte_jauge
                styles:
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_parents'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.temp_parents'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.temp_parents'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.hum_parents'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.hum_parents'].state < 40)
                             return 'dodgerblue'
                            if (states['sensor.hum_parents'].state > 80)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info3:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.temp_parents_aqara'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.temp_parents_aqara'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.temp_parents_aqara'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    pile:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.parents_thermo_batterie'].state == "unavailable" )
                             return 'transparent'
                            if (states['sensor.parents_thermo_batterie'].state < 10)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  pile: |
                    [[[
                      return `<ha-icon
                        icon="mdi:battery"
                        style="width: 15px; height: 15px; color: lightgrey;">
                        </ha-icon><span> <span style="color: var(--text-color-sensor);">${states['sensor.parents_thermo_batterie'].state} %</span></span>`
                    ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.temp_parents'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.temp_parents
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.hum_parents'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.hum_parents
                          color: dodgerblue
                  info3: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Temp Aqara : <span style="color: var(--text-color-sensor);">${states['sensor.temp_parents_aqara'].state} °</span></span>`
                    ]]]
                  jauge_info3:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.temp_parents_aqara
                          color: tomato
                      max: 40
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(255,99,71,0.3)
                          entity: sensor.temp_parents
                      line_width: 1
                      lower_bound: 10
                      points_per_hour: 1
                      hours_to_show: 48
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: horizontal-stack
                cards:
                  - square: false
                    columns: 3
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: scene.chambre_parents_ambiance_normale
                        name: Jour
                        show_name: false
                        template:
                          - carte_badge
                          - state_appareil
                        show_state: false
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          service_data:
                            entity_id: scene.chambre_parents_ambiance_normale
                      - type: custom:button-card
                        entity: script.ambiance_cine_chevet_parents
                        name: TV
                        show_name: false
                        template:
                          - carte_badge
                          - state_appareil
                        show_state: false
                        tap_action:
                          action: call-service
                          service: script.turn_on
                          service_data:
                            entity_id: script.ambiance_cine_chevet_parents
                      - type: custom:button-card
                        name: 'OFF'
                        icon: mdi:lightbulb-multiple-off
                        show_name: false
                        template:
                          - carte_badge
                          - state_appareil
                        show_state: false
                        tap_action:
                          action: call-service
                          service: light.turn_off
                          service_data:
                            entity_id: light.parents
                  - type: custom:button-card
                    entity: binary_sensor.porte_chambre_parents
                    name: Fenêtre
                    show_state: false
                    show_last_changed: true
                    template:
                      - base
                      - base_petite
                      - state_porte
                      - state_unavailable
              - type: horizontal-stack
                cards:
                  - square: false
                    columns: 1
                    type: grid
                    cards:
                      - type: custom:button-card
                        entity: switch.tele_des_parents
                        icon: mdi:youtube-tv
                        name: TV
                        show_state: true
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - state_tv
                          - state_unavailable
                      - type: custom:button-card
                        entity: light.lustre_parents
                        name: Lustre
                        show_state: false
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.lustre_parents
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.lustre_parents
                                radius: 5px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                      - type: custom:button-card
                        entity: light.chevet
                        name: Chevet
                        show_state: false
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - jauge_lumiere
                          - state_lumiere
                          - state_unavailable
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.chevet
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.chevet
                                radius: 5px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                      - type: custom:button-card
                        entity: switch.moustique_parents
                        name: null
                        show_state: true
                        show_last_changed: true
                        template:
                          - base
                          - base_moyenne
                          - state_appareil
                          - state_unavailable
                  - type: thermostat
                    entity: climate.chauffage_parents
              - type: custom:button-card
                color_type: blank-card
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - square: false
            columns: 2
            type: grid
            cards:
              - type: custom:button-card
                entity: media_player.chambre_des_parents
                name: Musique
                icon: mdi:speaker
                template:
                  - base
                  - carte_multimedia
                  - state_musique
                  - state_unavailable
              - type: custom:button-card
                entity: media_player.cube_tv
                name: TV
                icon: mdi:television
                template:
                  - base
                  - carte_multimedia
                  - state_musique
                  - state_unavailable
  - theme: Backend-selected
    subview: true
    title: Garage
    path: Garage
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:garage-open-variant
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - square: false
            columns: 2
            type: grid
            cards:
              - type: custom:button-card
                entity: binary_sensor.porte_cagibi
                name: Cagibi
                show_state: false
                show_last_changed: true
                template:
                  - base
                  - base_petite
                  - state_porte
                  - state_unavailable
              - type: custom:button-card
                entity: binary_sensor.porte_garage
                name: Garage
                show_state: false
                show_last_changed: true
                template:
                  - base
                  - base_petite
                  - state_porte
                  - state_unavailable
              - type: custom:button-card
                entity: binary_sensor.mouv_garage
                name: Mouvements
                show_state: false
                show_last_changed: true
                template:
                  - base
                  - base_petite
                  - state_mouv
                  - state_unavailable
          - type: custom:button-card
            template:
              - titre_section
            name: |
              [[[ return "Lumières" ]]]
          - square: false
            columns: 2
            type: grid
            cards:
              - type: custom:button-card
                entity: light.cagibi
                name: null
                show_state: false
                show_last_changed: true
                template:
                  - base
                  - base_moyenne
                  - jauge_lumiere
                  - state_lumiere
                  - state_unavailable
              - type: custom:button-card
                entity: automation.cagibi_eclairage_off
                name: OFF auto
                icon: mdi:lightbulb-off-outline
                show_state: true
                show_last_changed: true
                template:
                  - base
                  - base_moyenne
                  - state_appareil
                  - state_unavailable
  - theme: Backend-selected
    subview: true
    title: RPI
    path: RPI
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:raspberry-pi
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - square: false
            columns: 2
            type: grid
            cards:
              - type: custom:button-card
                entity: sensor.cpu_temperature
                show_state: true
                template:
                  - base
                  - base_petite
                name: RPI
              - type: custom:button-card
                entity: sensor.processor_use_percent
                show_state: true
                template:
                  - base
                  - base_petite
                name: CPU
              - type: custom:button-card
                entity: sensor.memory_use_percent
                show_state: true
                template:
                  - base
                  - base_petite
                name: RAM
              - type: custom:button-card
                entity: sensor.disk_use_percent_home
                show_state: true
                template:
                  - base
                  - base_petite
                name: SSD
          - header:
              title: Home Assistant
              show: true
              show_states: true
              colorize_states: true
            experimental:
              brush: true
            graph_span: 72h
            brush:
              selection_span: 12h
            apex_config:
              grid:
                show: false
              legend:
                fontSize: 12px
                height: 40
              dataLabels:
                enabled: false
              stroke:
                width: 3
                curve: smooth
              fill:
                type: gradient
                gradient:
                  type: vertical
                  shadeIntensity: 0.8
                  inverseColors: false
                  opacityFrom: 0.5
                  opacityTo: 0
                  stops:
                    - - 0
                      - 50
                      - 100
              tooltip:
                enabled: true
              yaxis:
                - show: true
                  decimalsInFloat: 0
                  labels:
                    style:
                      colors: '#FFB62E'
                      fontSize: 12px
                  forceNiceScale: true
                - show: true
                  decimalsInFloat: 0
                  opposite: true
                  labels:
                    style:
                      colors: '#2eb9ff'
                      fontSize: 12px
                  forceNiceScale: true
              xaxis:
                axisBorder:
                  show: false
                labels:
                  style:
                    fontSize: 14px
            series:
              - entity: sensor.cpu_temperature
                name: Raspberry
                show:
                  extremas: false
                type: area
                color: grey
                fill_raw: last
                float_precision: 1
                group_by:
                  duration: 10min
                  func: avg
              - entity: sensor.processor_use_percent
                name: CPU
                show:
                  extremas: false
                type: area
                color: dodgerblue
                fill_raw: last
                float_precision: 1
                group_by:
                  duration: 10min
                  func: avg
              - entity: sensor.memory_use_percent
                name: RAM
                show:
                  extremas: false
                type: area
                color: red
                fill_raw: last
                float_precision: 1
                group_by:
                  duration: 10min
                  func: avg
              - entity: sensor.disk_use_percent_home
                name: SSD
                show:
                  extremas: false
                type: area
                color: salmon
                fill_raw: last
                float_precision: 1
                group_by:
                  duration: 10min
                  func: avg
              - entity: sensor.cpu_temperature
                name: Raspberry
                color: grey
                fill_raw: last
                type: area
                stroke_width: 1
                group_by:
                  duration: 10min
                  func: avg
                show:
                  in_brush: true
                  in_chart: false
            type: custom:apexcharts-card
  - theme: Backend-selected
    subview: true
    title: Conso Enedis
    path: Conso Enedis
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:flash
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:content-card-linky
                entity: sensor.myenedis_09397539765420
                showInTableUnit: false
                showPeakOffPeak: false
                showHistory: true
                showDayPrice: true
                showDayPriceHCHP: false
                showDayHCHP: false
                showIcon: false
                kWhPrice: false
                showtitle: true
                style: |
                  ha-card {
                    color: lightgrey ;
                    font-size: 95%;
                    font-family: Avenir;
                  }
                nbJoursAffichage: '7'
                showDayName: short
                showTitle: true
                showPrice: true
                showCurrentMonthRatio: true
                showTitreLigne: true
                showError: true
                showYesterdayRatio: true
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: markdown
                content: >-

                  <font color='lightgrey'><b>Coût : </b></font><font
                  color='red'><b>`0.1557€`</b></font><font color='grey'>

                  - Hier : <font color='lightgrey'>**{{
                  (((states('sensor.myenedis_09397539765420') | float) *
                  (0.1557) | float)) | round(2) }}€**<font color='grey'>

                  - Cette semaine :  <font color='lightgrey'>**{{
                  states('sensor.myenedis_conso_semaine_en_cours_v2') }}€**<font
                  color='grey'>

                  - Semaine dernière :  <font color='lightgrey'>**{{
                  (((states('sensor.myenedis_conso_semaine_derniere') | float) *
                  (0.0001557) | float)) | round(2) }}€**


                  <font color='lightgrey'><b>Abo mensuel inclus :</b></font>
                  <font color='red'><b>`10.66€/mois`</b></font><font
                  color='grey'>

                  - Mois en cours : <font color='lightgrey'>**{{
                  states('sensor.myenedis_cout_mois_en_cours_abo') }}€**<font
                  color='grey'>

                  - Mois dernier : <font color='lightgrey'>**{{
                  states('sensor.myenedis_conso_mois_dernier') }}€**<font
                  color='grey'> 

                  - Année en cours :  <font color='lightgrey'>**{{
                  states('sensor.myenedis_cout_annee_en_cours_abo') }}€**
                style: |
                  ha-card {
                    font-size: 110%;
                    font-family: Avenir;
                  }
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - align_header: center
                align_icon: center
                align_state: center
                animate: true
                color_thresholds:
                  - color: dodgerblue
                    value: 0
                  - color: dodgerblue
                    value: 0.2
                  - color: dodgerblue
                    value: 0.4
                  - color: dodgerblue
                    value: 0.6
                  - color: dodgerblue
                    value: 0.8
                  - color: dodgerblue
                    value: 1
                  - color: blue
                    value: 1.2
                  - color: blue
                    value: 1.4
                  - color: blue
                    value: 1.6
                  - color: gold
                    value: 1.8
                  - color: orange
                    value: 2
                  - color: orange
                    value: 2.2
                  - color: orange
                    value: 2.4
                  - color: orange
                    value: 2.6
                  - color: orange
                    value: 2.8
                  - color: red
                    value: 3
                  - color: red
                    value: 3.5
                  - color: red
                    value: 4
                  - color: red
                    value: 4.5
                  - color: red
                    value: 5
                  - color: red
                    value: 5.5
                  - color: red
                    value: 6
                  - color: firebrick
                    value: 7
                  - color: firebrick
                    value: 8
                  - color: firebrick
                    value: 9
                  - color: firebrick
                    value: 10
                entities:
                  - entity: sensor.myenedis_cout_j7
                  - entity: sensor.myenedis_cout_j6
                  - entity: sensor.myenedis_cout_j5
                  - entity: sensor.myenedis_cout_j4
                  - entity: sensor.myenedis_cout_j3
                  - entity: sensor.myenedis_cout_j2
                  - entity: sensor.myenedis_cout_j1
                font_size: 80
                font_size_header: 13
                hour24: true
                hours_to_show: 24
                icon: mdi:currency-eur
                line_width: 2
                name: Coût sur 7 jours
                point_per_hour: 1
                group_by: date
                show:
                  graph: bar
                  name: true
                  state: false
                  extrema: false
                  fill: false
                  icon: true
                  icon_adaptive_color: false
                  labels: true
                  labels_secondary: false
                  legend: false
                  line: false
                  indicator: false
                  name_adaptive_color: false
                style: |
                  ha-card {
                    color: dodgerblue;
                    font-family: Avenir;
                  }
                  :host {
                    --paper-item-icon-color: dodgerblue;
                  }
                type: custom:mini-graph-card
  - theme: Backend-selected
    subview: true
    title: Plantes
    path: Plantes
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:flower
    badges: []
    cards:
      - square: false
        columns: 1
        type: grid
        cards:
          - type: custom:button-card
            entity: sensor.plante_hum_dracaena
            name: Plante salon
            icon: mdi:flower
            label: |
              [[[ return "Dracaena" ]]]
            show_label: true
            show_last_changed: false
            template:
              - carte_jauge
            styles:
              img_cell:
                - background-color: |
                    [[[
                      if (states['sensor.plante_hum_dracaena'].state < 5) return 'dodgerblue'
                      else return 'var(--pastille_off)';
                    ]]]
              icon:
                - color: |
                    [[[
                      if (states['sensor.plante_hum_dracaena'].state < 5) return 'var(--icon_on)'
                      else return 'var(--icon_off)';
                    ]]]
              custom_fields:
                info1:
                  - '--text-color-sensor': |
                      [[[
                        if (states['sensor.plante_temp_dracaena'].state == "unavailable")
                         return 'transparent'
                        if (states['sensor.plante_temp_dracaena'].state < 5)
                         return 'dodgerblue'
                        return 'lightgrey';
                      ]]]
                info2:
                  - '--text-color-sensor': |
                      [[[
                        if (states['sensor.plante_hum_dracaena'].state == "unavailable")
                         return 'transparent'
                        if (states['sensor.plante_hum_dracaena'].state < 5)
                         return 'dodgerblue'
                        return 'lightgrey'
                      ]]]
                info3:
                  - '--text-color-sensor': |
                      [[[
                        if (states['sensor.plante_lum_dracaena'].state == "unavailable" )
                         return 'transparent'
                        if (states['sensor.plante_lum_dracaena'].state < 5)
                         return 'dodgerblue'
                        return 'lightgrey';
                      ]]]
                info4:
                  - '--text-color-sensor': |
                      [[[
                        if (states['sensor.plante_fertilite_dracaena'].state == "unavailable" )
                         return 'transparent'
                        if (states['sensor.plante_fertilite_dracaena'].state < 5)
                         return 'dodgerblue'
                        return 'lightgrey';
                      ]]]
            custom_fields:
              info1: |
                [[[
                  return `<ha-icon
                    icon="mdi:thermometer"
                    style="width: 20px; height: 20px; color: lightgrey;">
                    </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.plante_temp_dracaena'].state} °</span></span>`
                ]]]
              jauge_info1:
                card:
                  type: custom:bar-card
                  entities:
                    - entity: sensor.plante_temp_dracaena
                      color: tomato
              info2: |
                [[[
                  return `<ha-icon
                    icon="mdi:water"
                    style="width: 20px; height: 20px; color: lightgrey;">
                    </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_hum_dracaena'].state} %</span></span>`
                ]]]
              jauge_info2:
                card:
                  type: custom:bar-card
                  name: temp
                  entities:
                    - entity: sensor.plante_hum_dracaena
                      color: dodgerblue
              info3: |
                [[[
                  return `<ha-icon
                    icon="mdi:brightness-5"
                    style="width: 20px; height: 20px; color: lightgrey;">
                    </ha-icon><span> Luminosité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_lum_dracaena'].state} lx</span></span>`
                ]]]
              jauge_info3:
                card:
                  type: custom:bar-card
                  name: temp
                  entities:
                    - entity: sensor.plante_lum_dracaena
                      color: gold
              info4: |
                [[[
                  return `<ha-icon
                    icon="mdi:lightning-bolt"
                    style="width: 20px; height: 20px; color: lightgrey;">
                    </ha-icon><span> Fertilité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_fertilite_dracaena'].state} µS/cm</span></span>`
                ]]]
              jauge_info4:
                card:
                  type: custom:bar-card
                  name: temp
                  entities:
                    - entity: sensor.plante_fertilite_dracaena
                      color: green
                      max: 1000
              graph:
                card:
                  type: custom:mini-graph-card
                  entities:
                    - color: rgba(0,191,255,0.3)
                      entity: sensor.plante_hum_dracaena
                  line_width: 1
                  lower_bound: 10
                  points_per_hour: 1
                  hours_to_show: 48
                  show:
                    fill: fade
                    icon: false
                    name: false
                    state: false
                    legend: false
                    points: false
                    labels: false
          - type: custom:button-card
            entity: sensor.plante_temp_pied_elephant
            name: Pied d’élephant
            icon: mdi:elephant
            label: |
              [[[ return "Beaucarnea" ]]]
            show_label: true
            show_last_changed: false
            template:
              - carte_jauge
            styles:
              img_cell:
                - background-color: |
                    [[[
                      if (states['sensor.plante_hum_pied_elephant'].state < 5) return 'dodgerblue'
                      else return 'var(--pastille_off)';
                    ]]]
              icon:
                - color: |
                    [[[
                      if (states['sensor.plante_hum_pied_elephant'].state < 5) return 'var(--icon_on)'
                      else return 'var(--icon_off)';
                    ]]]
              custom_fields:
                info1:
                  - '--text-color-sensor': |
                      [[[
                        if (states['sensor.plante_temp_pied_elephant'].state == "unavailable")
                         return 'transparent'
                        if (states['sensor.plante_temp_pied_elephant'].state < 5)
                         return 'dodgerblue'
                        return 'lightgrey';
                      ]]]
                info2:
                  - '--text-color-sensor': |
                      [[[
                        if (states['sensor.plante_hum_pied_elephant'].state == "unavailable")
                         return 'transparent'
                        if (states['sensor.plante_hum_pied_elephant'].state < 5)
                         return 'dodgerblue'
                        return 'lightgrey'
                      ]]]
                info3:
                  - '--text-color-sensor': |
                      [[[
                        if (states['sensor.plante_lum_pied_elephant'].state == "unavailable" )
                         return 'transparent'
                        if (states['sensor.plante_lum_pied_elephant'].state < 5)
                         return 'dodgerblue'
                        return 'lightgrey';
                      ]]]
                info4:
                  - '--text-color-sensor': |
                      [[[
                        if (states['sensor.plante_fertilite_pied_elephant'].state == "unavailable" )
                         return 'transparent'
                        if (states['sensor.plante_fertilite_pied_elephant'].state < 5)
                         return 'dodgerblue'
                        return 'lightgrey';
                      ]]]
            custom_fields:
              info1: |
                [[[
                  return `<ha-icon
                    icon="mdi:thermometer"
                    style="width: 20px; height: 20px; color: lightgrey;">
                    </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.plante_temp_pied_elephant'].state} °</span></span>`
                ]]]
              jauge_info1:
                card:
                  type: custom:bar-card
                  entities:
                    - entity: sensor.plante_temp_pied_elephant
                      color: tomato
              info2: |
                [[[
                  return `<ha-icon
                    icon="mdi:water"
                    style="width: 20px; height: 20px; color: lightgrey;">
                    </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_hum_pied_elephant'].state} %</span></span>`
                ]]]
              jauge_info2:
                card:
                  type: custom:bar-card
                  entities:
                    - entity: sensor.plante_hum_pied_elephant
                      color: dodgerblue
              info3: |
                [[[
                  return `<ha-icon
                    icon="mdi:brightness-5"
                    style="width: 20px; height: 20px; color: lightgrey;">
                    </ha-icon><span> Luminosité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_lum_pied_elephant'].state} lx</span></span>`
                ]]]
              jauge_info3:
                card:
                  type: custom:bar-card
                  entities:
                    - entity: sensor.plante_lum_pied_elephant
                      color: gold
              info4: |
                [[[
                  return `<ha-icon
                    icon="mdi:lightning-bolt"
                    style="width: 20px; height: 20px; color: lightgrey;">
                    </ha-icon><span> Fertilité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_fertilite_pied_elephant'].state} µS/cm</span></span>`
                ]]]
              jauge_info4:
                card:
                  type: custom:bar-card
                  entities:
                    - entity: sensor.plante_fertilite_pied_elephant
                      color: green
                      max: 1000
              graph:
                card:
                  type: custom:mini-graph-card
                  entities:
                    - color: rgba(0,191,255,0.3)
                      entity: sensor.plante_hum_pied_elephant
                  line_width: 1
                  lower_bound: 10
                  points_per_hour: 1
                  hours_to_show: 48
                  show:
                    fill: fade
                    icon: false
                    name: false
                    state: false
                    legend: false
                    points: false
                    labels: false
          - type: custom:button-card
            entity: sensor.plante_citro_temp
            name: Citronnier
            icon: mdi:flower-poppy
            label: |
              [[[ return "Citrus limon" ]]]
            show_label: true
            show_last_changed: false
            template:
              - carte_jauge
            styles:
              img_cell:
                - background-color: |
                    [[[
                      if (states['sensor.plante_citro_humidite'].state < 5) return 'dodgerblue'
                      else return 'var(--pastille_off)';
                    ]]]
              icon:
                - color: |
                    [[[
                      if (states['sensor.plante_citro_humidite'].state < 5) return 'var(--icon_on)'
                      else return 'var(--icon_off)';
                    ]]]
              custom_fields:
                info1:
                  - '--text-color-sensor': |
                      [[[
                        if (states['sensor.plante_citro_temp'].state == "unavailable")
                         return 'transparent'
                        if (states['sensor.plante_citro_temp'].state < 5)
                         return 'dodgerblue'
                        return 'lightgrey';
                      ]]]
                info2:
                  - '--text-color-sensor': |
                      [[[
                        if (states['sensor.plante_citro_humidite'].state == "unavailable")
                         return 'transparent'
                        if (states['sensor.plante_citro_humidite'].state < 5)
                         return 'dodgerblue'
                        return 'lightgrey'
                      ]]]
                info3:
                  - '--text-color-sensor': |
                      [[[
                        if (states['sensor.plante_citro_humidite'].state == "unavailable" )
                         return 'transparent'
                        if (states['sensor.plante_citro_humidite'].state < 5)
                         return 'dodgerblue'
                        return 'lightgrey';
                      ]]]
                info4:
                  - '--text-color-sensor': |
                      [[[
                        if (states['sensor.plante_citro_fertilite'].state == "unavailable" )
                         return 'transparent'
                        if (states['sensor.plante_citro_fertilite'].state < 5)
                         return 'dodgerblue'
                        return 'lightgrey';
                      ]]]
            custom_fields:
              info1: |
                [[[
                  return `<ha-icon
                    icon="mdi:thermometer"
                    style="width: 20px; height: 20px; color: lightgrey;">
                    </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.plante_citro_temp'].state} °</span></span>`
                ]]]
              jauge_info1:
                card:
                  type: custom:bar-card
                  entities:
                    - entity: sensor.plante_citro_temp
                      color: tomato
              info2: |
                [[[
                  return `<ha-icon
                    icon="mdi:water"
                    style="width: 20px; height: 20px; color: lightgrey;">
                    </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_citro_humidite'].state} %</span></span>`
                ]]]
              jauge_info2:
                card:
                  type: custom:bar-card
                  entities:
                    - entity: sensor.plante_citro_humidite
                      color: dodgerblue
              info3: |
                [[[
                  return `<ha-icon
                    icon="mdi:brightness-5"
                    style="width: 20px; height: 20px; color: lightgrey;">
                    </ha-icon><span> Luminosité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_citro_lum'].state} lx</span></span>`
                ]]]
              jauge_info3:
                card:
                  type: custom:bar-card
                  entities:
                    - entity: sensor.plante_citro_lum
                      color: gold
              info4: |
                [[[
                  return `<ha-icon
                    icon="mdi:lightning-bolt"
                    style="width: 20px; height: 20px; color: lightgrey;">
                    </ha-icon><span> Fertilité : <span style="color: var(--text-color-sensor);">${states['sensor.plante_citro_fertilite'].state} µS/cm</span></span>`
                ]]]
              jauge_info4:
                card:
                  type: custom:bar-card
                  entities:
                    - entity: sensor.plante_citro_fertilite
                      color: green
                      max: 1000
              graph:
                card:
                  type: custom:mini-graph-card
                  entities:
                    - color: rgba(0,191,255,0.3)
                      entity: sensor.plante_citro_humidite
                  line_width: 1
                  lower_bound: 10
                  points_per_hour: 1
                  hours_to_show: 48
                  show:
                    fill: fade
                    icon: false
                    name: false
                    state: false
                    legend: false
                    points: false
                    labels: false
  - theme: Backend-selected
    subview: true
    title: Réglages
    path: Reglages
    type: custom:horizontal-layout
    layout:
      width: 350
    icon: mdi:cog
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Modes" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: input_boolean.nilemato
                    name: null
                    show_state: true
                    show_last_changed: false
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: automation.annonce_ecole
                    name: Ecole Alexa
                    show_state: true
                    show_last_changed: false
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: input_boolean.belle_saison
                    name: null
                    show_state: true
                    show_last_changed: false
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: input_boolean.piscine
                    name: null
                    show_state: true
                    show_last_changed: false
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: input_boolean.vacances
                    name: null
                    show_state: true
                    show_last_changed: false
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: input_boolean.noel
                    name: null
                    show_state: true
                    show_last_changed: false
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: input_boolean.halloween
                    name: null
                    show_state: true
                    show_last_changed: false
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Afficher / masquer dans activité :" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: input_boolean.sidecar_show_mode
                    name: Modes
                    show_last_changed: false
                    show_state: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: input_boolean.sidecar_show_porte
                    name: Portes
                    show_last_changed: false
                    show_state: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: input_boolean.sidecar_show_mouvement
                    name: Mouvements
                    show_last_changed: false
                    show_state: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: input_boolean.sidecar_show_lumiere
                    name: Lumières
                    show_last_changed: false
                    show_state: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: input_boolean.sidecar_show_autre
                    name: Appareils
                    show_last_changed: false
                    show_state: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: input_boolean.sidecar_show_connecte
                    name: Connectés
                    show_last_changed: false
                    show_state: true
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
              - type: custom:button-card
                template:
                  - titre_section
                name: |
                  [[[ return "Thèmes" ]]]
              - square: false
                columns: 3
                type: grid
                cards:
                  - type: custom:button-card
                    entity: script.theme_jour
                    name: Mad Day
                    show_state: false
                    show_last_changed: false
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: script.theme_nuit
                    name: Mad Night
                    show_state: false
                    show_last_changed: false
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: script.theme_reload
                    name: Refresh
                    show_state: false
                    show_last_changed: false
                    template:
                      - base
                      - base_petite
                      - state_appareil
                    tap_action:
                      action: toggle
  - theme: Backend-selected
    subview: true
    title: Meteo
    path: Meteo
    icon: mdi:weather-partly-cloudy
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - type: custom:button-card
            entity: sensor.weather_temperature
            template:
              - carte_meteo
              - state_temp_exterieur
          - type: custom:meteofrance-weather-card
            entity: weather.beaucouze
            number_of_forecasts: '5'
            name: null
            alert_forecast: false
            details: false
            current: false
            one_hour_forecast: true
            cloudCoverEntity: sensor.beaucouze_cloud_cover
            rainChanceEntity: sensor.beaucouze_rain_chance_2
            uvEntity: sensor.beaucouze_uv_2
            freezeChanceEntity: sensor.beaucouze_freeze_chance_2
            snowChanceEntity: sensor.beaucouze_snow_chance_2
            alertEntity: sensor.49_weather_alert
            rainForecastEntity: sensor.beaucouze_next_rain_2
            style: |
              ha-card {
                font-size: 90%;
                font-family: Avenir;
              }
  - theme: Backend-selected
    title: Air
    path: air
    type: custom:horizontal-layout
    layout:
      width: 350
    subview: true
    icon: mdi:air-filter
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                entity: sensor.moniteur_qualite_air
                name: Qualité de l'air de la maison
                icon: mdi:virus-outline
                show_state: true
                show_label: true
                show_name: true
                template:
                  - base
                  - base_large
                label: |
                  [[[
                    if (entity.state < 200 )
                      return "Excellent ! Rien à signaler"
                    if (entity.state < 3000 )
                      return "Correcte : Irritation ou affectation du bien-être possible"
                    if (entity.state < 2500 )
                      return "Moyenne : L'exposition peut provoquer des effets, maux de tete..."
                    if (entity.state > 2500 )
                      return "Mauvaise : Maux de tête et effets neurotoxiques possibles"
                    return "pas bien"
                  ]]]
                styles:
                  label:
                    - white-space: normal
                    - font-size: 13px
                  custom_fields:
                    graph:
                      - position: absolute
                      - top: 58%
                      - left: 50%
                      - width: calc(100% + 10px)
                      - transform: translate(-50%, calc(-50% + 10px))
                      - z-index: 1
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)"
                      - '--ha-card-box-shadow': none
                state:
                  - value: 200
                    operator: <
                    styles:
                      img_cell:
                        - background-color: var(--pastille_off)
                      icon:
                        - color: var(--icon_off)
                  - value: 3000
                    operator: <
                    styles:
                      img_cell:
                        - background-color: rgb(189,183,107)
                      label:
                        - color: rgb(189,183,107)
                      icon:
                        - color: var(--icon_on)
                  - value: 25000
                    operator: <
                    styles:
                      img_cell:
                        - background-color: tomato
                      label:
                        - color: tomato
                      icon:
                        - color: var(--icon_on)
                  - value: 25000
                    operator: ''
                    styles:
                      card:
                        - background-color: red
                      img_cell:
                        - background-color: red
                      icon:
                        - color: var(--icon_on)
                custom_fields:
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - color: rgba(1,128,0,0.5)
                          entity: sensor.moniteur_qualite_air
                      height: 70
                      line_width: 1
                      lower_bound: 1
                      points_per_hour: 1
                      hours_to_show: 72
                      show:
                        fill: fade
                        icon: false
                        name: false
                        state: false
                        legend: false
                        points: false
                        labels: false
              - type: custom:button-card
                entity: sensor.moniteur_qualite_air
                name: Mesures
                icon: mdi:air-filter
                template:
                  - carte_jauge
                styles:
                  custom_fields:
                    info1:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.moniteur_qualite_air_temperature'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.moniteur_qualite_air_temperature'].state < 19.1)
                             return 'dodgerblue'
                            if (states['sensor.moniteur_qualite_air_temperature'].state > 26.9)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                    info2:
                      - '--text-color-sensor': |
                          [[[
                            if (states['sensor.hum_couloir_rdc'].state == "unavailable")
                             return 'transparent'
                            if (states['sensor.hum_couloir_rdc'].state < 40)
                             return 'dodgerblue'
                            if (states['sensor.hum_couloir_rdc'].state > 80)
                             return 'tomato'
                            return 'lightgrey';
                          ]]]
                custom_fields:
                  pile: |
                    [[[
                      return `<ha-icon
                        icon="mdi:battery"
                        style="width: 15px; height: 15px; color: lightgrey;">
                        </ha-icon><span> <span style="color: var(--text-color-sensor);">${states['sensor.moniteur_qualite_air_batterie'].state} %</span></span>`
                    ]]]
                  info1: |
                    [[[
                      return `<ha-icon
                        icon="mdi:thermometer"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Température : <span style="color: var(--text-color-sensor);">${states['sensor.moniteur_qualite_air_temperature'].state} °</span></span>`
                    ]]]
                  jauge_info1:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.moniteur_qualite_air_temperature
                          color: tomato
                  info2: |
                    [[[
                      return `<ha-icon
                        icon="mdi:water"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Humidité : <span style="color: var(--text-color-sensor);">${states['sensor.moniteur_qualite_air_humidite'].state} %</span></span>`
                    ]]]
                  jauge_info2:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.moniteur_qualite_air_humidite
                          color: dodgerblue
                  info3: |
                    [[[
                      return `<ha-icon
                        icon="mdi:virus-outline"
                        style="width: 20px; height: 20px; color: lightgrey;">
                        </ha-icon><span> Qualité : <span style="color: var(--text-color-sensor);">${states['sensor.moniteur_qualite_air'].state} µg/m³</span></span>`
                    ]]]
                  jauge_info3:
                    card:
                      type: custom:bar-card
                      entities:
                        - entity: sensor.moniteur_qualite_air
                          color: green
                          max: 2500
              - header:
                  title: Graphique
                  show: true
                  show_states: true
                  colorize_states: true
                experimental:
                  brush: true
                graph_span: 72h
                brush:
                  selection_span: 72h
                apex_config:
                  grid:
                    show: false
                  legend:
                    fontSize: 12px
                    height: 40
                  dataLabels:
                    enabled: false
                  stroke:
                    width: 3
                    curve: smooth
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.5
                      opacityTo: 0
                      stops:
                        - - 0
                          - 50
                          - 100
                  tooltip:
                    enabled: true
                  yaxis:
                    - show: true
                      decimalsInFloat: 0
                      labels:
                        style:
                          colors: '#FFB62E'
                          fontSize: 12px
                      forceNiceScale: true
                    - show: true
                      decimalsInFloat: 0
                      opposite: true
                      labels:
                        style:
                          colors: '#2eb9ff'
                          fontSize: 12px
                      forceNiceScale: true
                  xaxis:
                    axisBorder:
                      show: false
                    labels:
                      style:
                        fontSize: 14px
                series:
                  - entity: sensor.moniteur_qualite_air_temperature
                    name: Température
                    show:
                      extremas: false
                    type: area
                    color: tomato
                    fill_raw: last
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: avg
                  - entity: sensor.moniteur_qualite_air_humidite
                    name: Humidité
                    show:
                      extremas: false
                    type: area
                    color: dodgerblue
                    fill_raw: last
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: avg
                  - entity: sensor.moniteur_qualite_air
                    name: Qualité de l'air
                    show:
                      extremas: false
                    type: area
                    color: green
                    fill_raw: last
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: avg
                  - entity: sensor.moniteur_qualite_air
                    name: SdB
                    color: green
                    fill_raw: last
                    type: area
                    stroke_width: 1
                    group_by:
                      duration: 10min
                      func: avg
                    show:
                      in_brush: true
                      in_chart: false
                type: custom:apexcharts-card

