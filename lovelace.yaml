button_card_templates:
  background:
    styles:
      card:
        - background: >-
            linear-gradient(to top, rgba(14,19,28,0.7) 0% ,rgba(25, 35, 54,0.7)
            100%)
  background_meteo:
    styles:
      card:
        - background: |
            [[[
              if (states['sensor.49_weather_alert'].state == 'Vert') return 'linear-gradient(to top, rgba(14,19,28,0.7) 0% ,rgba(32, 44, 69,1) 100%)';
              
              if (states['sensor.49_weather_alert'].state == 'Jaune') return 'linear-gradient(to top, rgba(255,255,0,0.1) 0%, rgba(32, 44, 69,1) 100%';
              
              if (states['sensor.49_weather_alert'].state == 'Orange') return 'linear-gradient(to top, rgba(255,255,165,0.1) 0%, rgba(32, 44, 69,1) 100%)';
              
              if (states['sensor.49_weather_alert'].state == 'Rouge') return 'linear-gradient(to top, rgba(255,0,0,0.1) 0%, rgba(32, 44, 69,1) 100%';
              
            ]]]
  state_unavailable:
    state:
      - value: unavailable
        color: var(--text_off)
        styles:
          card:
            - animation: ball-scale 0.2s
            - border-color: rgba(255, 0, 0, 0.5)
            - opacity: 100%
          img_cell:
            - background-color: black
          icon:
            - color: red
            - transition: 2s ease
          name:
            - color: red
          label:
            - color: red
          state:
            - color: red
  capteur_aspi:
    show_icon: true
    show_name: true
    show_state: true
    show_label: false
    show_last_changed: false
    styles:
      img_cell:
        - background-color: var(--pastille_off)
        - border-radius: 50%
        - place-self: start
        - width: 35px
        - height: 35px
        - margin-top: 30px
      icon:
        - place-self: start
        - width: 80%
      name:
        - color: lightgrey
        - top: 5%
        - left: 8%
        - font-size: 83%
        - font-weight: bold
        - position: absolute
      state:
        - color: lightgrey
        - top: 55%
        - left: 40%
        - font-size: 100%
        - position: absolute
      label:
        - color: darkgrey
        - top: 75%
        - left: 8%
        - font-size: 75%
        - position: absolute
      card:
        - height: 75px
        - padding: 3px
        - padding: 3px
        - font-size: 100%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
    state:
      - value: 'off'
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
          card: null
      - value: 'on'
        styles:
          img_cell:
            - background-color: rgba(255,0,0,0.8)
          name:
            - color: red
            - font-weight: bold
          label:
            - color: red
            - font-weight: bold
          icon:
            - color: var(--icon_on)
          card:
            - border-color: red
      - value: 25
        operator: '>'
        styles:
          icon:
            - color: tomato
      - value: 19
        operator: <
        styles:
          icon:
            - color: dodgerblue
      - value: disarmed
        styles:
          icon:
            - color: var(--icon_off)
          state:
            - color: grey
      - value: armed_away
        styles:
          img_cell:
            - background-color: rgba(255,0,0,0.8)
          icon:
            - color: var(--icon_on)
          state:
            - color: red
            - font-weight: bold
      - value: arming
        styles:
          img_cell:
            - background-color: rgba(255,215,0,0.8)
          icon:
            - color: var(--icon_on)
          state:
            - color: gold
            - font-weight: bold
      - value: triggered
        styles:
          img_cell:
            - background-color: rgba(255,0,0,0.8)
          icon:
            - color: var(--icon_on)
            - animation: blink 1s ease infinite
          state:
            - color: red
            - font-weight: bold
    double_tap_action:
      action: more-info
    tap_action:
      action: more-info
  popup_temp:
    show_icon: true
    show_name: true
    show_state: true
    show_label: false
    show_last_changed: true
    styles:
      img_cell:
        - background-color: var(--pastille_off)
        - border-radius: 50%
        - place-self: start
        - width: 30px
        - height: 30px
        - margin-top: 1px
      icon:
        - place-self: start
        - width: 80%
        - color: var(--icon_off)
      name:
        - color: grey
        - top: 45%
        - left: 08%
        - font-size: 90%
        - font-weight: bold
        - position: absolute
      state:
        - color: lightgrey
        - top: 15%
        - left: 45%
        - font-size: 90%
        - position: absolute
      label:
        - color: darkgrey
        - top: 75%
        - left: 8%
        - font-size: 70%
        - position: absolute
      card:
        - height: 85px
        - padding: 3px
        - padding: 3px
        - font-size: 100%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
    state:
      - value: 24
        operator: '>'
        styles:
          icon:
            - color: tomato
          state:
            - color: tomato
            - font-weight: bold
          name:
            - color: tomato
            - font-weight: bold
          label:
            - color: tomato
            - font-weight: bold
          card:
            - border-color: rgba(178,34,34,0.5)
      - value: 19.5
        operator: <
        styles:
          icon:
            - color: dodgerblue
          state:
            - color: dodgerblue
            - font-weight: bold
          name:
            - color: dodgerblue
            - font-weight: bold
          label:
            - color: dodgerblue
            - font-weight: bold
          card:
            - border-color: rgba(30,144,255,0.5)
    double_tap_action:
      action: more-info
    tap_action:
      action: more-info
  popup_ambiance:
    aspect_ratio: 1/1
    show_icon: true
    show_name: false
    show_state: false
    show_label: false
    styles:
      img_cell:
        - background-color: rgba(70,70,70,0.5)
        - border-radius: 50%
        - width: 40px
        - height: 40px
      icon:
        - width: 70%
      card:
        - border-radius: 50%
        - font-size: 100%
        - transition: none
        - color: rgba(255, 255, 255, 0.3)
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
    state:
      - value: 'off'
        color: grey
        styles:
          card:
            - animation: ball-scale2 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 2s ease
          name:
            - color: var(--text_off)
          label:
            - color: var(--text_off)
  popup_tv:
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    styles:
      img_cell:
        - background-color: var(--pastille_off)
        - border-radius: 50%
        - place-self: start
        - width: 30px
        - height: 30px
        - margin-top: 1px
      icon:
        - width: 70%
        - color: var(--icon_off)
      name:
        - color: grey
        - top: 15%
        - left: 37%
        - font-size: 90%
        - font-weight: bold
        - position: absolute
      state:
        - color: grey
        - top: 40%
        - left: 37%
        - font-size: 90%
        - font-weight: bold
        - position: absolute
      label:
        - color: darkgrey
        - top: 65%
        - left: 37%
        - font-size: 70%
        - font-weight: bold
        - position: absolute
      card:
        - height: 70px
        - padding: 5px
        - font-size: 100%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
      custom_fields:
        circle:
          - top: 4%
          - left: 73%
          - width: 20%
          - position: absolute
          - letter-spacing: 0.03vw
        ac:
          - position: absolute
          - opacity: 50%
          - top: 60%
          - left: 60%
          - width: calc(80% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
    state:
      - value: 'on'
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_multimedia_on)
          img_cell:
            - background-color: var(--pastille_multimedia_on)
          icon:
            - color: var(--icon_on)
            - transition: 2s ease
          name:
            - color: var(--text_on)
          label:
            - color: var(--text_on)
      - value: 'off'
        color: var(--text_off)
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 2s ease
          name:
            - color: var(--text_off)
          label:
            - color: var(--text_off)
  popup_light:
    show_icon: true
    show_name: true
    show_state: false
    show_label: false
    show_last_changed: true
    styles:
      img_cell:
        - background-color: var(--pastille_off)
        - border-radius: 50%
        - place-self: start
        - width: 35px
        - height: 35px
        - margin-top: 1px
      icon:
        - width: 70%
        - color: var(--icon_off)
      name:
        - color: grey
        - top: 15%
        - left: 37%
        - font-size: 90%
        - font-weight: bold
        - position: absolute
      state:
        - color: grey
        - top: 40%
        - left: 37%
        - font-size: 90%
        - font-weight: bold
        - position: absolute
      label:
        - color: darkgrey
        - top: 40%
        - left: 37%
        - font-size: 70%
        - font-weight: bold
        - position: absolute
      card:
        - height: 70px
        - padding: 5px
        - font-size: 100%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
      custom_fields:
        lum:
          - position: absolute
          - top: 65%
          - left: 50%
          - width: calc(90% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
    state:
      - value: 'on'
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--button-card-light-color)
          img_cell:
            - background-color: var(--button-card-light-color)
          icon:
            - color: var(--icon_on)
            - transition: 2s ease
          name:
            - color: var(--text_on)
          label:
            - color: var(--text_on)
      - value: 'off'
        color: grey
        styles:
          card:
            - animation: ball-scale2 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 2s ease
          name:
            - color: var(--text_off)
          label:
            - color: var(--text_off)
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  popup_capteur:
    show_icon: true
    show_name: true
    show_state: true
    show_label: false
    show_last_changed: true
    styles:
      img_cell:
        - background-color: var(--pastille_off)
        - border-radius: 50%
        - place-self: start
        - width: 35px
        - height: 35px
        - margin-top: 1px
      icon:
        - width: 70%
        - color: var(--icon_off)
      name:
        - color: grey
        - top: 15%
        - left: 37%
        - font-size: 90%
        - font-weight: bold
        - position: absolute
      state:
        - color: grey
        - top: 40%
        - left: 37%
        - font-size: 90%
        - font-weight: bold
        - position: absolute
      label:
        - color: darkgrey
        - top: 65%
        - left: 37%
        - font-size: 70%
        - font-weight: bold
        - position: absolute
      card:
        - height: 70px
        - padding: 5px
        - font-size: 100%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
    state:
      - value: 'off'
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
          name:
            - color: var(--text_on)
            - font-weight: bold
      - value: 'on'
        styles:
          card:
            - background-color: var(--mouv)
          img_cell:
            - background-color: var(--mouv)
          name:
            - color: var(--mouv)
            - font-weight: bold
          state:
            - color: var(--mouv)
            - font-weight: bold
          label:
            - color: var(--mouv)
            - font-weight: null
          icon:
            - color: var(--icon_on)
      - value: 25
        operator: '>'
        styles:
          icon:
            - color: tomato
      - value: 19
        operator: <
        styles:
          icon:
            - color: dodgerblue
      - value: disarmed
        styles:
          icon:
            - color: var(--icon_off)
          state:
            - color: grey
      - value: armed_away
        styles:
          img_cell:
            - background-color: rgba(255,0,0,0.8)
          icon:
            - color: var(--icon_on)
          state:
            - color: red
            - font-weight: bold
      - value: arming
        styles:
          img_cell:
            - background-color: rgba(255,215,0,0.8)
          icon:
            - color: var(--icon_on)
          state:
            - color: gold
            - font-weight: bold
      - value: triggered
        styles:
          img_cell:
            - background-color: rgba(255,0,0,0.8)
          icon:
            - color: var(--icon_on)
            - animation: blink 1s ease infinite
          state:
            - color: red
            - font-weight: bold
    double_tap_action:
      action: more-info
    tap_action:
      action: more-info
  bouton_titre_piece:
    show_icon: false
    show_name: true
    show_state: false
    show_label: true
    styles:
      name:
        - font-size: 100%
        - font-weight: bold
        - font-style: null
        - color: lightgrey
        - justify-self: start
      label:
        - font-size: 80%
        - font-weight: null
        - font-style: null
        - color: darkgrey
        - justify-self: start
      card:
        - height: 38px
        - background: transparent
        - box-shadow: none
        - padding: 20px
        - border-radius: 0%
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  bouton_mode:
    aspect_rario: 1/1
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    styles:
      img_cell:
        - background-color: rgba(255,0,0,0.2)
        - border-radius: 50%
        - width: 30px
        - height: 30px
      icon:
        - width: 76%
        - color: var(--icon_off)
      name:
        - font-size: 90%
        - font-weight: bold
      label:
        - font-weight: null
        - font-size: 90%
      card:
        - height: 70px
        - padding: 5px
        - font-size: 100%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 60%
          - top: 8%
          - height: 30%
          - width: 13%
          - font-size: 85%
          - line-height: 167%
          - font-weight: bold
    state:
      - value: 'off'
        color: grey
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
          name:
            - color: var(--text_off)
          label:
            - color: grey
      - value: 'on'
        styles:
          card:
            - background-color: var(--pastille_mode)
          img_cell:
            - background-color: var(--pastille_mode)
          icon:
            - color: var(--icon_on)
            - transition: 2s ease
          name:
            - color: grey
          label:
            - color: lightgrey
    tap_action:
      action: more-info
  bouton_badge:
    show_icon: false
    show_name: false
    show_state: false
    show_label: true
    styles:
      label:
        - justify-self: center
        - padding: 1px
        - font-weight: null
        - font-size: 81%
        - font-weight: bold
        - color: var(--text_on)
      grid:
        - grid-template-areas: '"l"'
      card:
        - border-radius: 18px
        - height: 37px
        - width: auto
        - padding-left: 4px
        - padding-right: 6px
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
    double_tap_action:
      action: more-info
  petit_bouton_rond:
    aspect_ratio: 1/1
    show_icon: true
    show_name: false
    show_state: false
    show_label: false
    styles:
      img_cell:
        - background-color: rgba(70,70,70,0.5)
        - border-radius: 50%
        - width: 35px
        - height: 35px
      icon:
        - width: 75%
      card:
        - box-shadow: var(--card_box_shadow)
        - border-radius: 50%
        - font-size: 110%
        - transition: none
        - color: rgba(255, 255, 255, 0.3)
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 60%
          - top: 50%
          - height: 40%
          - width: 40%
          - font-size: 90%
          - line-height: 165%
          - font-weight: bold
    double_tap_action:
      action: more-info
    state:
      - value: 'off'
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - opacity: 100%
          card:
            - opacity: 100%
      - value: unavailable
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - opacity: 100%
          card:
            - opacity: 100%
      - value: disarmed
        color: grey
        styles:
          img_cell:
            - background-color: var(--pastille_off)
      - value: armed_away
        color: var(--icon_on)
        styles:
          img_cell:
            - background-color: rgba(255,0,0,0.7)
          icon:
            - color: var(--icon_on)
      - value: arming
        color: gold
        styles:
          img_cell:
            - background-color: rgba(255,215,0,0.7)
          icon:
            - animation: blink 1s ease infinite
            - color: var(--icon_on)
      - value: triggered
        color: red
        styles:
          img_cell:
            - background-color: rgba(255,0,0,0.7)
          icon:
            - animation: blink 1s ease infinite
            - color: var(--icon_on)
  bouton_rond:
    aspect_ratio: 1/1
    show_icon: true
    show_name: false
    show_state: false
    show_label: false
    styles:
      img_cell:
        - background-color: rgba(70,70,70,0.5)
        - border-radius: 50%
        - width: 39px
        - height: 39px
      icon:
        - width: 70%
      card:
        - box-shadow: var(--card_box_shadow)
        - border-radius: 70%
        - font-size: 110%
        - transition: none
        - color: rgba(255, 255, 255, 0.2)
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 63%
          - top: 48%
          - height: 30%
          - width: 30%
          - font-size: 85%
          - line-height: 167%
          - font-weight: bold
    double_tap_action:
      action: more-info
    state:
      - value: 'off'
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - opacity: 100%
          card:
            - opacity: 100%
      - value: unavailable
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - opacity: 100%
          card:
            - opacity: 100%
      - value: disarmed
        color: grey
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
      - value: armed_away
        color: var(--icon_on)
        styles:
          card:
            - background-color: rgba(255,0,0,0.5)
          img_cell:
            - background-color: rgba(255,0,0,0.7)
          icon:
            - color: var(--icon_on)
      - value: arming
        color: gold
        styles:
          card:
            - background-color: rgba(255,215,0,0.5)
          img_cell:
            - background-color: rgba(255,215,0,0.7)
          icon:
            - animation: blink 1s ease infinite
            - color: var(--icon_on)
      - value: triggered
        color: red
        styles:
          card:
            - background-color: rgba(255,0,0,0.5)
          img_cell:
            - background-color: rgba(255,0,0,0.7)
          icon:
            - animation: blink 1s ease infinite
            - color: var(--icon_on)
  bouton_batterie:
    show_icon: true
    show_name: true
    show_state: false
    show_label: false
    show_last_changed: true
    styles:
      img_cell:
        - background-color: var(--pastille_off)
        - border-radius: 50%
        - place-self: start
        - width: 35px
        - height: 35px
        - margin-top: 4px
      icon:
        - animation: |
            [[[
              if (entity.state >= "0" && entity.state < 30)
                return "blink 1s ease infinite";
             return "";
            ]]]
        - color: var(--icon_off)
        - place-self: start
        - width: 80%
      name:
        - color: lightgrey
        - top: 60%
        - left: 3%
        - font-size: 85%
        - font-weight: bold
        - position: absolute
      state:
        - color: lightgrey
        - top: 25%
        - left: 42%
        - font-size: 90%
        - position: absolute
      label:
        - color: darkgrey
        - top: 75%
        - left: 3%
        - font-size: 70%
        - position: absolute
      card:
        - height: 100px
        - padding: 3px
        - font-size: 100%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
      custom_fields:
        circle:
          - stroke: |
              [[[
                if (entity.state >= 50)
                  return 'grey';
                if (entity.state < 50)
                  return 'tomato';
                return '';
              ]]]
          - top: 8%
          - left: 60%
          - width: 35%
          - position: absolute
          - letter-spacing: 0.03vw
        graph:
          - position: absolute
          - top: 70%
          - left: 50%
          - width: calc(100% + 25px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 12
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
    state:
      - value: 'on'
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--button-card-light-color)
          icon:
            - color: var(--icon_on)
            - transition: 2s ease
          name:
            - color: var(--text_on)
          label:
            - color: var(--text_on)
      - value: 'off'
        color: grey
        styles:
          card:
            - animation: ball-scale2 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 2s ease
          name:
            - color: var(--text_off)
          label:
            - color: var(--text_off)
    custom_fields:
      graph:
        card:
          type: custom:mini-graph-card
          height: 300
          line_width: 1
          lower_bound: 18
          points_per_hour: 1
          hours_to_show: 24
          show:
            fill: fade
            icon: false
            name: false
            state: false
            legend: false
            points: false
            labels: false
      circle: |
        [[[ if (entity.state != '0' ) {
           ;
           const radius = 20.5; const circumference = radius * 2 * Math.PI; 
           return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="grey" stroke-width="1.5" fill="none" style="
           transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - entity.state / 90 * circumference};" />
           <text x="50%" y="54%" fill="lightgrey" font-size="15" text-anchor="middle" alignment-baseline="middle">${entity.state}°<tspan font-size="10"></tspan></text></svg>`; } ]]]
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  bouton_systeme:
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    styles:
      img_cell:
        - border-radius: 50%
        - place-self: start
        - width: 37px
        - height: 37px
        - margin-left: 2%
        - margin-top: 0%
      icon:
        - color: var(--icon_off)
        - place-self: start
        - width: 75%
      name:
        - color: var(--text_off)
        - top: 33%
        - left: 6%
        - font-size: 100%
        - font-weight: bold
        - position: absolute
      state:
        - top: 7%
        - left: 11%
        - position: absolute
      card:
        - height: 135px
        - font-size: 100%
        - transition: none
        - color: >
            [[[ return (entity.state === 'on' || entity.state === 'home') ?
            'rgba(0, 0, 0, 0.6)' : 'rgba(255, 255, 255, 0.3)'; ]]]
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
      custom_fields:
        ic:
          - position: absolute
          - top: 2%
          - left: 110%
          - width: calc(55% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
          - opacity: 100%
        graph:
          - position: absolute
          - top: 70%
          - left: 50%
          - width: calc(100% + 25px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 12
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
        circle:
          - top: 17%
          - left: 66.2%
          - width: 27%
          - position: absolute
          - letter-spacing: 0.03vw
        info1:
          - font-size: 11px
          - color: var(--text_systeme_info)
          - top: 55%
          - left: 3.2%
          - position: absolute
          - width: null
        info2:
          - font-size: 11px
          - color: var(--text_systeme_info)
          - top: 65%
          - left: 3.2%
          - width: null
          - position: absolute
        info3:
          - font-size: 11px
          - color: var(--text_systeme_info)
          - top: 75%
          - left: 3.2%
          - width: null
          - position: absolute
        info4:
          - font-size: 11px
          - color: var(--text_systeme_info)
          - top: 85%
          - left: 3.2%
          - width: null
          - position: absolute
  bouton_person:
    show_entity_picture: true
    show_icon: false
    show_name: false
    show_state: false
    show_label: true
    styles:
      entity_picture:
        - border-radius: 50%
        - top: 4%
        - left: 0%
        - width: 42%
        - color: gray
        - opacity: 70%
      name:
        - top: 5%
        - left: 8%
        - position: absolute
        - color: grey
        - font-size: 90%
      state:
        - top: 7%
        - left: 5%
        - font-size: 80%
        - position: absolute
      label:
        - font-size: 90%
        - font-weight: bold
        - top: 51%
        - left: 5%
        - position: absolute
      card:
        - height: 110px
        - padding: 5px
        - font-size: 100%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
      custom_fields:
        heure:
          - font-size: 80%
          - top: 69%
          - left: 5%
          - color: grey
          - position: absolute
        batterie:
          - font-size: 85%
          - top: 8%
          - left: 70%
          - position: absolute
          - color: lightgrey
        icon_batterie:
          - width: 23%
          - top: 20%
          - left: 70%
          - position: absolute
    state:
      - value: home
        operator: '!='
        styles:
          card:
            - background-color: var(--back_person)
    double_tap_action:
      action: more-info
  effet:
    extra_styles: |
      @keyframes ball-scale {
        from {
          transform: scale(1);
        }
        to {
          transform: scale(0.90);
        }
      }
      @keyframes ball-scale2 {
        from {
          transform: scale(1);
        }
        to {
          transform: scale(0.90);
        }
      }

      @keyframes ball-scale2 {
        from {
          transform: scale(1);
        }
        to {
          transform: scale(0.90);
        }
      }
      @keyframes ball-scale2 {
        from {
          transform: scale(1);
        }
        to {
          transform: scale(0.90);
        }
      }
  bouton_piece:
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    styles:
      img_cell:
        - background-color: rgba(70,70,70,0.5)
        - border-radius: 50%
        - place-self: start
        - width: 37px
        - height: 37px
        - margin-top: 4px
      icon:
        - place-self: start
        - width: 80%
      name:
        - top: 13%
        - left: 30%
        - font-size: 100%
        - font-weight: null
        - position: absolute
      state:
        - color: lightgrey
        - top: 45%
        - left: 50%
        - font-size: 90%
        - position: absolute
      label:
        - top: 34%
        - left: 30%
        - font-weight: bold
        - font-size: 90%
        - position: absolute
      card:
        - height: 88px
        - padding: 3px
        - font-size: 100%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
        - animation: ball-scale 0.2s
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 2%
          - top: 39%
          - height: 20%
          - width: 10%
          - font-size: 85%
          - line-height: 167%
          - font-weight: bold
        lum:
          - position: absolute
          - top: 70%
          - left: 50%
          - width: calc(90% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
        porte:
          - position: absolute
          - top: 2%
          - left: 90%
          - width: calc(20% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
        graph:
          - position: absolute
          - top: 95%
          - left: 50%
          - width: calc(120% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 12
          - '--paper-card-background-color': rgba(0, 0, 0, 0)
          - '--ha-card-background': rgba(0, 0, 0, 0)"
          - '--ha-card-box-shadow': none
          - pointer-events: none
        graph_fixe:
          - position: absolute
          - top: 95%
          - left: 50%
          - width: calc(120% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 12
          - '--paper-card-background-color': rgba(0, 0, 0, 0)
          - '--ha-card-background': rgba(0, 0, 0, 0)"
          - '--ha-card-box-shadow': none
          - pointer-events: none
    state:
      - value: 'on'
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--button-card-light-color)
          img_cell:
            - background-color: var(--button-card-light-color)
          icon:
            - color: var(--icon_on)
            - transition: 2s ease
          name:
            - color: var(--text_on)
      - value: 'off'
        color: grey
        styles:
          card:
            - animation: ball-scale2 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 2s ease
          name:
            - color: var(--text_off)
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  bouton_piece_graph:
    custom_fields:
      graph:
        card:
          type: conditional
          card:
            type: custom:mini-graph-card
            height: 300
            line_width: 4
            lower_bound: 18
            points_per_hour: 1
            hours_to_show: 24
            show:
              fill: fade
              icon: false
              name: false
              state: false
              legend: false
              points: false
              labels: false
  bouton_piece_graph_fixe:
    custom_fields:
      graph_fixe:
        card:
          type: custom:mini-graph-card
          height: 300
          line_width: 4
          lower_bound: 18
          points_per_hour: 1
          hours_to_show: 24
          show:
            fill: fade
            icon: false
            name: false
            state: false
            legend: false
            points: false
            labels: false
  bouton_securite:
    double_tap_action:
      action: more-info
    aspect_ratio: 1/1
    show_icon: true
    show_name: true
    show_state: true
    show_label: false
    styles:
      img_cell:
        - background-color: rgba(255,0,0,0.2)
        - border-radius: 50%
        - place-self: start
        - width: 40px
        - height: 40px
        - margin-top: 1px
      icon:
        - place-self: start
        - width: 80%
      name:
        - top: 30%
        - left: 4%
        - font-size: 100%
        - font-weight: bold
        - position: absolute
      state:
        - color: lightgrey
        - top: 45%
        - left: 4%
        - font-size: 100%
        - position: absolute
      label:
        - color: lightgrey
        - top: 40%
        - left: 26%
        - font-weight: bold
        - font-size: 80%
        - position: absolute
      card:
        - padding: 5px
        - font-size: 100%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
      custom_fields:
        alarme_heure:
          - top: 4%
          - left: 40%
          - color: grey
          - font-weight: bold
          - font-size: 90%
          - position: absolute
        batterie:
          - top: 4%
          - left: 70%
          - width: 28%
          - position: absolute
          - letter-spacing: 0.03vw
        ic:
          - opacity: 90%
          - position: absolute
          - top: 70%
          - left: 50%
          - width: calc(110% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
    state:
      - value: disarmed
        color: grey
        styles:
          img_cell:
            - background-color: var(--pastille_off)
          state:
            - color: var(--text_off)
          name:
            - color: var(--text_off)
          icon:
            - color: var(--icon_off)
      - value: armed_away
        color: red
        styles:
          card:
            - background-color: var(--back_securite)
          img_cell:
            - background-color: rgba(255,0,0,0.7)
          state:
            - color: red
            - font-weight: bold
          icon:
            - color: var(--icon_on)
      - value: arming
        color: gold
        styles:
          img_cell:
            - background-color: var(--back_securite)
          icon:
            - animation: blink 1s ease infinite
            - color: var(--icon_on)
          state:
            - color: tomato
      - value: triggered
        color: red
        styles:
          img_cell:
            - background-color: var(--back_securite)
          state:
            - color: red
          icon:
            - animation: blink 1s ease infinite
            - color: var(--icon_on)
  bouton_multimedia:
    double_tap_action:
      action: toggle
    aspect_ratio: 1/1
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    styles:
      img_cell:
        - background-color: rgba(255,0,0,0.2)
        - border-radius: 50%
        - place-self: start
        - width: 50px
        - height: 50px
        - margin-top: 4px
      icon:
        - place-self: start
        - width: 80%
      name:
        - top: 40%
        - left: 6%
        - font-size: 100%
        - font-weight: bold
        - position: absolute
      state:
        - color: lightgrey
        - top: 50%
        - left: 6%
        - font-size: 90%
        - position: absolute
      label:
        - color: lightgrey
        - top: 50%
        - left: 6%
        - font-weight: bold
        - font-size: 90%
        - position: absolute
      card:
        - padding: 5px
        - font-size: 100%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 33%
          - top: 10%
          - height: 15%
          - width: 15%
          - font-size: 100%
          - line-height: 117%
          - font-weight: bold
        circle:
          - top: 4%
          - left: 66.2%
          - width: 30%
          - position: absolute
          - letter-spacing: 0.03vw
          - stroke: |
              [[[
                if (entity.state < 49)
                  return 'grey';
                if (entity.state > 49)
                  return 'tomato';
                return '';
              ]]]
        ac:
          - position: absolute
          - opacity: 50%
          - top: 70%
          - left: 65%
          - width: calc(100% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
    state:
      - value: 'on'
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_multimedia_on)
          img_cell:
            - background-color: var(--pastille_multimedia_on)
          icon:
            - color: var(--icon_on)
            - transition: 2s ease
          name:
            - color: var(--text_on)
      - value: playing
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_multimedia_on)
          img_cell:
            - background-color: var(--pastille_multimedia_on)
          icon:
            - color: var(--icon_on)
            - transition: 2s ease
          name:
            - color: var(--text_on)
      - value: 'off'
        color: grey
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 2s ease
          name:
            - color: var(--text_off)
          label:
            - color: var(--text_off)
  bouton_appareil:
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    styles:
      img_cell:
        - background-color: rgba(255,0,0,0.2)
        - border-radius: 50%
        - place-self: start
        - width: 40px
        - height: 40px
        - margin-top: 5px
      icon:
        - place-self: start
        - width: 76%
        - color: var(--icon_off)
      name:
        - top: 19%
        - left: 32%
        - font-size: 100%
        - font-weight: bold
        - position: absolute
      state:
        - color: lightgrey
        - top: 34%
        - left: 48%
        - font-size: 90%
        - position: absolute
      label:
        - top: 38%
        - left: 32%
        - font-weight: null
        - font-size: 90%
        - position: absolute
      card:
        - height: 88px
        - padding: 5px
        - font-size: 100%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
      custom_fields:
        circle:
          - top: 4%
          - left: 73%
          - width: 25%
          - position: absolute
          - letter-spacing: 0.03vw
          - stroke: |
              [[[
                if (entity.state < 49)
                  return 'grey';
                if (entity.state > 49)
                  return 'tomato';
                return '';
              ]]]
        circle_lav:
          - top: 4%
          - left: 73%
          - width: 25%
          - position: absolute
          - letter-spacing: 0.03vw
          - stroke: |
              [[[
                if (states['sensor.lave_vaisselle_program_progress'].state < 49)
                  return 'grey';
                if (states['sensor.lave_vaisselle_program_progress'].state > 49)
                  return 'tomato';
                return '';
              ]]]
        batterie:
          - top: 4%
          - left: 80%
          - color: |
              [[[
                if (entity.state == 'cleaning')
                  return 'lightgrey';
                if (entity.state == 'on')
                  return 'lightgrey';
               return 'grey';
              ]]]
          - font-weight: null
          - font-size: 80%
          - position: absolute
        ic:
          - position: absolute
          - top: 70%
          - left: 50%
          - width: calc(90% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
        ac:
          - position: absolute
          - opacity: 50%
          - top: 70%
          - left: 65%
          - width: calc(100% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
    state:
      - value: 'on'
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_appareil)
          img_cell:
            - background-color: var(--pastille_appareil)
          icon:
            - color: var(--icon_on)
            - transition: 2s ease
          name:
            - color: var(--text_on)
          label:
            - color: var(--text_on)
  bouton_tv:
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    styles:
      img_cell:
        - background-color: rgba(255,0,0,0.2)
        - border-radius: 50%
        - place-self: start
        - width: 40px
        - height: 40px
        - margin-top: 5px
      icon:
        - place-self: start
        - width: 76%
        - color: var(--icon_off)
      name:
        - top: 19%
        - left: 32%
        - font-size: 100%
        - font-weight: bold
        - position: absolute
      state:
        - color: lightgrey
        - top: 34%
        - left: 48%
        - font-size: 90%
        - position: absolute
      label:
        - top: 34%
        - left: 32%
        - font-weight: null
        - font-size: 90%
        - position: absolute
      card:
        - height: 110px
        - padding: 5px
        - font-size: 100%
        - border-color: var(--card_border)
        - border-style: outset
        - border-width: 1px
        - box-shadow: var(--card_box_shadow)
      custom_fields:
        circle:
          - top: 4%
          - left: 73%
          - width: 25%
          - position: absolute
          - letter-spacing: 0.03vw
          - stroke: |
              [[[
                if (entity.state < 49)
                  return 'grey';
                if (entity.state > 49)
                  return 'tomato';
                return '';
              ]]]
        batterie:
          - top: 4%
          - left: 75%
          - color: |
              [[[
                if (entity.state == 'cleaning')
                  return 'lightgrey';
                if (entity.state == 'on')
                  return 'lightgrey';
               return 'grey';
              ]]]
          - font-weight: null
          - font-size: 100%
          - position: absolute
        ic:
          - position: absolute
          - top: 70%
          - left: 50%
          - width: calc(90% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
        ac:
          - position: absolute
          - opacity: 50%
          - top: 70%
          - left: 65%
          - width: calc(100% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
    state:
      - value: 'on'
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_multimedia_on)
          img_cell:
            - background-color: var(--pastille_multimedia_on)
          icon:
            - color: var(--icon_on)
            - transition: 2s ease
          name:
            - color: var(--text_on)
          label:
            - color: var(--text_on)
      - value: 'off'
        color: var(--text_off)
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 2s ease
          name:
            - color: var(--text_off)
          label:
            - color: var(--text_off)
  bouton_appareil_imprimante_state:
    state:
      - value: 0
        operator: '>='
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_imprim)
          img_cell:
            - background-color: var(--pastille_imprim)
          icon:
            - color: var(--icon_on)
            - transition: 2s ease
          name:
            - color: var(--text_on)
          label:
            - color: var(--text_on)
      - value: unavailable
        color: var(--text_off)
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 2s ease
          name:
            - color: var(--text_off)
          label:
            - color: var(--text_off)
  bouton_appareil_lave_state:
    state:
      - value: 'on'
        styles:
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_lave_on)
          img_cell:
            - background-color: var(--pastille_lave_on)
          icon:
            - color: var(--icon_on)
            - transition: 2s ease
          name:
            - color: var(--text_on)
          label:
            - color: var(--text_on)
      - value: 'off'
        color: var(--text_off)
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
            - transition: 2s ease
          name:
            - color: var(--text_off)
          label:
            - color: var(--text_off)
      - value: unavailable
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: firebrick
            - transition: 2s ease
          name:
            - color: var(--text_off)
  bouton_appareil_aspi_state:
    state:
      - value: cleaning
        styles:
          icon:
            - animation: rotating 4s ease infinite
            - color: var(--icon_on)
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_aspi_on)
          img_cell:
            - background-color: var(--pastille_aspi_on)
          name:
            - color: var(--text_on)
          label:
            - color: var(--text_on)
      - value: returning
        styles:
          icon:
            - animation: rotating 4s ease infinite
            - color: var(--icon_on)
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_aspi_on)
          img_cell:
            - background-color: var(--pastille_aspi_on)
          name:
            - color: var(--text_on)
          label:
            - color: var(--text_on)
      - value: idle
        styles:
          icon:
            - color: var(--icon_on)
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_aspi_on)
          img_cell:
            - background-color: var(--pastille_aspi_on)
          name:
            - color: var(--text_on)
          label:
            - color: red
            - font-weight: bold
      - value: paused
        styles:
          icon:
            - color: var(--icon_on)
          card:
            - animation: ball-scale 0.2s
            - background-color: var(--pastille_aspi_on)
          img_cell:
            - background-color: var(--pastille_aspi_on)
          name:
            - color: var(--text_on)
          label:
            - color: red
            - font-weight: bold
      - value: docked
        color: grey
        styles:
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          icon:
            - color: var(--icon_off)
          name:
            - color: var(--text_off)
          label:
            - color: var(--text_off)
      - value: unavailable
        styles:
          icon:
            - animation: blink 0.8s ease infinite
            - color: firebrick
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          name:
            - color: var(--text_off)
          label:
            - color: var(--text_off)
      - value: error
        styles:
          icon:
            - animation: blink 1s ease infinite
            - color: firebrick
          card:
            - animation: ball-scale 0.2s
          img_cell:
            - background-color: var(--pastille_off)
          name:
            - color: firebrick
          label:
            - color: firebrick
    tap_action:
      action: more-info
    double_tap_action:
      action: navigate
      navigation_path: /lovelace/1
title: Chez On
views:
  - icon: mdi:home
    visible:
      - user: 76afcf1927a948b19530bcbf1074ac59
      - user: 2f0040afe95a4514ade3c049a0b5d479
      - user: d8316597eafd4333b737464a5b4c62d0
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - cards:
              - type: vertical-stack
                cards:
                  - type: horizontal-stack
                    cards:
                      - type: custom:button-card
                        entity: sensor.compteur_home
                        name: presents
                        template:
                          - bouton_badge
                        label: |
                          [[[
                            if (entity.state == 'unavailable')
                              return "👤 indispo" ;
                            return "👤 " + (entity.state ) ;
                          ]]]
                        state:
                          - value: 0
                            styles:
                              card:
                                - background-color: rgba(255,0,0,1)
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Personnes
                            card:
                              type: vertical-stack
                              cards:
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: person.herve
                                      name: Aurel
                                      template:
                                        - bouton_person
                                        - effet
                                      label: |
                                        [[[
                                          return states['sensor.aurel_gps'].state
                                        ]]]
                                      styles:
                                        label:
                                          - color: |
                                              [[[
                                                if (states['person.herve'].state == "home")
                                                  return 'darkgrey';
                                                if (states['person.herve'].state == "Salle de sport")
                                                  return 'darkgrey';
                                                if (states['person.herve'].state == "Hopital")
                                                  return 'darkgrey';
                                                if (states['person.herve'].state == "Travail")
                                                  return 'darkgrey';
                                               if (states['person.herve'].state == "Collège")
                                                  return 'darkgrey';
                                                return 'red';
                                              ]]]
                                        custom_fields:
                                          icon_batterie:
                                            - color: |
                                                [[[
                                                  if (states['sensor.iphone_aurel_battery_state'].state == "Charging")
                                                    return 'gold';
                                                  if (states['sensor.iphone_aurel_battery_state'].state == "Charged")
                                                    return 'red';
                                                  if (states['sensor.iphone_aurel_battery_level'].state > 80)
                                                    return 'darkgrey';
                                                  if (states['sensor.iphone_aurel_battery_level'].state > 60)
                                                    return 'darkgrey';
                                                  if (states['sensor.iphone_aurel_battery_level'].state > 50)
                                                    return 'tomato';
                                                  if (states['sensor.iphone_aurel_battery_level'].state > 30)
                                                    return 'red';
                                                  if (states['sensor.iphone_aurel_battery_level'].state > 0)
                                                    return 'red';
                                                  return 'red';
                                                ]]]
                                      custom_fields:
                                        batterie: >
                                          [[[ return
                                          states['sensor.iphone_aurel_battery_level'].state
                                          + "%" ]]]
                                        icon_batterie: |
                                          [[[
                                            if (states['sensor.iphone_aurel_battery_state'].state == "Charging")
                                              return '<ha-icon icon="phu:battery-charged">';
                                            if (states['sensor.iphone_aurel_battery_state'].state == "Charged")
                                              return '<ha-icon icon="phu:battery-charged">';
                                            if (states['sensor.iphone_aurel_battery_state'].state > 80)
                                              return '<ha-icon icon="phu:battery-full">';
                                            if (states['sensor.iphone_aurel_battery_state'].state > 70)
                                              return '<ha-icon icon="phu:battery-good">';
                                            if (states['sensor.iphone_aurel_battery_state'].state > 50)
                                              return '<ha-icon icon="phu:battery-half">';
                                            if (states['sensor.iphone_aurel_battery_state'].state > 30)
                                              return '<ha-icon icon="phu:battery-low">';
                                            if (states['sensor.iphone_aurel_battery_state'].state > 0)
                                              return '<ha-icon icon="phu:battery-critical">';
                                            return '<ha-icon icon="phu:battery-full">';
                                          ]]]
                                        heure: >
                                          [[[ return
                                          states['sensor.aurel_heure'].state ]]]
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          command: popup
                                          title: Aurel
                                          card:
                                            type: custom:vertical-stack-in-card
                                            cards:
                                              - type: entities
                                                entities:
                                                  - entity: person.herve
                                                  - entity: person.alex
                                                  - entity: person.tom
                                              - aspect_ratio: '1:1'
                                                dark_mode: true
                                                default_zoom: 17
                                                entities:
                                                  - entity: person.herve
                                                  - entity: person.alex
                                                  - entity: person.tom
                                                hours_to_show: 12
                                                type: map
                                              - header:
                                                  title: 📱iPhone ️
                                                  show: true
                                                  show_states: true
                                                  colorize_states: true
                                                experimental:
                                                  brush: true
                                                graph_span: 72h
                                                brush:
                                                  selection_span: 12h
                                                apex_config:
                                                  grid:
                                                    show: false
                                                  legend:
                                                    fontSize: 12px
                                                    height: 40
                                                  dataLabels:
                                                    enabled: false
                                                  stroke:
                                                    width: 3
                                                    curve: smooth
                                                  fill:
                                                    type: gradient
                                                    gradient:
                                                      type: vertical
                                                      shadeIntensity: 0.8
                                                      inverseColors: false
                                                      opacityFrom: 0.5
                                                      opacityTo: 0
                                                      stops:
                                                        - - 0
                                                          - 50
                                                          - 100
                                                  tooltip:
                                                    enabled: true
                                                  yaxis:
                                                    - show: true
                                                      decimalsInFloat: 0
                                                      labels:
                                                        style:
                                                          colors: '#FFB62E'
                                                          fontSize: 12px
                                                      forceNiceScale: true
                                                    - show: true
                                                      decimalsInFloat: 0
                                                      opposite: true
                                                      labels:
                                                        style:
                                                          colors: '#2eb9ff'
                                                          fontSize: 12px
                                                      forceNiceScale: true
                                                  xaxis:
                                                    axisBorder:
                                                      show: false
                                                    labels:
                                                      style:
                                                        fontSize: 14px
                                                series:
                                                  - entity: sensor.iphone_aurel_battery_level
                                                    name: Aurel
                                                    show:
                                                      extremas: false
                                                    type: area
                                                    color: grey
                                                    fill_raw: last
                                                    float_precision: 1
                                                    group_by:
                                                      duration: 10min
                                                      func: avg
                                                  - entity: sensor.alex_iphone_battery_level_ha
                                                    name: Alex
                                                    show:
                                                      extremas: false
                                                    type: area
                                                    color: purple
                                                    fill_raw: last
                                                    float_precision: 1
                                                    group_by:
                                                      duration: 10min
                                                      func: avg
                                                  - entity: sensor.iphone_aurel_battery_level
                                                    name: Aurel
                                                    color: dodgerblue
                                                    fill_raw: last
                                                    type: area
                                                    stroke_width: 1
                                                    group_by:
                                                      duration: 10min
                                                      func: avg
                                                    show:
                                                      in_brush: true
                                                      in_chart: false
                                                card_mod:
                                                  style: |
                                                    ha-card {
                                                    background-color: black;
                                                    }
                                                type: custom:apexcharts-card
                                    - type: custom:button-card
                                      entity: person.alex
                                      name: Alex
                                      template:
                                        - bouton_person
                                        - effet
                                      label: |
                                        [[[
                                          return states['sensor.alex_gps'].state
                                        ]]]
                                      styles:
                                        label:
                                          - color: |
                                              [[[
                                                if (states['person.alex'].state == "home")
                                                  return 'darkgrey';
                                                if (states['person.alex'].state == "Salle de sport")
                                                  return 'darkgrey';
                                                if (states['person.alex'].state == "Travail")
                                                  return 'darkgrey';
                                                if (states['person.alex'].state == "Collège")
                                                  return 'darkgrey';
                                                if (states['person.alex'].state == "Complexe sportif")
                                                  return 'darkgrey';
                                                if (states['person.alex'].state == "Atoll")
                                                  return 'darkgrey';
                                                return 'red';
                                              ]]]
                                        custom_fields:
                                          icon_batterie:
                                            - color: |
                                                [[[
                                                  if (states['sensor.alex_iphone_battery_state_ha'].state == "Charging")
                                                    return 'gold';
                                                  if (states['sensor.alex_iphone_battery_state_ha'].state == "Charged")
                                                    return 'red';
                                                  if (states['sensor.alex_iphone_battery_level_ha'].state > 80)
                                                    return 'darkgrey';
                                                  if (states['sensor.alex_iphone_battery_level_ha'].state > 60)
                                                    return 'darkgrey';
                                                  if (states['sensor.alex_iphone_battery_level_ha'].state > 50)
                                                    return 'tomato';
                                                  if (states['sensor.alex_iphone_battery_level_ha'].state > 30)
                                                    return 'red';
                                                  if (states['sensor.alex_iphone_battery_level_ha'].state > 0)
                                                    return 'red';
                                                  return 'red';
                                                ]]]
                                      custom_fields:
                                        batterie: >
                                          [[[ return
                                          states['sensor.alex_iphone_battery_level_ha'].state
                                          + "%" ]]]
                                        icon_batterie: |
                                          [[[
                                            if (states['sensor.alex_iphone_battery_state_ha'].state == "Charging")
                                              return '<ha-icon icon="phu:battery-charged">';
                                            if (states['sensor.alex_iphone_battery_state_ha'].state == "Charged")
                                              return '<ha-icon icon="phu:battery-charged">';
                                            if (states['sensor.alex_iphone_battery_level_ha'].state > 80)
                                              return '<ha-icon icon="phu:battery-full">';
                                            if (states['sensor.alex_iphone_battery_level_ha'].state > 70)
                                              return '<ha-icon icon="phu:battery-good">';
                                            if (states['sensor.alex_iphone_battery_level_ha'].state > 50)
                                              return '<ha-icon icon="phu:battery-half">';
                                            if (states['sensor.alex_iphone_battery_level_ha'].state > 30)
                                              return '<ha-icon icon="phu:battery-low">';
                                            if (states['sensor.alex_iphone_battery_level_ha'].state > 0)
                                              return '<ha-icon icon="phu:battery-critical">';
                                            return '<ha-icon icon="phu:battery-full">';
                                          ]]]
                                        heure: >
                                          [[[ return
                                          states['sensor.alex_heure'].state ]]]
                                      double_tap_action:
                                        action: more-info
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          command: popup
                                          title: Alex
                                          card:
                                            type: custom:vertical-stack-in-card
                                            cards:
                                              - type: entities
                                                entities:
                                                  - entity: person.herve
                                                  - entity: person.alex
                                                  - entity: person.tom
                                              - aspect_ratio: '1:1'
                                                dark_mode: true
                                                default_zoom: 17
                                                entities:
                                                  - entity: person.herve
                                                  - entity: person.alex
                                                  - entity: person.tom
                                                hours_to_show: 12
                                                type: map
                                              - header:
                                                  title: 📱iPhone ️
                                                  show: true
                                                  show_states: true
                                                  colorize_states: true
                                                experimental:
                                                  brush: true
                                                graph_span: 72h
                                                brush:
                                                  selection_span: 12h
                                                apex_config:
                                                  grid:
                                                    show: false
                                                  legend:
                                                    fontSize: 12px
                                                    height: 40
                                                  dataLabels:
                                                    enabled: false
                                                  stroke:
                                                    width: 3
                                                    curve: smooth
                                                  fill:
                                                    type: gradient
                                                    gradient:
                                                      type: vertical
                                                      shadeIntensity: 0.8
                                                      inverseColors: false
                                                      opacityFrom: 0.5
                                                      opacityTo: 0
                                                      stops:
                                                        - - 0
                                                          - 50
                                                          - 100
                                                  tooltip:
                                                    enabled: true
                                                  yaxis:
                                                    - show: true
                                                      decimalsInFloat: 0
                                                      labels:
                                                        style:
                                                          colors: '#FFB62E'
                                                          fontSize: 12px
                                                      forceNiceScale: true
                                                    - show: true
                                                      decimalsInFloat: 0
                                                      opposite: true
                                                      labels:
                                                        style:
                                                          colors: '#2eb9ff'
                                                          fontSize: 12px
                                                      forceNiceScale: true
                                                  xaxis:
                                                    axisBorder:
                                                      show: false
                                                    labels:
                                                      style:
                                                        fontSize: 14px
                                                series:
                                                  - entity: sensor.iphone_aurel_battery_level
                                                    name: Aurel
                                                    show:
                                                      extremas: false
                                                    type: area
                                                    color: grey
                                                    fill_raw: last
                                                    float_precision: 1
                                                    group_by:
                                                      duration: 10min
                                                      func: avg
                                                  - entity: sensor.alex_iphone_battery_level_ha
                                                    name: Alex
                                                    show:
                                                      extremas: false
                                                    type: area
                                                    color: purple
                                                    fill_raw: last
                                                    float_precision: 1
                                                    group_by:
                                                      duration: 10min
                                                      func: avg
                                                  - entity: sensor.iphone_aurel_battery_level
                                                    name: Aurel
                                                    color: dodgerblue
                                                    fill_raw: last
                                                    type: area
                                                    stroke_width: 1
                                                    group_by:
                                                      duration: 10min
                                                      func: avg
                                                    show:
                                                      in_brush: true
                                                      in_chart: false
                                                card_mod:
                                                  style: |
                                                    ha-card {
                                                    background-color: black;
                                                    }
                                                type: custom:apexcharts-card
                                    - type: custom:button-card
                                      entity: person.tom
                                      name: Tom
                                      template:
                                        - bouton_person
                                        - effet
                                      label: |
                                        [[[
                                          return states['sensor.tom_gps'].state
                                        ]]]
                                      styles:
                                        label:
                                          - color: |
                                              [[[
                                                if (states['person.tom'].state == "home")
                                                  return 'darkgrey';
                                                if (states['person.tom'].state == "not_home")
                                                  return 'red';
                                                return 'red';
                                              ]]]
                                        card:
                                          - opacity: |
                                              [[[
                                                if (states['input_boolean.nilemato'].state == "off")
                                                  return '100%';
                                                return '100%';
                                              ]]]
                                      custom_fields:
                                        heure: >
                                          [[[ return
                                          states['sensor.tom_heure'].state ]]]
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          command: popup
                                          title: Tom
                                          card:
                                            type: custom:vertical-stack-in-card
                                            cards:
                                              - type: entities
                                                entities:
                                                  - entity: person.herve
                                                  - entity: person.alex
                                                  - entity: person.tom
                                              - aspect_ratio: '1:1'
                                                dark_mode: true
                                                default_zoom: 17
                                                entities:
                                                  - entity: person.herve
                                                  - entity: person.alex
                                                  - entity: person.tom
                                                hours_to_show: 12
                                                type: map
                                              - header:
                                                  title: 📱iPhone ️
                                                  show: true
                                                  show_states: true
                                                  colorize_states: true
                                                experimental:
                                                  brush: true
                                                graph_span: 72h
                                                brush:
                                                  selection_span: 12h
                                                apex_config:
                                                  grid:
                                                    show: false
                                                  legend:
                                                    fontSize: 12px
                                                    height: 40
                                                  dataLabels:
                                                    enabled: false
                                                  stroke:
                                                    width: 3
                                                    curve: smooth
                                                  fill:
                                                    type: gradient
                                                    gradient:
                                                      type: vertical
                                                      shadeIntensity: 0.8
                                                      inverseColors: false
                                                      opacityFrom: 0.5
                                                      opacityTo: 0
                                                      stops:
                                                        - - 0
                                                          - 50
                                                          - 100
                                                  tooltip:
                                                    enabled: true
                                                  yaxis:
                                                    - show: true
                                                      decimalsInFloat: 0
                                                      labels:
                                                        style:
                                                          colors: '#FFB62E'
                                                          fontSize: 12px
                                                      forceNiceScale: true
                                                    - show: true
                                                      decimalsInFloat: 0
                                                      opposite: true
                                                      labels:
                                                        style:
                                                          colors: '#2eb9ff'
                                                          fontSize: 12px
                                                      forceNiceScale: true
                                                  xaxis:
                                                    axisBorder:
                                                      show: false
                                                    labels:
                                                      style:
                                                        fontSize: 14px
                                                series:
                                                  - entity: sensor.iphone_aurel_battery_level
                                                    name: Aurel
                                                    show:
                                                      extremas: false
                                                    type: area
                                                    color: grey
                                                    fill_raw: last
                                                    float_precision: 1
                                                    group_by:
                                                      duration: 10min
                                                      func: avg
                                                  - entity: sensor.alex_iphone_battery_level_ha
                                                    name: Alex
                                                    show:
                                                      extremas: false
                                                    type: area
                                                    color: purple
                                                    fill_raw: last
                                                    float_precision: 1
                                                    group_by:
                                                      duration: 10min
                                                      func: avg
                                                  - entity: sensor.iphone_aurel_battery_level
                                                    name: Aurel
                                                    color: dodgerblue
                                                    fill_raw: last
                                                    type: area
                                                    stroke_width: 1
                                                    group_by:
                                                      duration: 10min
                                                      func: avg
                                                    show:
                                                      in_brush: true
                                                      in_chart: false
                                                card_mod:
                                                  style: |
                                                    ha-card {
                                                    background-color: black;
                                                    }
                                                type: custom:apexcharts-card
                                  square: false
                                  columns: 3
                                - aspect_ratio: '1:1'
                                  dark_mode: true
                                  default_zoom: 17
                                  entities:
                                    - entity: person.herve
                                    - entity: person.alex
                                    - entity: person.tom
                                  hours_to_show: 12
                                  type: map
                                - header:
                                    title: 📱iPhone ️
                                    show: true
                                    show_states: true
                                    colorize_states: true
                                  experimental:
                                    brush: true
                                  graph_span: 72h
                                  brush:
                                    selection_span: 12h
                                  apex_config:
                                    grid:
                                      show: false
                                    legend:
                                      fontSize: 12px
                                      height: 40
                                    dataLabels:
                                      enabled: false
                                    stroke:
                                      width: 3
                                      curve: smooth
                                    fill:
                                      type: gradient
                                      gradient:
                                        type: vertical
                                        shadeIntensity: 0.8
                                        inverseColors: false
                                        opacityFrom: 0.5
                                        opacityTo: 0
                                        stops:
                                          - - 0
                                            - 50
                                            - 100
                                    tooltip:
                                      enabled: true
                                    yaxis:
                                      - show: true
                                        decimalsInFloat: 0
                                        labels:
                                          style:
                                            colors: '#FFB62E'
                                            fontSize: 12px
                                        forceNiceScale: true
                                      - show: true
                                        decimalsInFloat: 0
                                        opposite: true
                                        labels:
                                          style:
                                            colors: '#2eb9ff'
                                            fontSize: 12px
                                        forceNiceScale: true
                                    xaxis:
                                      axisBorder:
                                        show: false
                                      labels:
                                        style:
                                          fontSize: 14px
                                  series:
                                    - entity: sensor.iphone_aurel_battery_level
                                      name: Aurel
                                      show:
                                        extremas: false
                                      type: area
                                      color: grey
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.alex_iphone_battery_level_ha
                                      name: Alex
                                      show:
                                        extremas: false
                                      type: area
                                      color: purple
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.iphone_aurel_battery_level
                                      name: Aurel
                                      color: dodgerblue
                                      fill_raw: last
                                      type: area
                                      stroke_width: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                      show:
                                        in_brush: true
                                        in_chart: false
                                  card_mod:
                                    style: |
                                      ha-card {
                                      background-color: black;
                                      }
                                  type: custom:apexcharts-card
                      - type: custom:button-card
                        entity: sensor.temp_maison
                        name: meteo
                        template:
                          - bouton_badge
                        label: |
                          [[[
                            if (entity.state == 'unavailable')
                              return "🌡 indispo" ;
                            if (entity.state == '° / °')
                              return "🌡 indispo" ;
                            return "🌡 " + (entity.state );
                          ]]]
                        styles:
                          card:
                            - opacity: |
                                [[[
                                  if (entity.state == 'unavailable')
                                    return "50%" ;
                                  if (entity.state == '° / °')
                                    return "50%" ;
                                  return "100%";
                                ]]]
                        state:
                          - value: unavailable
                            operator: '!='
                            styles:
                              card:
                                - border-color: |
                                    [[[
                                      if (states['sensor.thermo_alerte_froid_v2'].state == 'Alerte' )
                                        return 'rgba(30,144,255,0.9)';
                                      return 'var(--card_border)';
                                      if (states['sensor.temp_moyenne_rdc'].state > 26 || states['sensor.temp_moyenne_etage'].state > 27)
                                        return 'rgba(178,34,34,0.9)';
                                      return 'var(--card_border)';
                                    ]]]
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Température / Humidité
                            card:
                              type: vertical-stack
                              cards:
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: sensor.temp_sejour
                                      name: null
                                      template:
                                        - popup_temp
                                    - type: custom:button-card
                                      entity: sensor.temp_couloir_rdc
                                      name: null
                                      template:
                                        - popup_temp
                                    - type: custom:button-card
                                      entity: sensor.temp_cuisine
                                      name: Cuisine
                                      template:
                                        - popup_temp
                                    - type: custom:button-card
                                      entity: sensor.temp_parents
                                      name: null
                                      template:
                                        - popup_temp
                                  columns: 4
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: sensor.temp_tom
                                      name: null
                                      template:
                                        - popup_temp
                                    - type: custom:button-card
                                      entity: sensor.temp_manon
                                      name: null
                                      template:
                                        - popup_temp
                                    - type: custom:button-card
                                      entity: sensor.temp_nina
                                      name: null
                                      template:
                                        - popup_temp
                                    - type: custom:button-card
                                      entity: sensor.temp_salle_de_bain
                                      name: null
                                      template:
                                        - popup_temp
                                  columns: 4
                                - type: vertical-stack
                                  cards:
                                    - header:
                                        title: 🛋 RDC température
                                        show: true
                                        show_states: true
                                        colorize_states: true
                                      experimental:
                                        brush: true
                                      graph_span: 72h
                                      brush:
                                        selection_span: 12h
                                      apex_config:
                                        grid:
                                          show: false
                                        legend:
                                          fontSize: 12px
                                          height: 40
                                        dataLabels:
                                          enabled: false
                                        stroke:
                                          width: 3
                                          curve: smooth
                                        fill:
                                          type: gradient
                                          gradient:
                                            type: vertical
                                            shadeIntensity: 0.8
                                            inverseColors: false
                                            opacityFrom: 0.5
                                            opacityTo: 0
                                            stops:
                                              - - 0
                                                - 50
                                                - 100
                                        tooltip:
                                          enabled: true
                                        xaxis:
                                          axisBorder:
                                            show: false
                                          labels:
                                            style:
                                              fontSize: 14px
                                      series:
                                        - entity: sensor.temp_sejour
                                          name: Séjour
                                          show:
                                            extremas: false
                                          type: area
                                          color: grey
                                          fill_raw: last
                                          float_precision: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                        - entity: sensor.temp_couloir_rdc
                                          name: Couloir
                                          show:
                                            extremas: false
                                          type: area
                                          color: violet
                                          fill_raw: last
                                          float_precision: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                        - entity: sensor.temp_cuisine
                                          name: Cuisine
                                          show:
                                            extremas: false
                                          type: area
                                          color: red
                                          fill_raw: last
                                          float_precision: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                        - entity: sensor.temp_moyenne_rdc
                                          name: Moyenne
                                          color: dodgerblue
                                          fill_raw: last
                                          type: area
                                          stroke_width: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                          show:
                                            in_brush: true
                                            in_chart: false
                                      card_mod:
                                        style: |
                                          ha-card {
                                          background-color: black;
                                          }
                                      type: custom:apexcharts-card
                                    - header:
                                        title: 🛋 RDC humidité
                                        show: true
                                        show_states: true
                                        colorize_states: true
                                      experimental:
                                        brush: true
                                      graph_span: 72h
                                      brush:
                                        selection_span: 12h
                                      apex_config:
                                        grid:
                                          show: false
                                        legend:
                                          fontSize: 12px
                                          height: 40
                                        dataLabels:
                                          enabled: false
                                        stroke:
                                          width: 3
                                          curve: smooth
                                        fill:
                                          type: gradient
                                          gradient:
                                            type: vertical
                                            shadeIntensity: 0.8
                                            inverseColors: false
                                            opacityFrom: 0.5
                                            opacityTo: 0
                                            stops:
                                              - - 0
                                                - 50
                                                - 100
                                        tooltip:
                                          enabled: true
                                        xaxis:
                                          axisBorder:
                                            show: false
                                          labels:
                                            style:
                                              fontSize: 14px
                                      series:
                                        - entity: sensor.hum_sejour
                                          name: Séjour
                                          show:
                                            extremas: false
                                          type: area
                                          color: grey
                                          fill_raw: last
                                          float_precision: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                        - entity: sensor.hum_couloir_rdc
                                          name: Couloir
                                          show:
                                            extremas: false
                                          type: area
                                          color: violet
                                          fill_raw: last
                                          float_precision: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                        - entity: sensor.hum_cuisine
                                          name: Cuisine
                                          show:
                                            extremas: false
                                          type: area
                                          color: red
                                          fill_raw: last
                                          float_precision: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                      card_mod:
                                        style: |
                                          ha-card {
                                          background-color: black;
                                          }
                                      type: custom:apexcharts-card
                                - type: vertical-stack
                                  cards:
                                    - header:
                                        title: 🛏Chambres température
                                        show: true
                                        show_states: true
                                        colorize_states: true
                                      experimental:
                                        brush: true
                                      graph_span: 72h
                                      brush:
                                        selection_span: 12h
                                      apex_config:
                                        grid:
                                          show: false
                                        legend:
                                          fontSize: 12px
                                          height: 40
                                        dataLabels:
                                          enabled: false
                                        stroke:
                                          width: 3
                                          curve: smooth
                                        fill:
                                          type: gradient
                                          gradient:
                                            type: vertical
                                            shadeIntensity: 0.8
                                            inverseColors: false
                                            opacityFrom: 0.5
                                            opacityTo: 0
                                            stops:
                                              - - 0
                                                - 50
                                                - 100
                                        tooltip:
                                          enabled: true
                                        xaxis:
                                          axisBorder:
                                            show: false
                                          labels:
                                            style:
                                              fontSize: 14px
                                      series:
                                        - entity: sensor.temp_parents
                                          name: Parents
                                          show:
                                            extremas: false
                                          type: area
                                          color: grey
                                          fill_raw: last
                                          float_precision: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                        - entity: sensor.temp_tom
                                          name: Tom
                                          show:
                                            extremas: false
                                          type: area
                                          color: dodgerblue
                                          fill_raw: last
                                          float_precision: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                        - entity: sensor.temp_manon
                                          name: Manon
                                          show:
                                            extremas: false
                                          type: area
                                          color: red
                                          fill_raw: last
                                          float_precision: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                        - entity: sensor.temp_nina
                                          name: Nina
                                          show:
                                            extremas: false
                                          type: area
                                          color: salmon
                                          fill_raw: last
                                          float_precision: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                        - entity: sensor.temp_parents
                                          name: Parents
                                          color: grey
                                          fill_raw: last
                                          type: area
                                          stroke_width: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                          show:
                                            in_brush: true
                                            in_chart: false
                                      card_mod:
                                        style: |
                                          ha-card {
                                          background-color: black;
                                          }
                                      type: custom:apexcharts-card
                                    - header:
                                        title: 🛏Chambres humidité
                                        show: true
                                        show_states: true
                                        colorize_states: true
                                      experimental:
                                        brush: true
                                      graph_span: 72h
                                      brush:
                                        selection_span: 12h
                                      apex_config:
                                        grid:
                                          show: false
                                        legend:
                                          fontSize: 12px
                                          height: 40
                                        dataLabels:
                                          enabled: false
                                        stroke:
                                          width: 3
                                          curve: smooth
                                        fill:
                                          type: gradient
                                          gradient:
                                            type: vertical
                                            shadeIntensity: 0.8
                                            inverseColors: false
                                            opacityFrom: 0.5
                                            opacityTo: 0
                                            stops:
                                              - - 0
                                                - 50
                                                - 100
                                        tooltip:
                                          enabled: true
                                        xaxis:
                                          axisBorder:
                                            show: false
                                          labels:
                                            style:
                                              fontSize: 14px
                                      series:
                                        - entity: sensor.hum_parents
                                          name: Parents
                                          show:
                                            extremas: false
                                          type: area
                                          color: grey
                                          fill_raw: last
                                          float_precision: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                        - entity: sensor.hum_tom
                                          name: Tom
                                          show:
                                            extremas: false
                                          type: area
                                          color: dodgerblue
                                          fill_raw: last
                                          float_precision: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                        - entity: sensor.hum_manon
                                          name: Manon
                                          show:
                                            extremas: false
                                          type: area
                                          color: red
                                          fill_raw: last
                                          float_precision: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                        - entity: sensor.hum_nina
                                          name: Nina
                                          show:
                                            extremas: false
                                          type: area
                                          color: salmon
                                          fill_raw: last
                                          float_precision: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                        - entity: sensor.temp_parents
                                          name: Parents
                                          color: grey
                                          fill_raw: last
                                          type: area
                                          stroke_width: 1
                                          group_by:
                                            duration: 10min
                                            func: avg
                                          show:
                                            in_brush: true
                                            in_chart: false
                                      card_mod:
                                        style: |
                                          ha-card {
                                          background-color: black;
                                          }
                                      type: custom:apexcharts-card
                      - type: custom:button-card
                        entity: sensor.plante_citro_temp
                        name: meteo
                        template:
                          - bouton_badge
                        label: |
                          [[[
                            if (entity.state == 'unavailable')
                              return "🌳 indispo" ;
                            return "🌳 " + (entity.state )+"°";
                          ]]]
                        styles:
                          card:
                            - opacity: |
                                [[[
                                  if (entity.state == 'unavailable')
                                    return "50%" ;
                                  if (entity.state == '° / °')
                                    return "50%" ;
                                  return "100%";
                                ]]]
                        state:
                          - value: unavailable
                            operator: '!='
                            styles:
                              card:
                                - border-color: |
                                    [[[
                                      if (entity.state < 10 )
                                        return 'rgba(30,144,255,0.9)';
                                      return 'var(--card_border)';
                                      if (entity.state > 27 )
                                        return 'rgba(178,34,34,0.9)';
                                      return 'var(--card_border)';
                                    ]]]
                      - type: custom:button-card
                        entity: sensor.myenedis_cout_j1
                        name: meteo
                        template:
                          - bouton_badge
                        label: |
                          [[[

                            if (entity.state == '-1.0')
                              return "⚡️ HS" ;
                            if (entity.state == 'unavailable')
                              return "⚡️ HS" ;
                            return "⚡️ " + " " + (entity.state ) + " €";
                          ]]]
                        styles:
                          card:
                            - opacity: |
                                [[[
                                  if (entity.state == '-1.0')
                                    return "50%" ;
                                  if (entity.state == 'unavailable')
                                    return "50%" ;
                                  return "100%";
                                ]]]
                            - background-color: |
                                [[[
                                  if (entity.state < 2.50) return 'var(--my_color2)';
                                  if (entity.state >= 2.50 && entity.state < 3) return 'tomato';
                                  else return 'red';
                                ]]]
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Consommation électrique
                            card:
                              type: custom:vertical-stack-in-card
                              style: |
                                ha-card {
                                  color: grey ;
                                  border-radius: 10px;
                                  font-size: 85%;
                                  background: var(--my_color2);
                                }
                              cards:
                                - type: picture
                                  image: /local/header/header_enedis2.png
                                  style: |
                                    ha-card {
                                      border-radius: 0px; 
                                      background: var(--my_color2);
                                    }
                                - type: custom:content-card-linky
                                  entity: sensor.myenedis_09397539765420
                                  showInTableUnit: false
                                  showPeakOffPeak: false
                                  showHistory: true
                                  showDayPrice: true
                                  showDayPriceHCHP: false
                                  showDayHCHP: false
                                  showIcon: false
                                  kWhPrice: false
                                  showtitle: true
                                  style: |
                                    ha-card {
                                      color: lightgrey ;
                                      border-radius: 0px;
                                      font-size: 95%;
                                      background: var(--my_color2);
                                    }
                                - type: markdown
                                  content: >-

                                    <font color='dodgerblue'><b>Coût :
                                    </b></font><font
                                    color='red'><b>`0.1557€`</b></font>

                                    - Hier : **{{
                                    (((states('sensor.myenedis_09397539765420')
                                    | float) * (0.1557) | float)) | round(2)
                                    }}€**

                                    - Cette semaine :  **{{
                                    states('sensor.myenedis_conso_semaine_en_cours_v2')
                                    }}€**

                                    - Semaine dernière :  **{{
                                    (((states('sensor.myenedis_conso_semaine_derniere')
                                    | float) * (0.0001557) | float)) | round(2)
                                    }}€**

                                    ---

                                    <font color='dodgerblue'><b>Abo mensuel
                                    inclus :</b></font> <font
                                    color='red'><b>`10.66€/mois`</b></font>

                                    - Mois en cours : **{{
                                    states('sensor.myenedis_cout_mois_en_cours_abo')
                                    }}€**

                                    - Mois dernier : **{{
                                    states('sensor.myenedis_conso_mois_dernier')
                                    }}€** 

                                    - Année en cours :  **{{
                                    states('sensor.myenedis_cout_annee_en_cours_abo')
                                    }}€**
                                  style: |
                                    ha-card {
                                      color: lightgrey ;
                                      border-radius: 0px;
                                      font-size: 110%;
                                      background: var(--my_color2);
                                    }
                                - align_header: center
                                  align_icon: center
                                  align_state: center
                                  animate: true
                                  color_thresholds:
                                    - color: dodgerblue
                                      value: 0
                                    - color: dodgerblue
                                      value: 0.2
                                    - color: dodgerblue
                                      value: 0.4
                                    - color: dodgerblue
                                      value: 0.6
                                    - color: dodgerblue
                                      value: 0.8
                                    - color: dodgerblue
                                      value: 1
                                    - color: blue
                                      value: 1.2
                                    - color: blue
                                      value: 1.4
                                    - color: blue
                                      value: 1.6
                                    - color: gold
                                      value: 1.8
                                    - color: orange
                                      value: 2
                                    - color: orange
                                      value: 2.2
                                    - color: orange
                                      value: 2.4
                                    - color: orange
                                      value: 2.6
                                    - color: orange
                                      value: 2.8
                                    - color: red
                                      value: 3
                                    - color: red
                                      value: 3.5
                                    - color: red
                                      value: 4
                                    - color: red
                                      value: 4.5
                                    - color: red
                                      value: 5
                                    - color: red
                                      value: 5.5
                                    - color: red
                                      value: 6
                                    - color: firebrick
                                      value: 7
                                    - color: firebrick
                                      value: 8
                                    - color: firebrick
                                      value: 9
                                    - color: firebrick
                                      value: 10
                                  entities:
                                    - entity: sensor.myenedis_cout_j7
                                    - entity: sensor.myenedis_cout_j6
                                    - entity: sensor.myenedis_cout_j5
                                    - entity: sensor.myenedis_cout_j4
                                    - entity: sensor.myenedis_cout_j3
                                    - entity: sensor.myenedis_cout_j2
                                    - entity: sensor.myenedis_cout_j1
                                  font_size: 80
                                  font_size_header: 13
                                  hour24: true
                                  hours_to_show: 24
                                  icon: mdi:currency-eur
                                  line_width: 2
                                  name: Coût sur 7 jours
                                  point_per_hour: 1
                                  group_by: date
                                  show:
                                    graph: bar
                                    name: true
                                    state: false
                                    extrema: false
                                    fill: false
                                    icon: true
                                    icon_adaptive_color: false
                                    labels: true
                                    labels_secondary: false
                                    legend: false
                                    line: false
                                    indicator: false
                                    name_adaptive_color: false
                                  style: |
                                    ha-card {
                                      color: dodgerblue;
                                      border-radius: 0px;
                                      background: var(--my_color2);
                                    }
                                    :host {
                                      --paper-item-icon-color: dodgerblue;
                                    }
                                  type: custom:mini-graph-card
                  - type: grid
                    cards:
                      - type: custom:button-card
                        entity: sensor.date_simple
                        aspect_ratio: 1.2/1
                        show_icon: false
                        show_name: false
                        show_state: false
                        show_label: false
                        tap_action:
                          action: more-info
                        styles:
                          grid:
                            - grid-template-areas: |
                                "giorno"
                                "numero"
                                "testo"
                                "anniv"
                                "eventi"
                                "eventi2"
                            - grid-template-columns: 1fr
                            - grid-template-rows: min-content min-content min-content 1fr
                            - gap: 01%
                            - overflow: hidden
                          card:
                            - '-webkit-tap-highlight-color': rgba(0,0,0,0)
                            - transition: none
                            - padding: 8% 8% 8% 8%
                            - border-color: var(--card_border)
                            - border-style: outset
                            - border-width: 1px
                            - box-shadow: 1px 1px 5px 0px rgb(12, 12, 14)
                            - color: rgba(255, 255, 255, 0.8)
                          custom_fields:
                            giorno:
                              - color: '#ff3b2f'
                              - text-transform: uppercase
                              - font-weight: bold
                              - font-size: 70%
                              - top: 10%
                              - left: 6%
                              - line-height: 115%
                              - position: absolute
                            numero:
                              - color: rgba(255, 255, 255, 0.8)
                              - top: 17%
                              - left: 06%
                              - font-size: 160%
                              - font-weight: bold
                              - position: absolute
                            anniv:
                              - border-left: 2px grey solid
                              - padding-left: 5px
                              - color: rgba(255, 255, 255, 0.8)
                              - font-weight: null
                              - font-size: 75%
                              - top: 45%
                              - left: 6%
                              - position: absolute
                            eventi:
                              - border-left: 2px red solid
                              - padding-left: 5px
                              - color: |
                                  [[[
                                    if (states['sensor.calendar_famille'].state == 'Aucun évènement')
                                      return 'grey';
                                    return 'rgba(255, 255, 255, 0.8)';
                                  ]]]
                              - font-weight: |
                                  [[[
                                    if (states['sensor.calendar_famille'].state == 'Aucun évènement')
                                      return '';
                                    return '';
                                  ]]]
                              - font-size: 75%
                              - top: 63%
                              - left: 6%
                              - position: absolute
                            eventi2:
                              - border-left: 2px dodgerblue solid
                              - padding-left: 5px
                              - color: |
                                  [[[
                                    if (states['sensor.calendar_poubelles'].state == 'Aucun rappel')
                                      return 'grey';
                                    return 'rgba(255, 255, 255, 0.8)';
                                  ]]]
                              - font-weight: |
                                  [[[
                                    if (states['sensor.calendar_poubelles'].state == 'Aucun rappel')
                                      return '';
                                    return '';
                                  ]]]
                              - font-size: 75%
                              - top: 80%
                              - left: 6%
                              - position: absolute
                        custom_fields:
                          giorno: |
                            [[[ return states['sensor.date_simple'].state ]]]
                          numero: |
                            [[[ return states['sensor.time'].state ]]]
                          anniv: |
                            [[[
                              if (states['sensor.anniversaire'].state == 'Aucun')
                                return '' ;
                              return states['sensor.anniversaire'].state ;
                            ]]]
                          eventi: |
                            [[[ return states['sensor.calendar_famille'].state
                            ]]]
                          eventi2: |
                            [[[ return states['sensor.calendar_poubelles'].state
                            ]]]
                      - type: custom:button-card
                        entity: weather.beaucouze
                        name: Beaucouzé
                        aspect_ratio: 1.2/1
                        show_icon: true
                        show_entity_picture: true
                        show_name: false
                        show_state: true
                        show_label: true
                        double_tap_action:
                          action: more-info
                        styles:
                          card:
                            - '-webkit-tap-highlight-color': rgba(0,0,0,0)
                            - transition: none
                            - padding: 8% 8% 8% 8%
                            - border-color: var(--card_border)
                            - border-style: outset
                            - border-width: 1px
                            - box-shadow: 1px 1px 5px 0px rgb(12, 12, 14)
                          name:
                            - top: 10%
                            - left: 6%
                            - text-transform: uppercase
                            - font-weight: 0
                            - font-size: 65%
                            - position: absolute
                          icon:
                            - width: 22%
                            - top: 0%
                            - left: 75%
                            - place-self: start
                            - position: absolute
                          label:
                            - font-size: 70%
                            - top: 63%
                            - left: 6%
                            - margin-left: '-5px'
                            - position: absolute
                            - font-weight: bold
                          state:
                            - font-size: 85%
                            - top: 33%
                            - left: 6%
                            - font-weight: bold
                            - line-height: 115%
                            - position: absolute
                            - color: rgba(255, 255, 255, 0.8)
                          custom_fields:
                            temp:
                              - top: 8%
                              - left: 06%
                              - font-size: 160%
                              - font-weight: bold
                              - position: absolute
                              - color: |
                                  [[[
                                    if (entity.attributes.temperature < 10)
                                      return 'dodgerblue';
                                    if (entity.attributes.temperature > 25)
                                      return 'red';
                                    return 'rgba(255, 255, 255, 0.8)';
                                  ]]]
                            alerte:
                              - top: 80%
                              - left: 06%
                              - font-size: 75%
                              - font-weight: |
                                  [[[
                                    if (states['sensor.weather_alerte_couleur'].state == 'Aucune vigilance')
                                      return '';
                                    return 'bold';
                                  ]]]
                              - position: absolute
                              - color: |
                                  [[[
                                    if (states['sensor.weather_alerte_couleur'].state == 'Aucune vigilance')
                                      return 'grey';
                                    return 'rgba(255, 255, 255, 0.8)';
                                  ]]]
                        label: |
                          [[[
                            if (states['sun.sun'].state == 'below_horizon')
                            return `<ha-icon
                              icon="mdi:arrow-up-thin"
                              style="width: 17px; height: 17px; color: red; margin-right: -3px;">
                              </ha-icon><span> ${states['sensor.temp_max'].state}</span>
                                    <ha-icon
                              icon="mdi:arrow-down-thin"
                              style="width: 17px; color: dodgerblue; height: 17px; margin-right: -3px;">
                              </ha-icon><span> ${states['sensor.temp_min'].state}</span> 
                                    <ha-icon
                              icon="mdi:weather-sunny"
                              style="width: 17px; color: orange; height: 17px; margin-right: -2px;">
                              </ha-icon><span> ${states['sensor.weather_soleil_v2'].state}</span> 
                            `
                            if (states['sun.sun'].state == 'above_horizon')
                            return `<ha-icon
                              icon="mdi:arrow-up-thin"
                              style="width: 17px; height: 17px; color: red; margin-right: -3px;">
                              </ha-icon><span> ${states['sensor.temp_max'].state}</span>
                                    <ha-icon
                              icon="mdi:arrow-down-thin"
                              style="width: 17px; color: dodgerblue; height: 17px; margin-right: -3px;">
                              </ha-icon><span> ${states['sensor.temp_min'].state}</span> 
                                    <ha-icon
                              icon="mdi:moon-waning-crescent"
                              style="width: 17px; color: darkgrey; height: 17px; margin-right: -5px;">
                              </ha-icon><span> ${states['sensor.weather_soleil_v2'].state}</span>
                            `
                          ]]]
                        custom_fields:
                          temp: |
                            [[[ return entity.attributes.temperature + "°"; ]]] 
                          alerte: |
                            [[[
                              if (states['sensor.weather_alerte_couleur'].state == 'Aucune vigilance')
                                return 'Aucune alerte';
                              return states['sensor.weather_alerte'].state;
                            ]]]
                        entity_picture: |
                          [[[
                            if ((entity.state == 'sunny') && (states['sun.sun'].state == 'above_horizon'))
                              return "/local/weather/clear-day.svg";
                              if ((entity.state == 'sunny') || (entity.state == 'clear-night') && (states['sun.sun'].state == 'below_horizon'))
                                return "/local/weather/clear-night.svg";   
                                  if (entity.state == 'fog')
                                    return "/local/weather/fog.svg";     
                                      if ((entity.state == 'partlycloudy') && (states['sun.sun'].state == 'above_horizon'))
                                        return "/local/weather/partly-cloudy-day.svg";                      
                                          if ((entity.state == 'partlycloudy') && (states['sun.sun'].state == 'below_horizon'))
                                            return "/local/weather/partly-cloudy-night.svg";    
                                              if (entity.state == 'rainy')
                                                return "/local/weather/rain.svg";                  
                                                  if (entity.state == 'sleet')
                                                    return "/local/weather/sleet.svg";         
                                                      if (entity.state == 'snow')
                                                        return "/local/weather/snow.svg";  
                                                          if (entity.state == 'cloudy')
                                                            return "/local/weather/cloudy.svg";    
                            else (entity.state == 'wind')
                              return "/local/weather/wind.svg";                        
                          ]]]
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Info et Météo
                            card:
                              type: vertical-stack
                              cards:
                                - type: markdown
                                  content: >
                                    <font size=
                                    "3">{{states('sensor.weather_alerte') }}</i>
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir;

                                      }
                                - type: custom:meteofrance-weather-card
                                  entity: weather.beaucouze
                                  number_of_forecasts: '5'
                                  cloudCoverEntity: sensor.beaucouze_cloud_cover
                                  rainChanceEntity: sensor.beaucouze_rain_chance_2
                                  uvEntity: sensor.beaucouze_uv_2
                                  freezeChanceEntity: sensor.beaucouze_freeze_chance_2
                                  snowChanceEntity: sensor.beaucouze_snow_chance_2
                                  alertEntity: sensor.49_weather_alert
                                  rainForecastEntity: sensor.beaucouze_next_rain_2
                                  style: |
                                    ha-card {

                                      background: var(--my_color2);
                                      --ha-card-background: none !important;
                                      font-family: Avenir;
                                      border-color: rgba(152, 167, 185, 0.2) ;
                                      border-style: outset ;
                                      border-width: 1px ;
                                      box-shadow: 1px 1px 5px 0px rgb(12, 12, 14)

                                    }
                                - type: custom:sun-card
                    columns: 2
                    square: false
                  - type: grid
                    cards:
                      - type: custom:button-card
                        entity: alarm_control_panel.alarme
                        name: Alarme
                        template:
                          - bouton_rond
                        icon: |
                          [[[
                            if (entity.state == "disarmed" )
                              return "mdi:shield-off";
                            if (entity.state == "armed_away" )
                              return "mdi:shield-lock";
                            if (entity.state == "arming" )
                              return "mdi:shield-half-full";
                            if (entity.state == "triggered" )
                              return "mdi:shield-alert";
                            return "mdi:shield-off";
                          ]]]
                        label: >
                          [[[  return "Alarme" + " "
                          +(states['alarm_control_panel.alarme'].state ) + " à "
                          + (states['sensor.alarme_heure'].state );

                          ]]]
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Système de sécurité
                            card:
                              type: vertical-stack
                              cards:
                                - type: alarm-panel
                                  states:
                                    - arm_away
                                  entity: alarm_control_panel.alarme
                                  style: |
                                    ha-card {
                                      border-radius: 15px;
                                      background: var(--my_color2) ;
                                    }
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: script.alarme_sirene_off
                                      name: 'OFF'
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.alarme_sirene
                                      name: Sirène
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: siren.alarme_sirene
                                      name: Sirène
                                      template:
                                        - popup_capteur
                                  square: false
                                  columns: 3
                                - type: custom:button-card
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir
                                  show_icon: false
                                  show_name: false
                                  show_state: false
                                  show_label: true
                                  label: |
                                    [[[ return "Portes" ]]]
                                  styles:
                                    label:
                                      - justify-self: center
                                      - font-size: 15px
                                      - font-weight: bold
                                      - font-style: italic
                                      - color: darkgrey
                                    card:
                                      - height: 20px
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: binary_sensor.porte_entree
                                      name: Entrée
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.porte_salle_a_manger
                                      name: SaM
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.porte_cuisine
                                      name: null
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.porte_chambre_parents
                                      name: null
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.porte_cagibi
                                      name: null
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.porte_garage
                                      name: null
                                      template:
                                        - popup_capteur
                                  square: false
                                  columns: 3
                                - content: >
                                    <center><i><font size='4'><font
                                    color='darkgrey'>Mouvements 
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir
                                  type: markdown
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_salon
                                      name: Salon
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_salle_a_manger
                                      name: SaM
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_couloir
                                      name: Couloir
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_salle_d_eau
                                      name: Lavabo
                                      template:
                                        - popup_capteur
                                      tap_action:
                                        action: more-info
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_garage
                                      name: Garage
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_escaliers
                                      name: Escaliers
                                      template:
                                        - popup_capteur
                                  square: false
                                  columns: 3
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_tom
                                      name: Tom
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_manon
                                      name: Manon
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_leane
                                      name: Léane
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_nina
                                      name: Nina
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_palier
                                      name: Palier
                                      template:
                                        - popup_capteur
                                  square: false
                                  columns: 3
                      - type: custom:button-card
                        entity: alarm_control_panel.aarlo_sonnette
                        name: Alarme
                        icon: phu:arlo-video-doorbell
                        template:
                          - bouton_rond
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Sonnette Arlo
                            card:
                              type: vertical-stack
                              cards:
                                - entity: camera.aarlo_sonnette
                                  hide:
                                    - title
                                    - date
                                  image_click: play
                                  show:
                                    - motion
                                    - sound
                                    - image_date
                                    - signal_strength
                                    - captured_today
                                    - image_date
                                    - on_off
                                    - snapshot
                                    - battery_level
                                  top_date: true
                                  top_status: false
                                  top_title: false
                                  type: custom:aarlo-glance
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: alarm_control_panel.aarlo_sonnette
                                      name: null
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: switch.aarlo_snapshot_sonnette
                                      name: Capture
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.aarlo_ding_sonnette
                                      name: Ding Dong !
                                      template:
                                        - popup_capteur
                                  square: false
                                  columns: 3
                                - header:
                                    title: 🚪Sonnette Arlo
                                    show: true
                                    show_states: true
                                    colorize_states: true
                                  experimental:
                                    brush: true
                                  graph_span: 336h
                                  brush:
                                    selection_span: 72h
                                  apex_config:
                                    grid:
                                      show: false
                                    legend:
                                      fontSize: 12px
                                      height: 40
                                    dataLabels:
                                      enabled: false
                                    stroke:
                                      width: 3
                                      curve: smooth
                                    fill:
                                      type: gradient
                                      gradient:
                                        type: vertical
                                        shadeIntensity: 0.8
                                        inverseColors: false
                                        opacityFrom: 0.5
                                        opacityTo: 0
                                        stops:
                                          - - 0
                                            - 50
                                            - 100
                                    tooltip:
                                      enabled: true
                                    yaxis:
                                      - show: true
                                        decimalsInFloat: 0
                                        labels:
                                          style:
                                            colors: '#FFB62E'
                                            fontSize: 12px
                                        forceNiceScale: true
                                      - show: true
                                        decimalsInFloat: 0
                                        opposite: true
                                        labels:
                                          style:
                                            colors: '#2eb9ff'
                                            fontSize: 12px
                                        forceNiceScale: true
                                    xaxis:
                                      axisBorder:
                                        show: false
                                      labels:
                                        style:
                                          fontSize: 14px
                                  series:
                                    - entity: sensor.aarlo_battery_level_sonnette
                                      name: Batterie
                                      show:
                                        extremas: true
                                      type: area
                                      color: grey
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.aarlo_battery_level_sonnette
                                      name: Batterie
                                      color: dodgerblue
                                      fill_raw: last
                                      type: area
                                      stroke_width: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                      show:
                                        in_brush: true
                                        in_chart: false
                                  card_mod:
                                    style: |
                                      ha-card {
                                      background-color: var(--my_color2);
                                      }
                                  type: custom:apexcharts-card
                      - type: custom:button-card
                        entity: group.lumieres
                        icon: phu:bulb-group-filament-candle
                        template:
                          - bouton_rond
                        styles:
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_lumiere'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.5)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_lumiere'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'lightgrey';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_lumiere'].state )
                            ]]]
                        double_tap_action:
                          action: more-info
                        state:
                          - value: 'on'
                            styles:
                              card:
                                - background-color: rgba(250,250,100,0.5)
                              img_cell:
                                - background-color: rgba(250,250,100,0.7)
                              icon:
                                - color: var(--icon_on)
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Lumières allumées
                            card:
                              type: vertical-stack
                              cards:
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: group.lumieres
                                      template:
                                        - popup_light
                                        - effet
                                      name: Tout
                                    - type: custom:button-card
                                      entity: input_boolean.ambiances_sejour
                                      name: Ambiances
                                      template:
                                        - bouton_mode
                                      icon: |
                                        [[[
                                          if (states['sensor.ambiances_sejour'].state == "TV" )
                                            return "mdi:television-play";
                                          if (states['sensor.ambiances_sejour'].state == "Normale + TV" )
                                            return "mdi:television-play";
                                          if (states['sensor.ambiances_sejour'].state == "Normale" )
                                            return "mdi:ceiling-light-multiple";
                                          if (states['sensor.ambiances_sejour'].state == "Doux" )
                                            return "mdi:sofa";
                                          if (states['sensor.ambiances_sejour'].state == "Repas TV" )
                                            return "mdi:hamburger";
                                          if (states['sensor.ambiances_sejour'].state == "Repas invités" )
                                            return "phu:rooms-dining";
                                          if (states['sensor.ambiances_sejour'].state == "Lecture" )
                                            return "mdi:book-open-variant";
                                          if (states['sensor.ambiances_sejour'].state == "Apéro" )
                                            return "mdi:glass-cocktail";
                                          if (states['sensor.ambiances_sejour'].state == "Noël" )
                                            return "phu:christmas-tree";
                                          if (states['sensor.ambiances_sejour'].state == "Disco" )
                                            return "mdi:music";
                                          if (states['sensor.ambiances_sejour'].state == "Travail" )
                                            return "mdi:pen";
                                          if (states['sensor.ambiances_sejour'].state == "Anniversaire" )
                                            return "mdi:party-popper";
                                          return "phu:ceiling-fugato-three-alt" ;
                                        ]]]
                                      label: |
                                        [[[
                                          return states['sensor.ambiances_sejour'].state 
                                        ]]]
                                      state:
                                        - value: 'on'
                                          styles:
                                            img_cell:
                                              - background-color: |
                                                  [[[
                                                    if (states['sensor.ambiances_sejour'].state == "TV" )
                                                      return "rgba(255,0,0,0.7)";
                                                    if (states['sensor.ambiances_sejour'].state == "Normale + TV" )
                                                      return "rgba(255,255,0,0.7)";
                                                    if (states['sensor.ambiances_sejour'].state == "Normale" )
                                                      return "rgba(255,255,0,0.7)";
                                                    if (states['sensor.ambiances_sejour'].state == "Doux" )
                                                      return "rgba(186,85,211,0.5)";
                                                    if (states['sensor.ambiances_sejour'].state == "Repas TV" )
                                                      return "rgba(255,0,0,0.7)";
                                                    if (states['sensor.ambiances_sejour'].state == "Repas invités" )
                                                      return "rgba(255,0,0,0.7)";
                                                    if (states['sensor.ambiances_sejour'].state == "Lecture" )
                                                      return "rgba(255,255,255,0.5)";
                                                    if (states['sensor.ambiances_sejour'].state == "Apéro" )
                                                      return "rgba(255,120,120,0.5)";
                                                    if (states['sensor.ambiances_sejour'].state == "Noël" )
                                                      return "rgba(50,205,50,0.5)";
                                                    if (states['sensor.ambiances_sejour'].state == "Disco" )
                                                      return "rgba(0,191,250,0.7)";
                                                    if (states['sensor.ambiances_sejour'].state == "Travail" )
                                                      return "rgba(255,255,250,0.7)";
                                                    if (states['sensor.ambiances_sejour'].state == "Anniversaire" )
                                                      return "rgba(238,130,238,0.7)";
                                                    return "rgba(255,120,120,0.5)" ;
                                                  ]]]
                                            icon:
                                              - color: var(--icon_on)
                                              - transition: 2s ease
                                            name:
                                              - color: grey
                                            label:
                                              - color: lightgrey
                                      double_tap_action:
                                        action: more-info
                                      tap_action:
                                        action: fire-dom-event
                                        browser_mod:
                                          command: popup
                                          title: Ambiances séjour
                                          card:
                                            type: grid
                                            cards:
                                              - type: custom:button-card
                                                entity: light.ambiance_normale
                                                name: Normal
                                                template:
                                                  - popup_ambiance
                                                state:
                                                  - value: 'on'
                                                    styles:
                                                      img_cell:
                                                        - background-color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Normale" )
                                                                return "rgba(255,255,0,0.7)";
                                                              return "var(--pastille_off)" ;
                                                            ]]]
                                                      icon:
                                                        - color: var(--icon_on)
                                                        - color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Normale" )
                                                                return "var(--icon_on)";
                                                              return "var(--icon_off)" ;
                                                            ]]]
                                                tap_action:
                                                  action: call-service
                                                  service: scene.turn_on
                                                  service_data:
                                                    entity_id: scene.ambiance_normale
                                              - type: custom:button-card
                                                entity: light.ambiance_normale
                                                name: Doux
                                                icon: mdi:sofa
                                                template:
                                                  - popup_ambiance
                                                state:
                                                  - value: 'on'
                                                    styles:
                                                      img_cell:
                                                        - background-color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Doux" )
                                                                return "rgba(186,85,211,0.5)";
                                                              return "var(--pastille_off)" ;
                                                            ]]]
                                                      icon:
                                                        - color: var(--icon_on)
                                                        - color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Doux" )
                                                                return "var(--icon_on)";
                                                              return "var(--icon_off)" ;
                                                            ]]]
                                                tap_action:
                                                  action: call-service
                                                  service: scene.turn_on
                                                  service_data:
                                                    entity_id: scene.zen
                                              - type: custom:button-card
                                                entity: light.ambiance_normale
                                                name: Repas
                                                icon: mdi:hamburger
                                                template:
                                                  - popup_ambiance
                                                state:
                                                  - value: 'on'
                                                    styles:
                                                      img_cell:
                                                        - background-color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Repas TV" )
                                                                return "rgba(255,0,0,0.7)";
                                                              return "var(--pastille_off)" ;
                                                            ]]]
                                                      icon:
                                                        - color: var(--icon_on)
                                                        - color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Repas TV" )
                                                                return "var(--icon_on)";
                                                              return "var(--icon_off)" ;
                                                            ]]] 
                                                tap_action:
                                                  action: call-service
                                                  service: script.turn_on
                                                  service_data:
                                                    entity_id: script.ambiance_repas
                                              - type: custom:button-card
                                                entity: light.ambiance_normale
                                                name: TV
                                                icon: mdi:television-play
                                                template:
                                                  - popup_ambiance
                                                state:
                                                  - value: 'on'
                                                    styles:
                                                      img_cell:
                                                        - background-color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "TV" )
                                                                return "rgba(255,0,0,0.7)";
                                                              return "var(--pastille_off)" ;
                                                            ]]]
                                                      icon:
                                                        - color: var(--icon_on)
                                                        - color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "TV" )
                                                                return "var(--icon_on)";
                                                              return "var(--icon_off)" ;
                                                            ]]]
                                                tap_action:
                                                  action: call-service
                                                  service: scene.turn_on
                                                  service_data:
                                                    entity_id: scene.tv
                                              - type: custom:button-card
                                                entity: light.ambiance_normale
                                                name: Travail
                                                icon: mdi:pen
                                                template:
                                                  - popup_ambiance
                                                state:
                                                  - value: 'on'
                                                    styles:
                                                      img_cell:
                                                        - background-color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Travail" )
                                                                return "rgba(255,250,250,0.7)";
                                                              return "var(--pastille_off)" ;
                                                            ]]]
                                                      icon:
                                                        - color: var(--icon_on)
                                                        - color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Travail" )
                                                                return "var(--icon_on)";
                                                              return "var(--icon_off)" ;
                                                            ]]]
                                                tap_action:
                                                  action: call-service
                                                  service: scene.turn_on
                                                  service_data:
                                                    entity_id: scene.travail_dessin_2
                                              - type: custom:button-card
                                                entity: light.ambiance_normale
                                                name: Apero
                                                icon: mdi:glass-cocktail
                                                template:
                                                  - popup_ambiance
                                                state:
                                                  - value: 'on'
                                                    styles:
                                                      img_cell:
                                                        - background-color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Apéro" )
                                                                return "rgba(255,120,120,0.5)";
                                                              return "var(--pastille_off)" ;
                                                            ]]]
                                                      icon:
                                                        - color: var(--icon_on)
                                                        - color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Apéro" )
                                                                return "var(--icon_on)";
                                                              return "var(--icon_off)" ;
                                                            ]]]
                                                tap_action:
                                                  action: call-service
                                                  service: script.turn_on
                                                  service_data:
                                                    entity_id: script.apero_lum
                                              - type: custom:button-card
                                                entity: light.ambiance_normale
                                                name: Repas invités
                                                icon: phu:rooms-dining
                                                template:
                                                  - popup_ambiance
                                                state:
                                                  - value: 'on'
                                                    styles:
                                                      img_cell:
                                                        - background-color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Repas invités" )
                                                                return "rgba(255,0,0,0.7)";
                                                              return "var(--pastille_off)" ;
                                                            ]]]
                                                      icon:
                                                        - color: var(--icon_on)
                                                        - color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Repas invités" )
                                                                return "var(--icon_on)";
                                                              return "var(--icon_off)" ;
                                                            ]]]
                                                tap_action:
                                                  action: call-service
                                                  service: script.turn_on
                                                  service_data:
                                                    entity_id: script.ambiance_repas_invites
                                              - type: custom:button-card
                                                entity: light.ambiance_normale
                                                name: Disco
                                                icon: mdi:music
                                                template:
                                                  - popup_ambiance
                                                state:
                                                  - value: 'on'
                                                    styles:
                                                      img_cell:
                                                        - background-color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Disco" )
                                                                return "rgba(255,0,0,0.7)";
                                                              return "var(--pastille_off)" ;
                                                            ]]]
                                                      icon:
                                                        - color: var(--icon_on)
                                                        - color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Disco" )
                                                                return "var(--icon_on)";
                                                              return "var(--icon_off)" ;
                                                            ]]]
                                                tap_action:
                                                  action: call-service
                                                  service: script.turn_on
                                                  service_data:
                                                    entity_id: script.disco_lum
                                              - type: custom:button-card
                                                entity: light.ambiance_normale
                                                name: Anniv
                                                icon: mdi:party-popper
                                                template:
                                                  - popup_ambiance
                                                state:
                                                  - value: 'on'
                                                    styles:
                                                      img_cell:
                                                        - background-color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Disco" )
                                                                return "rgba(238,130,238,0.7)";
                                                              return "var(--pastille_off)" ;
                                                            ]]]
                                                      icon:
                                                        - color: var(--icon_on)
                                                        - color: |
                                                            [[[
                                                              if (states['sensor.ambiances_sejour'].state == "Disco" )
                                                                return "var(--icon_on)";
                                                              return "var(--icon_off)" ;
                                                            ]]]
                                                tap_action:
                                                  action: call-service
                                                  service: scene.turn_on
                                                  service_data:
                                                    entity_id: scene.anniversaire
                                            square: false
                                            columns: 6
                                    - type: custom:button-card
                                      entity: group.noel
                                      template:
                                        - popup_light
                                        - effet
                                      name: Noël
                                  columns: 3
                                  square: false
                                - type: markdown
                                  content: |

                                    {{ states('sensor.lumiere_etat') }}
                                  style: |
                                    ha-card {
                                      font-family: Avenir ; 
                                      --mdc-icon-size: 17px;   
                                      box-shadow: 1px 1px 5px 0px rgb(12, 12, 14);
                                      border-color: var(--card_border);
                                      border-style: outset;
                                      border-width: 1px;

                                    }
                                - type: entity-filter
                                  entities:
                                    - entity: switch.sapin
                                      secondary_info: last-changed
                                    - entity: switch.guirlande_etoiles
                                      secondary_info: last-changed
                                    - entity: light.lampe_de_bureau
                                      secondary_info: last-changed
                                    - entity: light.buffet
                                      secondary_info: last-changed
                                    - entity: switch.light_lampe_tele_salon
                                      secondary_info: last-changed
                                    - entity: light.bandeau_led
                                      secondary_info: last-changed
                                    - entity: light.trilampe_gauche
                                      secondary_info: last-changed
                                    - entity: light.trilampe_centre
                                      secondary_info: last-changed
                                    - entity: light.trilampe_droite
                                      secondary_info: last-changed
                                    - entity: light.lampadaire
                                      secondary_info: last-changed
                                    - entity: light.lustre_salle_a_manger
                                      secondary_info: last-changed
                                    - entity: light.lustre_salon
                                      secondary_info: last-changed
                                    - entity: light.lustre_parents
                                      secondary_info: last-changed
                                    - entity: light.chevet
                                      secondary_info: last-changed
                                    - entity: light.lustre_tom
                                      secondary_info: last-changed
                                    - entity: light.chevet_tom
                                      secondary_info: last-changed
                                    - entity: light.lampe_de_bureau_tom
                                      secondary_info: last-changed
                                    - entity: light.lampe_de_bureau_nina
                                      secondary_info: last-changed
                                    - entity: light.lustre_nina
                                      secondary_info: last-changed
                                    - entity: light.chevet_nina
                                      secondary_info: last-changed
                                    - entity: light.lampadaire_nina
                                      secondary_info: last-changed
                                    - entity: switch.guirlande_nina
                                      secondary_info: last-changed
                                    - entity: light.lustre_manon_et_leane
                                      secondary_info: last-changed
                                    - entity: light.lampe_manon_et_leane
                                      secondary_info: last-changed
                                    - entity: light.chevet_leane
                                      secondary_info: last-changed
                                    - entity: light.chevet_manon
                                      secondary_info: last-changed
                                    - entity: switch.arbre_lumineux
                                      secondary_info: last-changed
                                    - entity: light.wc_droit
                                      secondary_info: last-changed
                                    - entity: light.wc_gauche
                                      secondary_info: last-changed
                                    - entity: light.cagibi
                                      secondary_info: last-changed
                                    - entity: light.aqara_hub_54e1
                                      secondary_info: last-changed
                                    - entity: light.entree
                                      secondary_info: last-changed
                                    - entity: light.couloir
                                      secondary_info: last-changed
                                    - entity: light.palier
                                      secondary_info: last-changed
                                    - entity: light.escalier
                                      secondary_info: last-changed
                                  state_filter:
                                    - 'on'
                                  card:
                                    type: entities
                      - type: custom:button-card
                        entity: group.mouvements
                        name: Alarme
                        template:
                          - bouton_rond
                        state:
                          - value: 'on'
                            styles:
                              card:
                                - background-color: var(--mouv)
                              img_cell:
                                - background-color: var(--mouv)
                              icon:
                                - color: var(--icon_on)
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Mouvements
                            card:
                              type: vertical-stack
                              cards:
                                - type: custom:button-card
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir
                                  show_icon: false
                                  show_name: false
                                  show_state: false
                                  show_label: true
                                  label: |
                                    [[[ return "RDC" ]]]
                                  styles:
                                    label:
                                      - justify-self: center
                                      - font-size: 15px
                                      - font-weight: bold
                                      - font-style: italic
                                      - color: darkgrey
                                    card:
                                      - height: 20px
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_salon
                                      name: Salon
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_salle_a_manger
                                      name: SaM
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_couloir
                                      name: Couloir
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_salle_d_eau
                                      name: Lavabo
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_garage
                                      name: Garage
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_escalier
                                      name: Escaliers
                                      template:
                                        - popup_capteur
                                  square: false
                                  columns: 3
                                - type: custom:button-card
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir
                                  show_icon: false
                                  show_name: false
                                  show_state: false
                                  show_label: true
                                  label: |
                                    [[[ return "Etage" ]]]
                                  styles:
                                    label:
                                      - justify-self: center
                                      - font-size: 15px
                                      - font-weight: bold
                                      - font-style: italic
                                      - color: darkgrey
                                    card:
                                      - height: 20px
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_tom
                                      name: Tom
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_manon
                                      name: Manon
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_leane
                                      name: Léane
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_nina
                                      name: Nina
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_palier
                                      name: Palier
                                      template:
                                        - popup_capteur
                                  square: false
                                  columns: 3
                      - type: custom:button-card
                        entity: group.portes
                        name: Portes
                        template:
                          - bouton_rond
                        styles:
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_portes'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.5)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_portes'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'lightgrey';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_portes'].state )
                            ]]]
                        state:
                          - value: 'on'
                            styles:
                              card:
                                - background-color: var(--porte)
                              img_cell:
                                - background-color: var(--porte)
                              icon:
                                - color: var(--icon_on)
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Portes et fenêtres
                            card:
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.porte_entree
                                  name: Entrée
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.porte_salle_a_manger
                                  name: SaM
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.porte_cuisine
                                  name: null
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.porte_chambre_parents
                                  name: null
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.porte_cagibi
                                  name: null
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.porte_garage
                                  name: null
                                  template:
                                    - popup_capteur
                              square: false
                              columns: 3
                    square: false
                    columns: 5
                  - type: conditional
                    conditions:
                      - entity: alarm_control_panel.aarlo_sonnette
                        state: armed_away
                    card:
                      entity: camera.aarlo_sonnette
                      aspect_ratio: square
                      card_size: 3
                      hide:
                        - title
                        - date
                      image_click: play
                      show:
                        - motion
                        - sound
                        - image_date
                        - signal_strength
                        - captured_today
                        - image_date
                        - on_off
                        - snapshot
                        - battery_level
                      top_date: true
                      top_status: false
                      top_title: false
                      type: custom:aarlo-glance
                  - type: conditional
                    conditions:
                      - entity: binary_sensor.aarlo_ding_sonnette
                        state: 'on'
                    card:
                      entity: camera.aarlo_sonnette
                      hide:
                        - title
                        - date
                      image_click: play
                      show:
                        - motion
                        - sound
                        - image_date
                        - signal_strength
                        - captured_today
                        - image_date
                      top_date: true
                      top_status: false
                      top_title: false
                      type: custom:aarlo-glance
                  - type: custom:button-card
                    entity: sensor.compteur_autre
                    name: presents
                    template:
                      - bouton_badge
                    label: |
                      [[[
                        return states['sensor.autres_appareils_on'].state;
                      ]]]
                    styles:
                      card:
                        - width: null
                        - border-radius: 10px
                      label:
                        - color: |
                            [[[
                              if (entity.state == '0')
                                return "darkgrey" ;
                              return "lightgrey";
                            ]]]
                        - font-size: |
                            [[[
                              if (entity.state == '0')
                                return "80%" ;
                              return "90%";
                            ]]]
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        command: popup
                        title: Autres appareils
                        card:
                          type: vertical-stack
                          cards:
                            - type: grid
                              cards:
                                - type: custom:button-card
                                  entity: group.tv
                                  template:
                                    - petit_bouton_rond
                                  styles:
                                    custom_fields:
                                      notification:
                                        - background-color: |
                                            [[[
                                              if (states['sensor.compteur_tv'].state == 0)
                                                return 'rgba(0,191,205,0)';
                                             return 'rgba(0,0,0,0.5)';
                                            ]]]
                                        - color: |
                                            [[[
                                              if (states['sensor.compteur_tv'].state == 0)
                                                return 'rgba(0,191,205,0)';
                                             return 'lightgrey';
                                            ]]]
                                  custom_fields:
                                    notification: >
                                      [[[ return
                                      Math.floor(states['sensor.compteur_tv'].state
                                      ) ]]]
                                  double_tap_action:
                                    action: more-info
                                  state:
                                    - value: 'on'
                                      styles:
                                        card:
                                          - background-color: var(--pastille_multimedia_on)
                                        img_cell:
                                          - background-color: var(--pastille_multimedia_on)
                                        icon:
                                          - color: var(--icon_on)
                                  tap_action:
                                    action: more-info
                                - type: custom:button-card
                                  entity: sensor.musique3
                                  icon: mdi:speaker
                                  template:
                                    - petit_bouton_rond
                                  styles:
                                    custom_fields:
                                      notification:
                                        - background-color: |
                                            [[[
                                              if (states['sensor.compteur_musique'].state == 0)
                                                return 'rgba(0,191,205,0)';
                                             return 'rgba(0,0,0,0.5)';
                                            ]]]
                                        - color: |
                                            [[[
                                              if (states['sensor.compteur_musique'].state == 0)
                                                return 'rgba(0,191,205,0)';
                                             return 'lightgrey';
                                            ]]]
                                  custom_fields:
                                    notification: >
                                      [[[ return
                                      Math.floor(states['sensor.compteur_musique'].state
                                      ) ]]]
                                  double_tap_action:
                                    action: more-info
                                  state:
                                    - value: playing
                                      styles:
                                        card:
                                          - background-color: var(--pastille_multimedia_on)
                                        img_cell:
                                          - background-color: var(--pastille_multimedia_on)
                                        icon:
                                          - color: var(--icon_on)
                                  tap_action:
                                    action: fire-dom-event
                                    browser_mod:
                                      command: popup
                                      title: Musique
                                      card:
                                        type: vertical-stack
                                        cards:
                                          - type: conditional
                                            conditions:
                                              - entity: media_player.partout
                                                state: playing
                                            card:
                                              info: scroll
                                              artwork: full-cover-fit
                                              hide:
                                                volume: false
                                                source: true
                                                power: false
                                                name: false
                                                icon: true
                                                controls: false
                                              type: custom:mini-media-player
                                              entity: media_player.partout
                                          - type: conditional
                                            conditions:
                                              - entity: media_player.sejour
                                                state: playing
                                            card:
                                              info: scroll
                                              artwork: full-cover-fit
                                              hide:
                                                volume: false
                                                source: true
                                                power: false
                                                name: false
                                                icon: true
                                                controls: false
                                              type: custom:mini-media-player
                                              entity: media_player.sejour
                                          - type: conditional
                                            conditions:
                                              - entity: media_player.la_cuisine
                                                state: playing
                                            card:
                                              info: scroll
                                              artwork: full-cover-fit
                                              hide:
                                                volume: false
                                                source: true
                                                power: false
                                                name: false
                                                icon: true
                                                controls: false
                                              type: custom:mini-media-player
                                              entity: media_player.la_cuisine
                                          - type: conditional
                                            conditions:
                                              - entity: media_player.la_salle_de_bain
                                                state: playing
                                              - entity: media_player.partout
                                                state_not: playing
                                              - entity: media_player.etage
                                                state_not: playing
                                            card:
                                              info: scroll
                                              artwork: full-cover-fit
                                              hide:
                                                volume: false
                                                source: true
                                                power: false
                                                name: false
                                                icon: true
                                                controls: false
                                              type: custom:mini-media-player
                                              entity: media_player.la_salle_de_bain
                                          - type: conditional
                                            conditions:
                                              - entity: media_player.en_bas
                                                state: playing
                                            card:
                                              info: scroll
                                              artwork: full-cover-fit
                                              hide:
                                                volume: false
                                                source: true
                                                power: false
                                                name: false
                                                icon: true
                                                controls: false
                                              type: custom:mini-media-player
                                              entity: media_player.en_bas
                                          - type: conditional
                                            conditions:
                                              - entity: media_player.leane
                                                state: playing
                                              - entity: media_player.partout
                                                state_not: playing
                                              - entity: media_player.etage
                                                state_not: playing
                                              - entity: media_player.chambre_de_manon_et_leane
                                                state_not: playing
                                            card:
                                              info: scroll
                                              artwork: full-cover-fit
                                              hide:
                                                volume: false
                                                source: true
                                                power: false
                                                name: false
                                                icon: true
                                                controls: false
                                              type: custom:mini-media-player
                                              entity: media_player.leane
                                          - type: conditional
                                            conditions:
                                              - entity: media_player.tom
                                                state: playing
                                              - entity: media_player.partout
                                                state_not: playing
                                              - entity: media_player.etage
                                                state_not: playing
                                            card:
                                              info: scroll
                                              artwork: full-cover-fit
                                              hide:
                                                volume: false
                                                source: true
                                                power: false
                                                name: false
                                                icon: true
                                                controls: false
                                              type: custom:mini-media-player
                                              entity: media_player.tom
                                          - type: conditional
                                            conditions:
                                              - entity: media_player.nina
                                                state: playing
                                              - entity: media_player.partout
                                                state_not: playing
                                              - entity: media_player.etage
                                                state_not: playing
                                            card:
                                              info: scroll
                                              artwork: full-cover-fit
                                              hide:
                                                volume: false
                                                source: true
                                                power: false
                                                name: false
                                                icon: true
                                                controls: false
                                              type: custom:mini-media-player
                                              entity: media_player.nina
                                          - type: conditional
                                            conditions:
                                              - entity: media_player.manon
                                                state: playing
                                              - entity: media_player.partout
                                                state_not: playing
                                              - entity: media_player.etage
                                                state_not: playing
                                              - entity: media_player.chambre_de_manon_et_leane
                                                state_not: playing
                                            card:
                                              info: scroll
                                              artwork: full-cover-fit
                                              hide:
                                                volume: false
                                                source: true
                                                power: false
                                                name: false
                                                icon: true
                                                controls: false
                                              type: custom:mini-media-player
                                              entity: media_player.manon
                                          - type: conditional
                                            conditions:
                                              - entity: media_player.etage
                                                state: playing
                                              - entity: media_player.partout
                                                state_not: playing
                                            card:
                                              info: scroll
                                              artwork: full-cover-fit
                                              hide:
                                                volume: false
                                                source: true
                                                power: false
                                                name: false
                                                icon: true
                                                controls: false
                                              type: custom:mini-media-player
                                              entity: media_player.etage
                                          - type: conditional
                                            conditions:
                                              - entity: media_player.chambre_de_manon_et_leane
                                                state: playing
                                              - entity: media_player.partout
                                                state_not: playing
                                            card:
                                              info: scroll
                                              artwork: full-cover-fit
                                              hide:
                                                volume: false
                                                source: true
                                                power: false
                                                name: false
                                                icon: true
                                                controls: false
                                              type: custom:mini-media-player
                                              entity: media_player.chambre_de_manon_et_leane
                                - type: custom:button-card
                                  entity: switch.radiateur
                                  template:
                                    - petit_bouton_rond
                                    - effet
                                  state:
                                    - value: 'on'
                                      styles:
                                        card:
                                          - background-color: firebrick
                                        img_cell:
                                          - background-color: firebrick
                                        icon:
                                          - color: var(--icon_on)
                                  tap_action:
                                    action: more-info
                                  double_tap_action:
                                    action: toggle
                                - type: custom:button-card
                                  entity: group.aspis
                                  icon: phu:roborock
                                  template:
                                    - petit_bouton_rond
                                    - effet
                                  state:
                                    - value: 'on'
                                      styles:
                                        card:
                                          - background-color: var(--pastille_aspi_on)
                                        img_cell:
                                          - background-color: var(--pastille_aspi_on)
                                        icon:
                                          - color: var(--icon_on)
                                  styles:
                                    card:
                                      - border-color: |
                                          [[[
                                            if (states['vacuum.r2d2'].state == "error" || states['vacuum.wall_e'].state == "error")
                                              return 'rgba(255,0,0,0.5)';
                                            return 'rgba(190, 190, 190, 0.2)';
                                          ]]]
                                    img_cell:
                                      - animation: |
                                          [[[
                                            if (states['vacuum.r2d2'].state == "error" || states['vacuum.wall_e'].state == "error")
                                              return 'blink 1s infinite';
                                            return '';
                                          ]]]
                                    custom_fields:
                                      notification:
                                        - background-color: |
                                            [[[
                                              if (states['sensor.compteur_aspi'].state == 0)
                                                return 'rgba(0,191,205,0)';
                                             return 'rgba(0,0,0,0.5)';
                                            ]]]
                                        - color: |
                                            [[[
                                              if (states['sensor.compteur_aspi'].state == 0)
                                                return 'rgba(0,191,205,0)';
                                             return 'lightgrey';
                                            ]]]
                                  custom_fields:
                                    notification: >
                                      [[[ return
                                      Math.floor(states['sensor.compteur_aspi'].state
                                      ) ]]]
                                  double_tap_action:
                                    action: more-info
                                  tap_action:
                                    action: more-info
                                - type: custom:button-card
                                  entity: group.machines
                                  icon: mdi:dishwasher
                                  template:
                                    - petit_bouton_rond
                                    - bouton_appareil_lave_state
                                  styles:
                                    custom_fields:
                                      notification:
                                        - background-color: |
                                            [[[
                                              if (states['sensor.compteur_machines'].state == 0)
                                                return 'rgba(0,191,205,0)';
                                             return 'rgba(0,0,0,0.5)';
                                            ]]]
                                        - color: |
                                            [[[
                                              if (states['sensor.compteur_machines'].state == 0)
                                                return 'rgba(0,191,205,0)';
                                             return 'lightgrey';
                                            ]]]
                                  custom_fields:
                                    notification: >
                                      [[[ return
                                      Math.floor(states['sensor.compteur_machines'].state
                                      ) ]]]
                                  double_tap_action:
                                    action: more-info
                                  state:
                                    - value: 'on'
                                      styles:
                                        card:
                                          - background-color: var(--pastille_aspi_on)
                                        img_cell:
                                          - background-color: var(--pastille_aspi_on)
                                        icon:
                                          - color: var(--icon_on)
                                  tap_action:
                                    action: more-info
                                - type: custom:button-card
                                  entity: input_boolean.imprimante
                                  icon: mdi:printer
                                  template:
                                    - petit_bouton_rond
                                    - effet
                                  state:
                                    - value: 'on'
                                      styles:
                                        card:
                                          - background-color: var(--pastille_imprim)
                                        img_cell:
                                          - background-color: var(--pastille_imprim)
                                        icon:
                                          - color: var(--icon_on)
                                  tap_action:
                                    action: more-info
                                - type: custom:button-card
                                  entity: group.moustique_prises
                                  template:
                                    - petit_bouton_rond
                                  styles:
                                    custom_fields:
                                      notification:
                                        - background-color: |
                                            [[[
                                              if (states['sensor.compteur_moustique'].state == 0)
                                                return 'rgba(0,191,205,0)';
                                             return 'rgba(0,0,0,0.5)';
                                            ]]]
                                        - color: |
                                            [[[
                                              if (states['sensor.compteur_moustique'].state == 0)
                                                return 'rgba(0,191,205,0)';
                                             return 'lightgrey';
                                            ]]]
                                  custom_fields:
                                    notification: >
                                      [[[ return
                                      Math.floor(states['sensor.compteur_moustique'].state
                                      ) ]]]
                                  double_tap_action:
                                    action: more-info
                                  state:
                                    - value: 'on'
                                      styles:
                                        card:
                                          - background-color: var(--pastille_multimedia_on)
                                        img_cell:
                                          - background-color: var(--pastille_multimedia_on)
                                        icon:
                                          - color: var(--icon_on)
                                  tap_action:
                                    action: more-info
                              square: false
                              columns: 7
                            - type: markdown
                              content: >
                                {% if states('sensor.compteur_autre') | float >
                                0  -%}
                                  <font color='darkgrey'><b>APPAREILS</font></b>
                                {% else %}
                                  <font color='lightgrey'>🏠 Tous les appareils sont éteints
                                {% endif %}


                                 {{ states('sensor.walle_etat') }}


                                 {{ states('sensor.r2d2_etat') }}



                                 {{ states('sensor.musique_on_info') }}


                                 {{ states('sensor.tele') }}


                                 {{ states('sensor.sdb') }}


                                 {{ states('sensor.moustiques') }}


                                 {{ states('sensor.lave_vaisselle') }}


                                 {{ states('sensor.lave_linge') }}


                                 {{ states('sensor.imprimante') }}
                              style: |
                                ha-card {
                                  font-family: Avenir ; 
                                  --mdc-icon-size: 17px;   
                                  box-shadow: 1px 1px 5px 0px rgb(12, 12, 14);
                                  border-color: var(--card_border);
                                  border-style: outset;
                                  border-width: 1px;

                                }
                            - cards:
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: vacuum.wall_e
                                      name: Wall-E
                                      icon: phu:roborock
                                      template:
                                        - bouton_appareil
                                        - bouton_appareil_aspi_state
                                        - effet
                                      label: >
                                        [[[ return
                                        states['sensor.walle_state'].state;  ]]]
                                      styles:
                                        label:
                                          - color: |
                                              [[[
                                                if (states['sensor.walle_state'].state == "Nettoyage")
                                                  return 'var(--text_on)';
                                                if (states['sensor.walle_state'].state == "Retour")
                                                  return 'firebrick';
                                                if (states['sensor.walle_state'].state == "️ERREUR")
                                                  return "firebrick";
                                                if (states['sensor.walle_state'].state == "En pause")
                                                  return 'firebrick';
                                                if (states['sensor.walle_state'].state == "En charge")
                                                  return 'grey';
                                              ]]]
                                      custom_fields:
                                        batterie: |
                                          [[[ 
                                            if (states['sensor.walle_batterie'].state == 100 )
                                              return '';
                                            return states['sensor.walle_batterie'].state + "%" ]]]
                                        ic:
                                          card:
                                            type: grid
                                            cards:
                                              - type: custom:button-card
                                                entity: script.aspi_walle_demarrage
                                                show_name: false
                                                styles:
                                                  icon:
                                                    - color: var(--icon_off)
                                                    - width: 70%
                                                  card:
                                                    - background: transparent
                                                    - 'border-color:': transparent
                                                tap_action:
                                                  action: toggle
                                              - type: custom:button-card
                                                entity: script.aspi_pause
                                                show_name: false
                                                styles:
                                                  icon:
                                                    - color: var(--icon_off)
                                                    - width: 70%
                                                  card:
                                                    - background: transparent
                                                    - 'border-color:': transparent
                                                tap_action:
                                                  action: toggle
                                              - type: custom:button-card
                                                entity: script.aspi_retour_base
                                                show_name: false
                                                styles:
                                                  icon:
                                                    - color: var(--icon_off)
                                                    - width: 70%
                                                  card:
                                                    - background: transparent
                                                    - 'border-color:': transparent
                                                tap_action:
                                                  action: toggle
                                              - type: custom:button-card
                                                entity: script.sortir_l_aspi
                                                show_name: false
                                                tap_action:
                                                  action: toggle
                                                styles:
                                                  icon:
                                                    - color: var(--icon_off)
                                                    - width: 70%
                                                  card:
                                                    - background: transparent
                                                    - 'border-color:': transparent
                                            columns: 4
                                            square: false
                                    - type: custom:button-card
                                      entity: vacuum.r2d2
                                      name: R2D2
                                      icon: phu:roborock
                                      template:
                                        - bouton_appareil
                                        - bouton_appareil_aspi_state
                                        - effet
                                      label: >
                                        [[[ return
                                        states['sensor.r2d2_state'].state;  ]]]
                                      styles:
                                        label:
                                          - color: |
                                              [[[
                                                if (states['sensor.r2d2_state'].state == "Nettoyage")
                                                  return 'black';
                                                if (states['sensor.r2d2_state'].state == "Retour")
                                                  return 'firebrick';
                                                if (states['sensor.r2d2_state'].state == "️ERREUR")
                                                  return "firebrick";
                                                if (states['sensor.r2d2_state'].state == "En pause")
                                                  return 'firebrick';
                                                if (states['sensor.r2d2_state'].state == "En charge")
                                                  return 'grey';
                                              ]]]
                                      custom_fields:
                                        batterie: |
                                          [[[ 
                                            if (states['sensor.r2d2_batterie'].state == 100 )
                                              return '';
                                            return states['sensor.r2d2_batterie'].state + "%"]]]
                                        ic:
                                          card:
                                            type: grid
                                            cards:
                                              - type: custom:button-card
                                                entity: script.aspi_r2d2_demarrage
                                                show_name: false
                                                styles:
                                                  icon:
                                                    - color: var(--icon_off)
                                                    - width: 50%
                                                  card:
                                                    - background: transparent
                                                    - 'border-color:': transparent
                                                tap_action:
                                                  action: toggle
                                              - type: custom:button-card
                                                entity: script.aspi_pause
                                                show_name: false
                                                styles:
                                                  icon:
                                                    - color: var(--icon_off)
                                                    - width: 50%
                                                  card:
                                                    - background: transparent
                                                    - 'border-color:': transparent
                                                tap_action:
                                                  action: toggle
                                              - type: custom:button-card
                                                entity: script.aspi_retour_base
                                                show_name: false
                                                styles:
                                                  icon:
                                                    - color: var(--icon_off)
                                                    - width: 50%
                                                  card:
                                                    - background: transparent
                                                    - 'border-color:': transparent
                                                tap_action:
                                                  action: toggle
                                            columns: 3
                                            square: false
                                  columns: 2
                                  square: false
                              type: vertical-stack
                  - type: markdown
                    content: >
                      <b><font size= 3>{{ states('sensor.bonjour') }}</font></b>


                      {{ states('sensor.calendar_calendrier') }}<font color=
                      red>


                      {{ states('sensor.devices_hs') }}


                      </b></font><font color= darkgrey>



                      {{ states('sensor.rappel') }}


                      {{ states('sensor.minuteur') }}


                      {{ states('sensor.reveil') }}



                      {{ states('sensor.walle_etat') }}


                      {{ states('sensor.r2d2_etat') }}



                      {{ states('sensor.app_connectes') }}


                      <font size= 2>{{ states('sensor.maj_v2') }}
                    style: |
                      ha-card {
                        font-family: Avenir ; 
                        --mdc-icon-size: 17px;   
                        box-shadow: 1px 1px 5px 0px rgb(12, 12, 14);
                        border-color: var(--card_border);
                        border-style: outset;
                        border-width: 1px;

                      }
                  - type: horizontal-stack
                    cards:
                      - type: custom:button-card
                        entity: group.mode
                        name: Modes
                        template:
                          - bouton_mode
                        icon: |
                          [[[
                            if (states['input_boolean.nilemato'].state == "on" && states['sensor.compteur_modes'].state == 1)
                              return "mdi:human-female-boy";
                            if (states['automation.c_est_l_heure_d_aller_a_l_ecole'].state == "on" && states['sensor.compteur_modes'].state == 1)
                              return "mdi:bus-school";
                            if (states['input_boolean.belle_saison'].state == "on" && states['sensor.compteur_modes'].state == 1)
                              return "mdi:sunglasses";
                            if (states['input_boolean.piscine'].state == "on" && states['sensor.compteur_modes'].state == 1)
                              return "mdi:swim";
                            if (states['input_boolean.vacances'].state == "on" && states['sensor.compteur_modes'].state == 1)
                              return "mdi:airplane";
                            if (states['input_boolean.noel'].state == "on" && states['sensor.compteur_modes'].state == 1)
                              return "phu:christmas-tree-v2";
                            if (states['input_boolean.halloween'].state == "on" && states['sensor.compteur_modes'].state == 1)
                              return "mdi:halloween";
                            if (states['sensor.compteur_modes'].state == 0)
                              return "mdi:checkbox-marked-outline";
                            return "mdi:checkbox-multiple-marked-outline" ;
                          ]]]
                        label: |
                          [[[
                            if (states['input_boolean.nilemato'].state == "on" && states['sensor.compteur_modes'].state == 1)
                              return " Enfants";
                            if (states['automation.c_est_l_heure_d_aller_a_l_ecole'].state == "on" && states['sensor.compteur_modes'].state == 1)
                              return " Ecole";
                            if (states['input_boolean.belle_saison'].state == "on" && states['sensor.compteur_modes'].state == 1)
                              return " Eté";
                            if (states['input_boolean.piscine'].state == "on" && states['sensor.compteur_modes'].state == 1)
                              return " Piscine";
                            if (states['input_boolean.vacances'].state == "on" && states['sensor.compteur_modes'].state == 1)
                              return " Vacances";
                            if (states['input_boolean.noel'].state == "on" && states['sensor.compteur_modes'].state == 1)
                              return " Noël " ;
                            if (states['input_boolean.halloween'].state == "on" && states['sensor.compteur_modes'].state == 1)
                              return " Halloween";
                            if (states['sensor.compteur_modes'].state == 0)
                              return "Aucun";
                            return (states['sensor.modes'].state )  ;
                          ]]]
                        styles:
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_modes'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                    if (states['sensor.compteur_modes'].state == 1)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.5)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_modes'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                    if (states['sensor.compteur_modes'].state == 1)
                                      return 'rgba(0,191,205,0)';
                                   return 'lightgrey';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_modes'].state )
                            ]]]
                        double_tap_action:
                          action: more-info
                      - type: custom:button-card
                        entity: group.actions
                        name: Annonces
                        template:
                          - bouton_mode
                        icon: |
                          [[[
                            if (states['script.cest_lheure_daller_a_lecole'].state == "on" )
                              return "mdi-bus-school";
                            if (states['script.1590760144160'].state == "on" )
                              return "phu:rooms-mancave";
                            if (states['script.gouter'].state == "on" )
                              return "mdi:food-croissant";
                            if (states['script.a_table'].state == "on" )
                              return "mdi:silverware-variant";
                            if (states['script.annonce_au_lit'].state == "on" )
                              return "mdi:sleep";
                            if (states['script.tom_va_se_coucher'].state == "on" )
                              return "mdi:sleep";
                            return "mdi:bullhorn";
                          ]]]
                        label: |
                          [[[
                            if (states['script.cest_lheure_daller_a_lecole'].state == "on" )
                              return " Enfants";
                            if (states['script.1590760144160'].state == "on" )
                              return " Fin des écrans";
                            if (states['script.gouter'].state == "on" )
                              return " Goûter ";
                            if (states['script.a_table'].state == "on" )
                              return " A table !";
                            if (states['script.annonce_au_lit'].state == "on" )
                              return " Filles au lit";
                            if (states['script.tom_va_se_coucher'].state == "on" )
                              return " Tom au lit";
                            return "Aucune";
                          ]]]
                        double_tap_action:
                          action: more-info
            type: vertical-stack
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: vertical-stack
            cards:
              - cards:
                  - type: custom:button-card
                    template:
                      - bouton_titre_piece
                    style:
                      .: |
                        ha-card {
                            --ha-card-background: none !important;
                            box-shadow: none !important;
                            font-family: Avenir
                    name: |
                      [[[ return "Rez-de-chaussée" ]]]
                    label: |
                      [[[
                        if (states['sensor.compteur_pieces_rdc'].state == 0)
                          return "Tout est éteint" ;
                        if (states['sensor.compteur_pieces_rdc'].state == 1)
                          return "💡 " +(states['sensor.compteur_pieces_rdc'].state ) + " pièce" ;
                        return "💡 " +(states['sensor.compteur_pieces_rdc'].state ) + " pièces";
                      ]]]
                  - type: grid
                    cards:
                      - type: custom:button-card
                        entity: light.sejour2
                        template:
                          - bouton_piece
                          - bouton_piece_graph
                          - effet
                        name: Séjour
                        icon: |
                          [[[
                            if (states['sensor.compteur_sejour2'].state == 1 && states['light.lampe_de_bureau'].state == 'on' )
                              return 'mdi:desk-lamp';
                            return 'phu:rooms-living';
                          ]]]
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return (states['sensor.temp_sejour'].state )+"°"  + " / " + Math.round(entity.attributes.brightness / 2.54) + "%";
                            return (states['sensor.temp_sejour'].state ) + "°";
                          ]]]
                        styles:
                          card:
                            - box-shadow: |
                                [[[
                                  if (states['group.mouvements_sejour'].state == "on")
                                    return '1px 1px 5px 0px var(--border_mouv)';
                                  return '';
                                ]]]
                          label:
                            - color: |
                                [[[
                                  if (states['sensor.temp_sejour'].state < 19)
                                    return 'dodgerblue';
                                  if (states['sensor.temp_sejour'].state > 24)
                                    return 'red';
                                  if (entity.state == 'off')
                                    return 'var(--text_off)';
                                  if (entity.state == 'on')
                                    return 'var(--text_on)';
                                ]]]
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_sejour2'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_sejour2'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_sejour2'].state )
                            ]]]
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.sejour2
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.sejour2
                                radius: 5px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                          graph:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.sejour2
                                  state: 'off'
                              card:
                                type: custom:mini-graph-card
                                entities:
                                  - color: var(--graph_line)
                                    entity: sensor.temp_sejour
                          porte:
                            card:
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.porte_salle_a_manger
                                  show_name: false
                                  styles:
                                    icon:
                                      - width: 50%
                                    card:
                                      - border-radius: 15%
                                      - background: transparent
                                      - border-color: transparent
                                  state:
                                    - value: 'on'
                                      styles:
                                        icon:
                                          - color: var(--porte_icon)
                                    - value: 'off'
                                      styles:
                                        icon:
                                          - color: transparent
                                  tap_action:
                                    action: more-info
                              columns: 1
                              square: false
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Séjour
                            card:
                              type: vertical-stack
                              cards:
                                - type: horizontal-stack
                                  cards:
                                    - type: custom:button-card
                                      entity: sensor.temp_sejour
                                      name: meteo
                                      template:
                                        - bouton_badge
                                      label: |
                                        [[[
                                          if (states['sensor.temp_sejour'].state == 'unavailable')
                                            return "🌡 indispo" ;

                                          return "🌡 " + (states['sensor.temp_sejour'].state ) + "°";
                                        ]]]
                                      styles:
                                        card:
                                          - opacity: |
                                              [[[
                                                if (states['sensor.temp_sejour'].state == 'unavailable')
                                                  return "50%" ;
                                                return "100%";
                                              ]]]
                                    - type: custom:button-card
                                      entity: sensor.plante_lum_dracaena
                                      name: null
                                      template:
                                        - bouton_badge
                                      label: |
                                        [[[
                                          if (states['sensor.plante_lum_dracaena'].state == 'unavailable')
                                            return "🪴 indispo" ;
                                          return "🪴 " + (states['sensor.plante_lum_dracaena'].state )+" lx";
                                        ]]]
                                      styles:
                                        card:
                                          - opacity: |
                                              [[[
                                                if (states['sensor.plante_lum_dracaena'].state == 'unavailable')
                                                  return "50%" ;
                                                if (states['sensor.plante_lum_dracaena'].state == '° / °')
                                                  return "50%" ;
                                                return "100%";
                                              ]]]
                                      state:
                                        - value: unavailable
                                          operator: '!='
                                          styles:
                                            card:
                                              - border-color: |
                                                  [[[
                                                    if (states['sensor.plante_lum_dracaena'].state < 50 )
                                                      return 'rgba(30,144,255,0.9)';
                                                    return 'rgba(152, 167, 185, 0.2)';
                                                    if (states['sensor.plante_lum_dracaena'].state > 300 )
                                                      return 'rgba(178,34,34,0.9)';
                                                    return 'rgba(152, 167, 185, 0.2)';
                                                  ]]]
                                    - type: custom:button-card
                                      entity: sensor.plante_lum_pied_elephant
                                      name: null
                                      template:
                                        - bouton_badge
                                      label: |
                                        [[[
                                          if (states['sensor.plante_lum_pied_elephant'].state == 'unavailable')
                                            return "🐘 indispo" ;
                                          return "🐘 " + (states['sensor.plante_lum_pied_elephant'].state )+" lx";
                                        ]]]
                                      styles:
                                        card:
                                          - opacity: |
                                              [[[
                                                if (states['sensor.plante_lum_pied_elephant'].state == 'unavailable')
                                                  return "50%" ;
                                                if (states['sensor.plante_lum_pied_elephant'].state == '° / °')
                                                  return "50%" ;
                                                return "100%";
                                              ]]]
                                      state:
                                        - value: unavailable
                                          operator: '!='
                                          styles:
                                            card:
                                              - border-color: |
                                                  [[[
                                                    if (states['sensor.plante_lum_pied_elephant'].state < 50 )
                                                      return 'rgba(30,144,255,0.9)';
                                                    return 'rgba(152, 167, 185, 0.2)';
                                                    if (states['sensor.plante_lum_pied_elephant'].state > 300 )
                                                      return 'rgba(178,34,34,0.9)';
                                                    return 'rgba(152, 167, 185, 0.2)';
                                                  ]]]
                                - type: horizontal-stack
                                  cards:
                                    - type: custom:button-card
                                      entity: binary_sensor.porte_salle_a_manger
                                      name: SàM
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_salle_a_manger
                                      name: SàM
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_salon
                                      name: Salon
                                      template:
                                        - popup_capteur
                                - type: custom:button-card
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir
                                  show_icon: false
                                  show_name: false
                                  show_state: false
                                  show_label: true
                                  label: |
                                    [[[ return "TV et lumières" ]]]
                                  styles:
                                    label:
                                      - justify-self: center
                                      - font-size: 15px
                                      - font-weight: bold
                                      - font-style: italic
                                      - color: darkgrey
                                    card:
                                      - height: 20px
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: light.ambiance_normale
                                      name: Normal
                                      template:
                                        - popup_ambiance
                                      state:
                                        - value: 'on'
                                          styles:
                                            img_cell:
                                              - background-color: |
                                                  [[[
                                                    if (states['sensor.ambiances_sejour'].state == "Normale" )
                                                      return "rgba(255,255,0,0.7)";
                                                    return "var(--pastille_off)" ;
                                                  ]]]
                                            icon:
                                              - color: var(--icon_on)
                                              - color: |
                                                  [[[
                                                    if (states['sensor.ambiances_sejour'].state == "Normale" )
                                                      return "var(--icon_on)";
                                                    return "var(--icon_off)" ;
                                                  ]]]
                                      tap_action:
                                        action: call-service
                                        service: scene.turn_on
                                        service_data:
                                          entity_id: scene.ambiance_normale
                                    - type: custom:button-card
                                      entity: light.ambiance_normale
                                      name: Doux
                                      icon: mdi:sofa
                                      template:
                                        - popup_ambiance
                                      state:
                                        - value: 'on'
                                          styles:
                                            img_cell:
                                              - background-color: |
                                                  [[[
                                                    if (states['sensor.ambiances_sejour'].state == "Doux" )
                                                      return "rgba(186,85,211,0.5)";
                                                    return "var(--pastille_off)" ;
                                                  ]]]
                                            icon:
                                              - color: var(--icon_on)
                                              - color: |
                                                  [[[
                                                    if (states['sensor.ambiances_sejour'].state == "Doux" )
                                                      return "var(--icon_on)";
                                                    return "var(--icon_off)" ;
                                                  ]]]
                                      tap_action:
                                        action: call-service
                                        service: scene.turn_on
                                        service_data:
                                          entity_id: scene.zen
                                    - type: custom:button-card
                                      entity: light.ambiance_normale
                                      name: Repas
                                      icon: mdi:hamburger
                                      template:
                                        - popup_ambiance
                                      state:
                                        - value: 'on'
                                          styles:
                                            img_cell:
                                              - background-color: |
                                                  [[[
                                                    if (states['sensor.ambiances_sejour'].state == "Repas TV" )
                                                      return "rgba(255,0,0,0.7)";
                                                    return "var(--pastille_off)" ;
                                                  ]]]
                                            icon:
                                              - color: var(--icon_on)
                                              - color: |
                                                  [[[
                                                    if (states['sensor.ambiances_sejour'].state == "Repas TV" )
                                                      return "var(--icon_on)";
                                                    return "var(--icon_off)" ;
                                                  ]]] 
                                      tap_action:
                                        action: call-service
                                        service: script.turn_on
                                        service_data:
                                          entity_id: script.ambiance_repas
                                    - type: custom:button-card
                                      entity: light.ambiance_normale
                                      name: TV
                                      icon: mdi:television-play
                                      template:
                                        - popup_ambiance
                                      state:
                                        - value: 'on'
                                          styles:
                                            img_cell:
                                              - background-color: |
                                                  [[[
                                                    if (states['sensor.ambiances_sejour'].state == "TV" )
                                                      return "rgba(255,0,0,0.7)";
                                                    return "var(--pastille_off)" ;
                                                  ]]]
                                            icon:
                                              - color: var(--icon_on)
                                              - color: |
                                                  [[[
                                                    if (states['sensor.ambiances_sejour'].state == "TV" )
                                                      return "var(--icon_on)";
                                                    return "var(--icon_off)" ;
                                                  ]]]
                                      tap_action:
                                        action: call-service
                                        service: scene.turn_on
                                        service_data:
                                          entity_id: scene.tv
                                    - type: custom:button-card
                                      entity: light.ambiance_normale
                                      name: Apero
                                      icon: mdi:glass-cocktail
                                      template:
                                        - popup_ambiance
                                      state:
                                        - value: 'on'
                                          styles:
                                            img_cell:
                                              - background-color: |
                                                  [[[
                                                    if (states['sensor.ambiances_sejour'].state == "Apéro" )
                                                      return "rgba(255,120,120,0.5)";
                                                    return "var(--pastille_off)" ;
                                                  ]]]
                                            icon:
                                              - color: var(--icon_on)
                                              - color: |
                                                  [[[
                                                    if (states['sensor.ambiances_sejour'].state == "Apéro" )
                                                      return "var(--icon_on)";
                                                    return "var(--icon_off)" ;
                                                  ]]]
                                      tap_action:
                                        action: call-service
                                        service: script.turn_on
                                        service_data:
                                          entity_id: script.apero_lum
                                    - type: custom:button-card
                                      entity: light.ambiance_normale
                                      name: Repas invités
                                      icon: phu:rooms-dining
                                      template:
                                        - popup_ambiance
                                      state:
                                        - value: 'on'
                                          styles:
                                            img_cell:
                                              - background-color: |
                                                  [[[
                                                    if (states['sensor.ambiances_sejour'].state == "Repas invités" )
                                                      return "rgba(255,0,0,0.7)";
                                                    return "var(--pastille_off)" ;
                                                  ]]]
                                            icon:
                                              - color: var(--icon_on)
                                              - color: |
                                                  [[[
                                                    if (states['sensor.ambiances_sejour'].state == "Repas invités" )
                                                      return "var(--icon_on)";
                                                    return "var(--icon_off)" ;
                                                  ]]]
                                      tap_action:
                                        action: call-service
                                        service: script.turn_on
                                        service_data:
                                          entity_id: script.ambiance_repas_invites
                                  square: false
                                  columns: 6
                                - type: grid
                                  columns: 3
                                  square: false
                                  cards:
                                    - type: custom:button-card
                                      entity: media_player.tv_salon
                                      name: TV
                                      icon: mdi:youtube-tv
                                      template:
                                        - popup_tv
                                      label: |
                                        [[[
                                          if (states['media_player.tv_salon'].state == "on")
                                            return (states['sensor.tv_salon_source'].state );
                                          return "";
                                        ]]]
                                      styles:
                                        label:
                                          - color: |
                                              [[[
                                                  if (states['sensor.tv_salon_source'].state == "Netflix")
                                                    return "red";
                                                  return "var(--text_on)";
                                                ]]]
                                      custom_fields:
                                        ac:
                                          card:
                                            type: custom:mini-media-player
                                            entity: media_player.tv_salon
                                            toggle_power: false
                                            volume_stateless: true
                                            artwork: none
                                            hide:
                                              name: true
                                              icon: true
                                              source: true
                                              info: true
                                              power: true
                                              controls: true
                                            group: true
                                      double_tap_action:
                                        action: call-service
                                        service: script.tv_salon_on_off
                                    - type: custom:button-card
                                      entity: light.lampe_de_bureau
                                      name: Bureau
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.lampe_de_bureau
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.lampe_de_bureau
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.lampe_tele_salon
                                      template:
                                        - popup_light
                                      name: Lampe TV
                                      icon: null
                                    - type: custom:button-card
                                      entity: light.bandeau_led
                                      name: Bandeau TV
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.bandeau_led
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.bandeau_led
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.trilampe
                                      name: null
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.trilampe
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.trilampe
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.lustre_salon
                                      template:
                                        - popup_light
                                      name: Lustre salon
                                      icon: null
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.lustre_salon
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.lustre_salon
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.lustre_salle_a_manger
                                      template:
                                        - popup_light
                                      name: Lustre SàM
                                      icon: null
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.lustre_salle_a_manger
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.lustre_salle_a_manger
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.buffet
                                      template:
                                        - popup_light
                                      name: null
                                      icon: null
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.buffet
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.buffet
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.lampadaire
                                      template:
                                        - popup_light
                                      name: null
                                      icon: null
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.lampadaire
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.lampadaire
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                - header:
                                    title: 🛋 Séjour ️
                                    show: true
                                    show_states: true
                                    colorize_states: true
                                  experimental:
                                    brush: true
                                  graph_span: 72h
                                  brush:
                                    selection_span: 12h
                                  apex_config:
                                    grid:
                                      show: false
                                    legend:
                                      fontSize: 12px
                                      height: 40
                                    dataLabels:
                                      enabled: false
                                    stroke:
                                      width: 3
                                      curve: smooth
                                    fill:
                                      type: gradient
                                      gradient:
                                        type: vertical
                                        shadeIntensity: 0.8
                                        inverseColors: false
                                        opacityFrom: 0.5
                                        opacityTo: 0
                                        stops:
                                          - - 0
                                            - 50
                                            - 100
                                    tooltip:
                                      enabled: true
                                    yaxis:
                                      - show: true
                                        decimalsInFloat: 0
                                        labels:
                                          style:
                                            colors: '#FFB62E'
                                            fontSize: 12px
                                        forceNiceScale: true
                                      - show: true
                                        decimalsInFloat: 0
                                        opposite: true
                                        labels:
                                          style:
                                            colors: '#2eb9ff'
                                            fontSize: 12px
                                        forceNiceScale: true
                                    xaxis:
                                      axisBorder:
                                        show: false
                                      labels:
                                        style:
                                          fontSize: 14px
                                  series:
                                    - entity: sensor.temp_sejour
                                      name: température
                                      show:
                                        extremas: false
                                      type: area
                                      color: tomato
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.hum_sejour
                                      name: humidité
                                      show:
                                        extremas: false
                                      type: area
                                      color: dodgerblue
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.temp_sejour
                                      name: SdB
                                      color: tomato
                                      fill_raw: last
                                      type: area
                                      stroke_width: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                      show:
                                        in_brush: true
                                        in_chart: false
                                  type: custom:apexcharts-card
                      - type: custom:button-card
                        entity: light.entree_2
                        template:
                          - bouton_piece
                          - bouton_piece_graph
                          - effet
                        name: Entrée
                        icon: phu:wall-spot
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return (states['sensor.temp_couloir_rdc'].state ) + "°" + " / " + Math.round(entity.attributes.brightness / 2.54) + "%";
                            return (states['sensor.temp_couloir_rdc'].state ) + "°";
                          ]]]
                        styles:
                          card:
                            - box-shadow: |
                                [[[
                                  if (states['binary_sensor.mouv_couloir'].state == "on")
                                    return '1px 1px 5px 0px var(--border_mouv)';
                                  return '';
                                ]]]
                          label:
                            - color: |
                                [[[
                                  if (states['sensor.temp_couloir_rdc'].state < 19)
                                    return 'dodgerblue';
                                  if (states['sensor.temp_couloir_rdc'].state > 24)
                                    return 'red';
                                  if (entity.state == 'off')
                                    return 'var(--text_off)';
                                  if (entity.state == 'on')
                                    return 'var(--text_on)';
                                ]]]
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_entree'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_entree'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_entree'].state )
                            ]]]
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.entree_2
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.entree_2
                                radius: 5px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                          porte:
                            card:
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.porte_entree
                                  show_name: false
                                  styles:
                                    icon:
                                      - width: 50%
                                    card:
                                      - border-radius: 15%
                                      - background: transparent
                                      - border-color: transparent
                                  state:
                                    - value: 'on'
                                      styles:
                                        icon:
                                          - color: var(--porte_icon)
                                    - value: 'off'
                                      styles:
                                        icon:
                                          - color: transparent
                                  tap_action:
                                    action: more-info
                              columns: 1
                              square: false
                          graph:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.entree_2
                                  state: 'off'
                              card:
                                type: custom:mini-graph-card
                                entities:
                                  - color: var(--graph_line)
                                    entity: sensor.temp_couloir_rdc
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Entrée, veilleuse et couloir
                            card:
                              type: vertical-stack
                              cards:
                                - type: horizontal-stack
                                  cards:
                                    - type: custom:button-card
                                      entity: sensor.temp_couloir_rdc
                                      name: meteo
                                      template:
                                        - bouton_badge
                                      label: |
                                        [[[
                                          if (states['sensor.temp_couloir_rdc'].state == 'unavailable')
                                            return "🌡 indispo" ;

                                          return "🌡 " + (states['sensor.temp_couloir_rdc'].state ) + "°";
                                        ]]]
                                      styles:
                                        card:
                                          - opacity: |
                                              [[[
                                                if (states['sensor.temp_couloir_rdc'].state == 'unavailable')
                                                  return "50%" ;
                                                return "100%";
                                              ]]]
                                - type: grid
                                  square: false
                                  cards:
                                    - type: custom:button-card
                                      entity: binary_sensor.porte_entree
                                      name: null
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_couloir
                                      name: Couloir
                                      template:
                                        - popup_capteur
                                - type: custom:button-card
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir
                                  show_icon: false
                                  show_name: false
                                  show_state: false
                                  show_label: true
                                  label: |
                                    [[[ return "Lumières" ]]]
                                  styles:
                                    label:
                                      - justify-self: center
                                      - font-size: 15px
                                      - font-weight: bold
                                      - font-style: italic
                                      - color: darkgrey
                                    card:
                                      - height: 20px
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: light.entree
                                      template:
                                        - popup_light
                                      name: null
                                      icon: null
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.entree
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.entree
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.couloir
                                      template:
                                        - popup_light
                                      name: null
                                      icon: null
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.couloir
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.couloir
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.aqara_hub_54e1
                                      template:
                                        - popup_light
                                      name: null
                                      icon: null
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.aqara_hub_54e1
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.aqara_hub_54e1
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                  square: false
                                  columns: 3
                                - header:
                                    title: 🏠 Entrée / couloir ️
                                    show: true
                                    show_states: true
                                    colorize_states: true
                                  experimental:
                                    brush: true
                                  graph_span: 72h
                                  brush:
                                    selection_span: 12h
                                  apex_config:
                                    grid:
                                      show: false
                                    legend:
                                      fontSize: 12px
                                      height: 40
                                    dataLabels:
                                      enabled: false
                                    stroke:
                                      width: 3
                                      curve: smooth
                                    fill:
                                      type: gradient
                                      gradient:
                                        type: vertical
                                        shadeIntensity: 0.8
                                        inverseColors: false
                                        opacityFrom: 0.5
                                        opacityTo: 0
                                        stops:
                                          - - 0
                                            - 50
                                            - 100
                                    tooltip:
                                      enabled: true
                                    yaxis:
                                      - show: true
                                        decimalsInFloat: 0
                                        labels:
                                          style:
                                            colors: '#FFB62E'
                                            fontSize: 12px
                                        forceNiceScale: true
                                      - show: true
                                        decimalsInFloat: 0
                                        opposite: true
                                        labels:
                                          style:
                                            colors: '#2eb9ff'
                                            fontSize: 12px
                                        forceNiceScale: true
                                    xaxis:
                                      axisBorder:
                                        show: false
                                      labels:
                                        style:
                                          fontSize: 14px
                                  series:
                                    - entity: sensor.temp_couloir_rdc
                                      name: température
                                      show:
                                        extremas: false
                                      type: area
                                      color: tomato
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.hum_couloir_rdc
                                      name: humidité
                                      show:
                                        extremas: false
                                      type: area
                                      color: dodgerblue
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.temp_couloir_rdc
                                      name: SdB
                                      color: tomato
                                      fill_raw: last
                                      type: area
                                      stroke_width: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                      show:
                                        in_brush: true
                                        in_chart: false
                                  type: custom:apexcharts-card
                      - type: custom:button-card
                        entity: binary_sensor.porte_cuisine
                        template:
                          - bouton_piece
                          - bouton_piece_graph
                          - effet
                        icon: mdi:food-fork-drink
                        name: Cuisine
                        label: >
                          [[[ return (states['sensor.temp_cuisine'].state ) +
                          "°";

                          ]]]
                        styles:
                          label:
                            - color: |
                                [[[
                                  if (states['sensor.temp_couloir_rdc'].state < 19)
                                    return 'dodgerblue';
                                  if (states['sensor.temp_couloir_rdc'].state > 24)
                                    return 'red';
                                  if (entity.state == 'off')
                                    return 'var(--text_off)';
                                  if (entity.state == 'on')
                                    return 'var(--text_on)';
                                ]]]
                        tap_action:
                          action: more-info
                        custom_fields:
                          porte:
                            card:
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.porte_cuisine
                                  show_name: false
                                  styles:
                                    icon:
                                      - width: 50%
                                    card:
                                      - border-radius: 15%
                                      - background: transparent
                                      - border-color: transparent
                                  state:
                                    - value: 'on'
                                      styles:
                                        icon:
                                          - color: var(--porte_icon)
                                    - value: 'off'
                                      styles:
                                        icon:
                                          - color: transparent
                                  tap_action:
                                    action: more-info
                              columns: 1
                              square: false
                          graph:
                            card:
                              type: conditional
                              conditions:
                                - entity: binary_sensor.porte_cuisine
                                  state: 'off'
                              card:
                                type: custom:mini-graph-card
                                entities:
                                  - color: var(--graph_line)
                                    entity: sensor.temp_cuisine
                      - type: custom:button-card
                        entity: light.wc
                        template:
                          - bouton_piece
                          - effet
                        name: Lavabo
                        icon: phu:rooms-toilet
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return  Math.round(entity.attributes.brightness / 2.54) + "%";
                            return "";
                          ]]]
                        styles:
                          card:
                            - box-shadow: |
                                [[[
                                  if (states['binary_sensor.mouv_salle_d_eau'].state == "on")
                                    return '1px 1px 5px 0px var(--border_mouv)';
                                  return '';
                                ]]]
                          label:
                            - color: |
                                [[[
                                  if (entity.state == 'off')
                                    return 'var(--text_off)';
                                  if (entity.state == 'on')
                                    return 'var(--text_on)';
                                ]]]
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_wc'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_wc'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_wc'].state ) ]]]
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.wc
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.wc
                                radius: 5px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Lavabo WC
                            card:
                              type: vertical-stack
                              cards:
                                - type: grid
                                  square: false
                                  columns: 3
                                  cards:
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_salle_d_eau
                                      name: Mouvements
                                      template:
                                        - popup_capteur
                                - type: grid
                                  square: false
                                  columns: 2
                                  cards:
                                    - type: custom:button-card
                                      entity: light.wc_gauche
                                      name: null
                                      template:
                                        - popup_light
                                    - type: custom:button-card
                                      entity: light.wc_droit
                                      name: null
                                      template:
                                        - popup_light
                      - type: custom:button-card
                        entity: light.parents
                        name: Parents
                        icon: phu:rooms-bedroom
                        template:
                          - bouton_piece
                          - bouton_piece_graph
                          - effet
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return (states['sensor.temp_parents'].state ) + "°" + " / " + Math.round(entity.attributes.brightness / 2.54) + "%";
                            return (states['sensor.temp_parents'].state ) + "°";
                          ]]]
                        styles:
                          label:
                            - color: |
                                [[[
                                  if (states['sensor.temp_parents'].state < 19)
                                    return 'dodgerblue';
                                  if (states['sensor.temp_parents'].state > 24)
                                    return 'red';
                                  if (entity.state == 'off')
                                    return 'var(--text_off)';
                                  if (entity.state == 'on')
                                    return 'var(--text_on)';
                                ]]]
                          card:
                            - border_color: |
                                [[[
                                  if (states['sensor.temp_parents'].state < 19)
                                    return 'dodgerblue';
                                  if (states['sensor.temp_parents'].state > 24)
                                    return 'red';
                                ]]]
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_parents'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_parents'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_parents'].state )
                            ]]]
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.parents
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.parents
                                radius: 5px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                          porte:
                            card:
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.porte_chambre_parents
                                  show_name: false
                                  styles:
                                    icon:
                                      - width: 50%
                                    card:
                                      - border-radius: 15%
                                      - background: transparent
                                      - border-color: transparent
                                  state:
                                    - value: 'on'
                                      styles:
                                        icon:
                                          - color: var(--porte_icon)
                                    - value: 'off'
                                      styles:
                                        icon:
                                          - color: transparent
                                  tap_action:
                                    action: more-info
                              columns: 1
                              square: false
                          graph:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.parents
                                  state: 'off'
                              card:
                                type: custom:mini-graph-card
                                entities:
                                  - color: var(--graph_line)
                                    entity: sensor.temp_parents
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Chambre parentale
                            card:
                              type: vertical-stack
                              cards:
                                - type: horizontal-stack
                                  cards:
                                    - type: custom:button-card
                                      entity: sensor.temp_parents
                                      name: meteo
                                      template:
                                        - bouton_badge
                                      label: |
                                        [[[
                                          if (states['sensor.temp_parents'].state == 'unavailable')
                                            return "🌡 indispo" ;

                                          return "🌡 " + (states['sensor.temp_parents'].state ) + "°";
                                        ]]]
                                      styles:
                                        card:
                                          - opacity: |
                                              [[[
                                                if (states['sensor.temp_parents'].state == 'unavailable')
                                                  return "50%" ;
                                                return "100%";
                                              ]]]
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: binary_sensor.porte_chambre_parents
                                      name: Fenêtre
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      name: Volets
                                      icon: mdi:window-shutter
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      name: Chauffage
                                      icon: mdi:air-conditioner
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: switch.tele_des_parents
                                      icon: mdi:youtube-tv
                                      name: TV
                                      template:
                                        - popup_light
                                    - type: custom:button-card
                                      entity: light.lustre_parents
                                      name: Lustre
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.lustre_parents
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.lustre_parents
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.chevet
                                      name: Chevet
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.chevet
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.chevet
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                  square: false
                                  columns: 3
                                - type: custom:button-card
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir
                                  show_icon: false
                                  show_name: false
                                  show_state: false
                                  show_label: true
                                  label: |
                                    [[[ return "Multimédia " ]]]
                                  styles:
                                    label:
                                      - justify-self: center
                                      - font-size: 15px
                                      - font-weight: bold
                                      - font-style: italic
                                      - color: darkgrey
                                    card:
                                      - height: 20px
                                - info: scroll
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  group: false
                                  artwork: material
                                  entity: media_player.cube_tv
                                - info: scroll
                                  artwork: material
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  group: false
                                  style: |
                                    ha-card {
                                      font-size: 70%;
                                      background: var(--my_color2) ;
                                    }
                                  entity: media_player.chambre_des_parents
                      - type: custom:button-card
                        entity: light.cagibi
                        template:
                          - bouton_piece
                          - effet
                        name: Garage
                        icon: |
                          [[[
                            if (states['binary_sensor.porte_garage'].state == "on")
                              return "mdi:garage-open-variant";
                            return "mdi:garage-variant";
                          ]]]
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return  Math.round(entity.attributes.brightness / 2.54) + "%" ;
                            return "";
                          ]]]
                        styles:
                          card:
                            - box-shadow: |
                                [[[
                                  if (states['binary_sensor.mouv_garage'].state == "on")
                                    return '1px 1px 5px 0px var(--border_mouv)';
                                  return '';
                                ]]]
                          label:
                            - color: |
                                [[[
                                  if (entity.state == 'off')
                                    return 'var(--text_off)';
                                  if (entity.state == 'on')
                                    return 'var(--text_on)';
                                ]]]
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Garage
                            card:
                              type: vertical-stack
                              cards:
                                - type: grid
                                  square: false
                                  columns: 3
                                  cards:
                                    - type: custom:button-card
                                      entity: binary_sensor.porte_cagibi
                                      name: null
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.porte_garage
                                      name: null
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_garage
                                      name: Mouvements
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: light.cagibi
                                      name: null
                                      template:
                                        - popup_light
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.cagibi
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.cagibi
                                radius: 5px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                          porte:
                            card:
                              type: grid
                              cards:
                                - type: custom:button-card
                                  entity: group.portes_garage
                                  show_name: false
                                  styles:
                                    icon:
                                      - width: 50%
                                    card:
                                      - border-radius: 15%
                                      - background: transparent
                                      - border-color: transparent
                                  state:
                                    - value: 'on'
                                      styles:
                                        icon:
                                          - color: var(--porte_icon)
                                    - value: 'off'
                                      styles:
                                        icon:
                                          - color: transparent
                                  tap_action:
                                    action: more-info
                              columns: 1
                              square: false
                    columns: 2
                    square: false
                  - type: custom:button-card
                    template:
                      - bouton_titre_piece
                    style:
                      .: |
                        ha-card {
                            --ha-card-background: none !important;
                            box-shadow: none !important;
                            font-family: Avenir
                    name: |
                      [[[ return "Etage" ]]]
                    label: |
                      [[[
                        if (states['sensor.compteur_pieces_etage'].state == 0)
                          return "Tout est éteint" ;
                        if (states['sensor.compteur_pieces_etage'].state == 1)
                          return "💡 " +(states['sensor.compteur_pieces_etage'].state ) + " pièce" ;
                        return "💡 " +(states['sensor.compteur_pieces_etage'].state ) + " pièces";
                      ]]]
                  - type: grid
                    cards:
                      - type: custom:button-card
                        entity: light.tom
                        name: Tom
                        icon: mdi:bat
                        template:
                          - bouton_piece
                          - bouton_piece_graph
                          - effet
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return (states['sensor.temp_tom'].state ) + "°" + " / " + Math.round(entity.attributes.brightness / 2.54) + "%";
                            return (states['sensor.temp_tom'].state ) + "°";
                          ]]]
                        styles:
                          card:
                            - box-shadow: |
                                [[[
                                  if (states['binary_sensor.mouv_tom'].state == "on")
                                    return '1px 1px 5px 0px var(--border_mouv)';
                                  return '';
                                ]]]
                          label:
                            - color: |
                                [[[
                                  if (states['sensor.temp_tom'].state < 19)
                                    return 'dodgerblue';
                                  if (states['sensor.temp_tom'].state > 24)
                                    return 'red';
                                  if (entity.state == 'off')
                                    return 'var(--text_off)';
                                  if (entity.state == 'on')
                                    return 'var(--text_on)';
                                ]]]
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_tom'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_tom'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_tom'].state ) ]]]
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.tom
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.tom
                                radius: 5px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                          graph:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.tom
                                  state: 'off'
                              card:
                                type: custom:mini-graph-card
                                entities:
                                  - color: var(--graph_line)
                                    entity: sensor.temp_tom
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Chambre de Tom
                            card:
                              type: vertical-stack
                              cards:
                                - type: horizontal-stack
                                  cards:
                                    - type: custom:button-card
                                      entity: sensor.temp_tom
                                      name: meteo
                                      template:
                                        - bouton_badge
                                      label: |
                                        [[[
                                          if (states['sensor.temp_tom'].state == 'unavailable')
                                            return "🌡 indispo" ;

                                          return "🌡 " + (states['sensor.temp_tom'].state ) + "°";
                                        ]]]
                                      styles:
                                        card:
                                          - opacity: |
                                              [[[
                                                if (states['sensor.temp_tom'].state == 'unavailable')
                                                  return "50%" ;
                                                return "100%";
                                              ]]]
                                    - type: custom:button-card
                                      entity: sensor.mouv_tom_luminosite
                                      name: null
                                      template:
                                        - bouton_badge
                                      label: |
                                        [[[
                                          if (states['sensor.mouv_tom_luminosite'].state == 'unavailable')
                                            return "🔆 indispo" ;
                                          return "🔆 " + (states['sensor.mouv_tom_luminosite'].state )+" lx";
                                        ]]]
                                      styles:
                                        card:
                                          - opacity: |
                                              [[[
                                                if (states['sensor.mouv_tom_luminosite'].state == 'unavailable')
                                                  return "50%" ;
                                                if (states['sensor.mouv_tom_luminosite'].state == '° / °')
                                                  return "50%" ;
                                                return "100%";
                                              ]]]
                                      state:
                                        - value: unavailable
                                          operator: '!='
                                          styles:
                                            card:
                                              - border-color: |
                                                  [[[
                                                    if (states['sensor.mouv_tom_luminosite'].state < 50 )
                                                      return 'rgba(30,144,255,0.9)';
                                                    return 'rgba(152, 167, 185, 0.2)';
                                                    if (states['sensor.mouv_tom_luminosite'].state > 300 )
                                                      return 'rgba(178,34,34,0.9)';
                                                    return 'rgba(152, 167, 185, 0.2)';
                                                  ]]]
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_tom
                                      name: Mouvements
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      name: Volets
                                      icon: mdi:window-shutter
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      name: Chauffage
                                      icon: mdi:air-conditioner
                                      template:
                                        - popup_capteur
                                  square: false
                                  columns: 3
                                - type: custom:button-card
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir
                                  show_icon: false
                                  show_name: false
                                  show_state: false
                                  show_label: true
                                  label: |
                                    [[[ return "Lumières" ]]]
                                  styles:
                                    label:
                                      - justify-self: center
                                      - font-size: 15px
                                      - font-weight: bold
                                      - font-style: italic
                                      - color: darkgrey
                                    card:
                                      - height: 20px
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: light.lustre_tom
                                      template:
                                        - popup_light
                                      name: null
                                      icon: null
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.lustre_tom
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.lustre_tom
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.chevet_tom
                                      template:
                                        - popup_light
                                      name: null
                                      icon: null
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.chevet_tom
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.chevet_tom
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.lampe_de_bureau_tom
                                      template:
                                        - popup_light
                                      name: null
                                      icon: null
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.lampe_de_bureau_tom
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.lampe_de_bureau_tom
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: switch.moustique_tom
                                      template:
                                        - popup_light
                                  square: false
                                  columns: 3
                                - type: custom:button-card
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir
                                  show_icon: false
                                  show_name: false
                                  show_state: false
                                  show_label: true
                                  label: |
                                    [[[ return "Multimédia et programmes" ]]]
                                  styles:
                                    label:
                                      - justify-self: center
                                      - font-size: 15px
                                      - font-weight: bold
                                      - font-style: italic
                                      - color: darkgrey
                                    card:
                                      - height: 20px
                                - entities:
                                    - entity: media_player.tom
                                      name: Echo
                                    - entity: sensor.tom_reveil
                                      icon: mdi:alarm
                                      name: Réveil
                                    - entity: switch.tom_do_not_disturb_switch
                                      name: Ne pas déranger
                                    - entity: automation.reveil_tom
                                      name: Auto du réveil
                                      icon: mdi:progress-clock
                                    - entity: automation.tom_allumage_auto
                                      name: Lum auto journée
                                      icon: mdi:weather-sunset-down
                                  style: |
                                    ha-card {
                                      border: 0px solid dodgerblue ; 
                                      border-radius: 10px ;
                                      color: dodgerblue;
                                      font-size: 80%; 
                                    }
                                  type: entities
                      - type: custom:button-card
                        entity: light.manon_et_leane
                        name: Manon Léane
                        icon: mdi:death-star-variant
                        template:
                          - bouton_piece
                          - bouton_piece_graph
                          - effet
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return (states['sensor.temp_manon'].state ) + "°" + " / " + Math.round(entity.attributes.brightness / 2.54) + "%";
                            return (states['sensor.temp_manon'].state ) + "°";
                          ]]]
                        styles:
                          card:
                            - box-shadow: |
                                [[[
                                  if (states['group.mouvements_grande_chambre'].state == "on")
                                    return '1px 1px 5px 0px var(--border_mouv)';
                                  return '';
                                ]]]
                          label:
                            - color: |
                                [[[
                                  if (states['sensor.temp_manon'].state < 19)
                                    return 'dodgerblue';
                                  if (states['sensor.temp_manon'].state > 24)
                                    return 'red';
                                  if (entity.state == 'off')
                                    return 'var(--text_off)';
                                  if (entity.state == 'on')
                                    return 'var(--text_on)';
                                ]]]
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_manon'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_manon'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_manon'].state )
                            ]]]
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.manon_et_leane
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.manon_et_leane
                                radius: 5px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                          graph:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.manon_et_leane
                                  state: 'off'
                              card:
                                type: custom:mini-graph-card
                                entities:
                                  - color: var(--graph_line)
                                    entity: sensor.temp_manon
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Chambre Manon et Léane
                            card:
                              type: vertical-stack
                              cards:
                                - type: horizontal-stack
                                  cards:
                                    - type: custom:button-card
                                      entity: sensor.temp_manon
                                      name: meteo
                                      template:
                                        - bouton_badge
                                      label: |
                                        [[[
                                          if (states['sensor.temp_manon'].state == 'unavailable')
                                            return "🌡 indispo" ;

                                          return "🌡 " + (states['sensor.temp_manon'].state ) + "°";
                                        ]]]
                                      styles:
                                        card:
                                          - opacity: |
                                              [[[
                                                if (states['sensor.temp_manon'].state == 'unavailable')
                                                  return "50%" ;
                                                return "100%";
                                              ]]]
                                    - type: custom:button-card
                                      entity: sensor.mouv_manon_luminosite
                                      name: null
                                      template:
                                        - bouton_badge
                                      label: |
                                        [[[
                                          if (states['sensor.mouv_manon_luminosite'].state == 'unavailable')
                                            return "🔆 indispo" ;
                                          return "🔆 " + (states['sensor.mouv_manon_luminosite'].state )+" lx";
                                        ]]]
                                      styles:
                                        card:
                                          - opacity: |
                                              [[[
                                                if (states['sensor.mouv_manon_luminosite'].state == 'unavailable')
                                                  return "50%" ;
                                                if (states['sensor.mouv_manon_luminosite'].state == '° / °')
                                                  return "50%" ;
                                                return "100%";
                                              ]]]
                                      state:
                                        - value: unavailable
                                          operator: '!='
                                          styles:
                                            card:
                                              - border-color: |
                                                  [[[
                                                    if (states['sensor.mouv_manon_luminosite'].state < 50 )
                                                      return 'rgba(30,144,255,0.9)';
                                                    return 'rgba(152, 167, 185, 0.2)';
                                                    if (states['sensor.mouv_manon_luminosite'].state > 300 )
                                                      return 'rgba(178,34,34,0.9)';
                                                    return 'rgba(152, 167, 185, 0.2)';
                                                  ]]]
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_manon
                                      name: Manon
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_leane
                                      name: Léane
                                      template:
                                        - popup_capteur
                                  square: false
                                  columns: 3
                                - type: custom:button-card
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir
                                  show_icon: false
                                  show_name: false
                                  show_state: false
                                  show_label: true
                                  label: |
                                    [[[ return "Lumières" ]]]
                                  styles:
                                    label:
                                      - justify-self: center
                                      - font-size: 15px
                                      - font-weight: bold
                                      - font-style: italic
                                      - color: darkgrey
                                    card:
                                      - height: 20px
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: light.lustre_manon_et_leane
                                      name: Lustre
                                      template:
                                        - popup_light
                                      icon: null
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.lustre_manon_et_leane
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.lustre_manon_et_leane
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.chevet_manon
                                      name: Chevet Manon
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.chevet_manon
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.chevet_manon
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: switch.arbre_lumineux
                                      name: Arbre
                                      template:
                                        - popup_light
                                    - type: custom:button-card
                                      entity: light.lampe_manon_et_leane
                                      name: Lampe
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.lampe_manon_et_leane
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.lampe_manon_et_leane
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.chevet_leane
                                      name: Chevet Lélé
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.chevet_leane
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.chevet_leane
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: switch.moustique_manon
                                      name: Prise
                                      template:
                                        - popup_light
                                  square: false
                                  columns: 3
                                - type: custom:button-card
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir
                                  show_icon: false
                                  show_name: false
                                  show_state: false
                                  show_label: true
                                  label: |
                                    [[[ return "Multimédia et programmes" ]]]
                                  styles:
                                    label:
                                      - justify-self: center
                                      - font-size: 15px
                                      - font-weight: bold
                                      - font-style: italic
                                      - color: darkgrey
                                    card:
                                      - height: 20px
                                - entities:
                                    - entity: media_player.grande_chambre
                                      name: Grande chambre
                                  style: |
                                    ha-card {
                                      border: 0px solid dodgerblue ; 
                                      border-radius: 10px ;
                                      color: dodgerblue;
                                      font-size: 80%; 
                                      background: var(--my_color2);
                                    }
                                  type: entities
                                - entities:
                                    - entity: media_player.manon
                                      name: null
                                    - entity: sensor.manon_reveil
                                      icon: mdi:alarm
                                      name: Réveil
                                    - entity: switch.manon_do_not_disturb_switch
                                      name: Ne pas déranger
                                    - entity: automation.reveil_manon
                                      name: Auto du réveil
                                      icon: mdi:progress-clock
                                    - entity: >-
                                        automation.manon_leane_chambre_allumage_auto
                                      name: Lum auto journée
                                      icon: mdi:weather-sunset-down
                                  style: |
                                    ha-card {
                                      border: 0px solid red ; 
                                      border-radius: 10px ;
                                      color: red;
                                      font-size: 80%; 
                                      background: var(--my_color2);
                                    }
                                  type: entities
                                - entities:
                                    - entity: media_player.leane
                                      name: null
                                    - entity: sensor.leane_reveil
                                      icon: mdi:alarm
                                      name: Réveil
                                    - entity: switch.leane_do_not_disturb_switch
                                      name: Ne pas déranger
                                    - entity: automation.reveil_leane
                                      name: Auto du réveil
                                      icon: mdi:progress-clock
                                  style: |
                                    ha-card {
                                      border: 0px solid dodgerblue ; 
                                      border-radius: 10px ;
                                      color: violet;
                                      font-size: 80%; 
                                      background: var(--my_color2);
                                    }
                                  type: entities
                      - type: custom:button-card
                        entity: light.nina
                        name: Nina
                        icon: phu:rooms-kids-bedroom
                        template:
                          - bouton_piece
                          - bouton_piece_graph
                          - effet
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return (states['sensor.temp_nina'].state ) + "°" + " / " + Math.round(entity.attributes.brightness / 2.54) + "%";
                            return (states['sensor.temp_nina'].state ) + "°";
                          ]]]
                        styles:
                          card:
                            - box-shadow: |
                                [[[
                                  if (states['binary_sensor.mouv_nina'].state == "on")
                                    return '1px 1px 5px 0px var(--border_mouv)';
                                  return '';
                                ]]]
                          label:
                            - color: |
                                [[[
                                  if (states['sensor.temp_nina'].state < 19)
                                    return 'dodgerblue';
                                  if (states['sensor.temp_nina'].state > 24)
                                    return 'red';
                                  if (entity.state == 'off')
                                    return 'var(--text_off)';
                                  if (entity.state == 'on')
                                    return 'var(--text_on)';
                                ]]]
                          custom_fields:
                            notification:
                              - background-color: |
                                  [[[
                                    if (states['sensor.compteur_nina'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'rgba(0,0,0,0.4)';
                                  ]]]
                              - color: |
                                  [[[
                                    if (states['sensor.compteur_nina'].state == 0)
                                      return 'rgba(0,191,205,0)';
                                   return 'var(--text_on)';
                                  ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_nina'].state )
                            ]]]
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.nina
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.nina
                                radius: 5px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                          graph:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.nina
                                  state: 'off'
                              card:
                                type: custom:mini-graph-card
                                entities:
                                  - color: var(--graph_line)
                                    entity: sensor.temp_nina
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Chambre de Nina
                            card:
                              type: vertical-stack
                              cards:
                                - type: horizontal-stack
                                  cards:
                                    - type: custom:button-card
                                      entity: sensor.temp_nina
                                      name: meteo
                                      template:
                                        - bouton_badge
                                      label: |
                                        [[[
                                          if (states['sensor.temp_nina'].state == 'unavailable')
                                            return "🌡 indispo" ;

                                          return "🌡 " + (states['sensor.temp_nina'].state ) + "°";
                                        ]]]
                                      styles:
                                        card:
                                          - opacity: |
                                              [[[
                                                if (states['sensor.temp_nina'].state == 'unavailable')
                                                  return "50%" ;
                                                return "100%";
                                              ]]]
                                    - type: custom:button-card
                                      entity: sensor.mouv_nina_luminosite
                                      name: null
                                      template:
                                        - bouton_badge
                                      label: |
                                        [[[
                                          if (states['sensor.mouv_nina_luminosite'].state == 'unavailable')
                                            return "🔆 indispo" ;
                                          return "🔆 " + (states['sensor.mouv_nina_luminosite'].state )+" lx";
                                        ]]]
                                      styles:
                                        card:
                                          - opacity: |
                                              [[[
                                                if (states['sensor.mouv_nina_luminosite'].state == 'unavailable')
                                                  return "50%" ;
                                                if (states['sensor.mouv_nina_luminosite'].state == '° / °')
                                                  return "50%" ;
                                                return "100%";
                                              ]]]
                                      state:
                                        - value: unavailable
                                          operator: '!='
                                          styles:
                                            card:
                                              - border-color: |
                                                  [[[
                                                    if (states['sensor.mouv_nina_luminosite'].state < 50 )
                                                      return 'rgba(30,144,255,0.9)';
                                                    return 'rgba(152, 167, 185, 0.2)';
                                                    if (states['sensor.mouv_nina_luminosite'].state > 300 )
                                                      return 'rgba(178,34,34,0.9)';
                                                    return 'rgba(152, 167, 185, 0.2)';
                                                  ]]]
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_nina
                                      name: Mouvements
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      name: Volets
                                      icon: mdi:window-shutter
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      name: Chauffage
                                      icon: mdi:air-conditioner
                                      template:
                                        - popup_capteur
                                  square: false
                                  columns: 3
                                - type: custom:button-card
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir
                                  show_icon: false
                                  show_name: false
                                  show_state: false
                                  show_label: true
                                  label: |
                                    [[[ return "Lumières" ]]]
                                  styles:
                                    label:
                                      - justify-self: center
                                      - font-size: 15px
                                      - font-weight: bold
                                      - font-style: italic
                                      - color: darkgrey
                                    card:
                                      - height: 20px
                                  square: false
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: light.lampe_de_bureau_nina
                                      name: Bureau
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.lampe_de_bureau_nina
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.lampe_de_bureau_nina
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.lustre_nina
                                      name: Lustre
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.lustre_nina
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.lustre_nina
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.chevet_nina
                                      name: Chevet
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.chevet_nina
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.chevet_nina
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: switch.guirlande_nina
                                      name: Guirlande
                                      template:
                                        - popup_light
                                    - type: custom:button-card
                                      entity: light.lampadaire_nina
                                      name: Lampadaire
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.lampadaire_nina
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.lampadaire_nina
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: switch.moustique_nina
                                      name: Anti-Moustique
                                      template:
                                        - popup_light
                                  square: false
                                  columns: 3
                                - type: custom:button-card
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir
                                  show_icon: false
                                  show_name: false
                                  show_state: false
                                  show_label: true
                                  label: |
                                    [[[ return "Multimédia et programmes" ]]]
                                  styles:
                                    label:
                                      - justify-self: center
                                      - font-size: 15px
                                      - font-weight: bold
                                      - font-style: italic
                                      - color: darkgrey
                                    card:
                                      - height: 20px
                                - entities:
                                    - entity: media_player.nina
                                      name: null
                                    - entity: sensor.nina_reveil
                                      icon: mdi:alarm
                                      name: Réveil
                                    - entity: switch.nina_do_not_disturb_switch
                                      name: Ne pas déranger
                                    - entity: automation.reveil_nina
                                      name: Auto du réveil
                                      icon: mdi:progress-clock
                                    - entity: automation.nina_chambre_allumage_auto
                                      name: Lum auto journée
                                      icon: mdi:weather-sunset-down
                                  style: |
                                    ha-card {
                                      border: 0px solid red ; 
                                      border-radius: 10px ;
                                      color: pink;
                                      font-size: 80%; 
                                      background: var(--my_color2);
                                    }
                                  type: entities
                      - type: custom:button-card
                        entity: switch.radiateur
                        name: SDB
                        icon: phu:rooms-bathroom
                        template:
                          - bouton_piece
                          - bouton_piece_graph_fixe
                          - effet
                        label: >
                          [[[ return (states['sensor.temp_salle_de_bain'].state
                          ) + "°" ;

                          ]]]
                        styles:
                          label:
                            - color: |
                                [[[
                                  if (states['sensor.temp_salle_de_bain'].state < 19)
                                    return 'dodgerblue';
                                  if (states['sensor.temp_salle_de_bain'].state > 24)
                                    return 'red';
                                  if (entity.state == 'off')
                                    return 'var(--text_off)';
                                  if (entity.state == 'on')
                                    return 'var(--text_on)';
                                ]]]
                        custom_fields:
                          graph_fixe:
                            card:
                              type: custom:mini-graph-card
                              entities:
                                - color: var(--graph_line)
                                  entity: sensor.temp_salle_de_bain
                          circle: >
                            [[[ if (entity.state === 'on' &&
                            entity.attributes.brightness) {
                               const brightness = Math.round(entity.attributes.brightness / 2.54);
                               const radius = 17.5; const circumference = radius * 2 * Math.PI; 
                               return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="darkslategrey" stroke-width="1.5" fill="none" style="
                               transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - brightness / 100 * circumference};" />
                               <text x="50%" y="54%" fill="darkslategrey" font-size="15" text-anchor="middle" alignment-baseline="middle">${brightness}<tspan font-size="10">%</tspan></text></svg>`; } ]]]
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Salle de bain
                            card:
                              type: custom:vertical-stack-in-card
                              style: |
                                ha-card {
                                  border-radius: 20px;
                                  background: var(--my_color2);
                                }
                              cards:
                                - type: picture
                                  image: /local/header/header_sdb2.png
                                  tap_action:
                                    action: more-info
                                  hold_action:
                                    action: none
                                  style: |
                                    ha-card {
                                      border-radius: 20px 20px 0px 0px; 
                                      background: var(--my_color2);
                                    }
                                - type: entities
                                  entities:
                                    - entity: switch.radiateur
                                      secondary_info: last-changed
                                      name: null
                                    - entity: media_player.la_salle_de_bain
                                  style: |
                                    ha-card {
                                      border-radius: 15px; 
                                      background: var(--my_color2);
                                      font-size: 12px;
                                      color: grey;
                                    }
                                - header:
                                    title: 🚿Salle de bains ️
                                    show: true
                                    show_states: true
                                    colorize_states: true
                                  experimental:
                                    brush: true
                                  graph_span: 72h
                                  brush:
                                    selection_span: 12h
                                  apex_config:
                                    grid:
                                      show: false
                                    legend:
                                      fontSize: 12px
                                      height: 40
                                    dataLabels:
                                      enabled: false
                                    stroke:
                                      width: 3
                                      curve: smooth
                                    fill:
                                      type: gradient
                                      gradient:
                                        type: vertical
                                        shadeIntensity: 0.8
                                        inverseColors: false
                                        opacityFrom: 0.5
                                        opacityTo: 0
                                        stops:
                                          - - 0
                                            - 50
                                            - 100
                                    tooltip:
                                      enabled: true
                                    yaxis:
                                      - show: true
                                        decimalsInFloat: 0
                                        labels:
                                          style:
                                            colors: '#FFB62E'
                                            fontSize: 12px
                                        forceNiceScale: true
                                      - show: true
                                        decimalsInFloat: 0
                                        opposite: true
                                        labels:
                                          style:
                                            colors: '#2eb9ff'
                                            fontSize: 12px
                                        forceNiceScale: true
                                    xaxis:
                                      axisBorder:
                                        show: false
                                      labels:
                                        style:
                                          fontSize: 14px
                                  series:
                                    - entity: sensor.temp_salle_de_bain
                                      name: température
                                      show:
                                        extremas: false
                                      type: area
                                      color: yellow
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.hum_salle_de_bain
                                      name: humidité
                                      show:
                                        extremas: false
                                      type: area
                                      color: dodgerblue
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.temp_salle_de_bain
                                      name: SdB
                                      color: yellow
                                      fill_raw: last
                                      type: area
                                      stroke_width: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                      show:
                                        in_brush: true
                                        in_chart: false
                                  type: custom:apexcharts-card
                      - type: custom:button-card
                        entity: light.escalier
                        name: Esacalier
                        icon: mdi:stairs
                        template:
                          - bouton_piece
                          - effet
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return Math.round(entity.attributes.brightness / 2.54) + "%";
                            return "";
                          ]]]
                        styles:
                          card:
                            - box-shadow: |
                                [[[
                                  if (states['binary_sensor.mouv_escalier'].state == "on")
                                    return '1px 1px 5px 0px var(--border_mouv)';
                                  return '';
                                ]]]
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.escalier
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.escalier
                                radius: 5px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Escaliers et palier
                            card:
                              type: vertical-stack
                              cards:
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_escalier
                                      name: Escalier
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_palier
                                      name: Palier
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: sensor.mouv_palier_lum
                                      name: Luminosité
                                      template:
                                        - popup_capteur
                                  square: false
                                - type: custom:button-card
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir
                                  show_icon: false
                                  show_name: false
                                  show_state: false
                                  show_label: true
                                  label: |
                                    [[[ return "Lumières" ]]]
                                  styles:
                                    label:
                                      - justify-self: center
                                      - font-size: 15px
                                      - font-weight: bold
                                      - font-style: italic
                                      - color: darkgrey
                                    card:
                                      - height: 20px
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: light.escaliers
                                      name: Escalier et Palier
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.escaliers
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.escaliers
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.escalier
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.escalier
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.escalier
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.palier
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.palier
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.palier
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                  square: false
                                  columns: 3
                      - type: custom:button-card
                        entity: light.palier
                        name: Palier
                        icon: phu:rooms-attic
                        template:
                          - bouton_piece
                          - effet
                        color: auto
                        label: |
                          [[[
                            if (entity.state == 'on' )
                              return (states['sensor.mouv_palier_lum'].state ) + " lx" + " / " + Math.round(entity.attributes.brightness / 2.54) + "%";
                            return (states['sensor.mouv_palier_lum'].state ) + " lx";
                          ]]]
                        styles:
                          card:
                            - box-shadow: |
                                [[[
                                  if (states['binary_sensor.mouv_palier'].state == "on")
                                    return '1px 1px 5px 0px var(--border_mouv)';
                                  return '';
                                ]]]
                          label:
                            - color: |
                                [[[
                                  if (entity.state == 'off')
                                    return 'var(--text_off)';
                                  if (entity.state == 'on')
                                    return 'var(--text_on)';
                                ]]]
                        custom_fields:
                          lum:
                            card:
                              type: conditional
                              conditions:
                                - entity: light.palier
                                  state: 'on'
                              card:
                                type: custom:my-slider
                                entity: light.palier
                                radius: 5px
                                height: 15px
                                mainSliderColor: var(--button-card-light-color-no-temperature)
                                thumbHorizontalPadding: 0px
                                thumbVerticalPadding: 0px
                                thumbWidth: 2px
                                minSet: 1
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: fire-dom-event
                          browser_mod:
                            command: popup
                            title: Escaliers et palier
                            card:
                              type: vertical-stack
                              cards:
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_escalier
                                      name: Escalier
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: binary_sensor.mouv_palier
                                      name: Palier
                                      template:
                                        - popup_capteur
                                    - type: custom:button-card
                                      entity: sensor.mouv_palier_lum
                                      name: Luminosité
                                      template:
                                        - popup_capteur
                                  square: false
                                - type: custom:button-card
                                  style:
                                    .: |
                                      ha-card {
                                          --ha-card-background: none !important;
                                          box-shadow: none !important;
                                          font-family: Avenir
                                  show_icon: false
                                  show_name: false
                                  show_state: false
                                  show_label: true
                                  label: |
                                    [[[ return "Lumières" ]]]
                                  styles:
                                    label:
                                      - justify-self: center
                                      - font-size: 15px
                                      - font-weight: bold
                                      - font-style: italic
                                      - color: darkgrey
                                    card:
                                      - height: 20px
                                - type: grid
                                  cards:
                                    - type: custom:button-card
                                      entity: light.escaliers
                                      name: Escalier et Palier
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.escaliers
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.escaliers
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.escalier
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.escalier
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.escalier
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                    - type: custom:button-card
                                      entity: light.palier
                                      template:
                                        - popup_light
                                      custom_fields:
                                        lum:
                                          card:
                                            type: conditional
                                            conditions:
                                              - entity: light.palier
                                                state: 'on'
                                            card:
                                              type: custom:my-slider
                                              entity: light.palier
                                              radius: 5px
                                              height: 15px
                                              mainSliderColor: >-
                                                var(--button-card-light-color-no-temperature)
                                              thumbHorizontalPadding: 0px
                                              thumbVerticalPadding: 0px
                                              thumbWidth: 2px
                                              minSet: 1
                                  square: false
                                  columns: 3
                    columns: 2
                    square: false
                type: vertical-stack
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - cards:
              - type: custom:button-card
                template:
                  - bouton_titre_piece
                style:
                  .: |
                    ha-card {
                        --ha-card-background: none !important;
                        box-shadow: none !important;
                        font-family: Avenir
                name: |
                  [[[ return "Multimédia" ]]]
                label: |
                  [[[
                    if (states['sensor.compteur_multimedia'].state == 0)
                      return "Tout est éteint" ;
                    if (states['sensor.compteur_multimedia'].state == 1)
                      return "🔊 " +(states['sensor.compteur_multimedia'].state ) + " en cours" ;
                    return "🔊 " +(states['sensor.compteur_multimedia'].state ) + " en cours";
                  ]]]
              - type: grid
                cards:
                  - type: custom:button-card
                    entity: media_player.tv_salon
                    name: TV salon
                    icon: |
                      [[[
                        if (states['sensor.tv_salon_source'].state == "Netflix")
                          return "phu:netflix";
                        if (states['sensor.tv_salon_source'].state == "Prime Video")
                          return "phu:amazon-logo";
                        if (states['sensor.tv_salon_source'].state == "DD Externe")
                          return "mdi:movie-open";
                        return "mdi:television";
                      ]]]
                    template:
                      - bouton_tv
                      - state_unavailable
                      - effet
                    label: |
                      [[[
                        if (states['media_player.tv_salon'].state == "on")
                          return (states['sensor.tv_salon_source'].state );
                        return "";
                      ]]]
                    styles:
                      label:
                        - color: |
                            [[[
                                if (states['sensor.tv_salon_source'].state == "Netflix")
                                  return "red";
                                return "var(--text_on)";
                              ]]]
                    custom_fields:
                      circle: |
                        [[[ if (entity.state == 'on' ) {
                           ;
                           const radius = 20.5; const circumference = radius * 2 * Math.PI; 
                           return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="grey" stroke-width="1.5" fill="none" style="
                           transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - states['sensor.tv_salon_vol'].state / 40 * circumference};" />
                           <text x="50%" y="54%" fill="lightgrey" font-size="15" text-anchor="middle" alignment-baseline="middle">${states['sensor.tv_salon_vol'].state}<tspan font-size="10"></tspan></text></svg>`; } ]]]
                      ac:
                        card:
                          type: custom:mini-media-player
                          entity: media_player.tv_salon
                          toggle_power: false
                          volume_stateless: true
                          artwork: none
                          hide:
                            name: true
                            icon: true
                            source: true
                            info: true
                            power: true
                            controls: true
                          group: true
                    double_tap_action:
                      action: call-service
                      service: script.tv_salon_on_off
                      service_data: null
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        command: popup
                        title: TV et programme
                        card:
                          type: vertical-stack
                          cards:
                            - type: custom:mini-media-player
                              entity: media_player.tv_salon
                              name: TV Salon
                              icon: mdi:television
                              source: full
                              sound_mode: icon
                              info: scroll
                              artwork: material
                            - aspect_ratio: 200%
                              type: iframe
                              url: >-
                                https://www.programme-tv.net/programme/programme-tnt.html
                  - type: custom:button-card
                    entity: switch.tele_des_parents
                    name: TV parents
                    icon: |
                      [[[
                        if (states['sensor.tv_parents_source'].state == "Netflix")
                          return "phu:netflix";
                        if (states['sensor.tv_parents_source'].state == "DD Externe")
                          return "mdi:movie-open";
                        return "mdi:television";
                      ]]]
                    template:
                      - bouton_tv
                      - effet
                    label: |
                      [[[
                        if ( entity.state  == 'on')
                          return (states['sensor.tv_parents_source'].state );
                        if ( entity.state  == 'off')
                          return '';
                        return '';
                      ]]]
                    styles:
                      label:
                        - color: |
                            [[[
                                if (states['sensor.tv_parents_source'].state == "Netflix")
                                  return "red";
                                return "var(--text_on)";
                              ]]]
                    double_tap_action:
                      action: toggle
                    tap_action:
                      action: more-info
                columns: 2
                square: false
              - type: grid
                cards:
                  - type: conditional
                    conditions:
                      - entity: sensor.musique_rdc_on
                        state: playing
                    card:
                      type: custom:swipe-card
                      parameters:
                        effect: fade
                        fadeEffect:
                          crossFade: true
                        autoplay:
                          delay: 3000
                        speed: 2000
                      cards:
                        - type: custom:button-card
                          entity: sensor.musique_rdc_on
                          name: RDC
                          icon: mdi:speaker
                          template:
                            - bouton_multimedia
                            - effet
                          label: |
                            [[[
                              if (states['sensor.musique_rdc_on'].state == "playing")
                                return "En cours";
                              return "";
                            ]]]
                          styles:
                            custom_fields:
                              notification:
                                - background-color: |
                                    [[[
                                      if (states['sensor.compteur_musique_rdc'].state == 0)
                                        return 'rgba(0,191,205,0)';
                                     return 'rgba(128,128,128,0.0)';
                                    ]]]
                                - color: |
                                    [[[
                                      if (states['sensor.compteur_musique_rdc'].state == 0)
                                        return 'transparent';
                                     return 'var(--text_on)';
                                    ]]]
                          custom_fields:
                            circle: >
                              [[[ if (entity.state === 'on' &&
                              entity.attributes.brightness) {
                                 const brightness = Math.round(entity.attributes.brightness / 2.54);
                                 const radius = 20.5; const circumference = radius * 2 * Math.PI; 
                                 return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="darkslategrey" stroke-width="1.5" fill="none" style="
                                 transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - brightness / 100 * circumference};" />
                                 <text x="50%" y="54%" fill="lightgrey" font-size="14" text-anchor="middle" alignment-baseline="middle">${brightness}<tspan font-size="10">%</tspan></text></svg>`; } ]]]
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_musique_rdc'].state
                              ) ]]]
                          tap_action:
                            action: fire-dom-event
                            browser_mod:
                              command: popup
                              title: Musique
                              card:
                                type: vertical-stack
                                cards:
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.partout
                                        state: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.partout
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.sejour
                                        state: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.sejour
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.la_cuisine
                                        state: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.la_cuisine
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.la_salle_de_bain
                                        state: playing
                                      - entity: media_player.partout
                                        state_not: playing
                                      - entity: media_player.etage
                                        state_not: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.la_salle_de_bain
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.en_bas
                                        state: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.en_bas
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.leane
                                        state: playing
                                      - entity: media_player.partout
                                        state_not: playing
                                      - entity: media_player.etage
                                        state_not: playing
                                      - entity: media_player.chambre_de_manon_et_leane
                                        state_not: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.leane
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.tom
                                        state: playing
                                      - entity: media_player.partout
                                        state_not: playing
                                      - entity: media_player.etage
                                        state_not: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.tom
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.nina
                                        state: playing
                                      - entity: media_player.partout
                                        state_not: playing
                                      - entity: media_player.etage
                                        state_not: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.nina
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.manon
                                        state: playing
                                      - entity: media_player.partout
                                        state_not: playing
                                      - entity: media_player.etage
                                        state_not: playing
                                      - entity: media_player.chambre_de_manon_et_leane
                                        state_not: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.manon
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.etage
                                        state: playing
                                      - entity: media_player.partout
                                        state_not: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.etage
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.chambre_de_manon_et_leane
                                        state: playing
                                      - entity: media_player.partout
                                        state_not: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.chambre_de_manon_et_leane
                                  - type: entities
                                    entities:
                                      - media_player.sejour
                                      - media_player.la_cuisine
                                      - media_player.en_bas
                                      - media_player.tom
                                      - media_player.manon
                                      - media_player.nina
                                      - media_player.leane
                                      - media_player.chambre_de_manon_et_leane
                                      - media_player.la_salle_de_bain
                                      - media_player.etage
                                      - media_player.partout
                        - type: conditional
                          conditions:
                            - entity: media_player.partout
                              state: playing
                          card:
                            info: scroll
                            artwork: full-cover-fit
                            hide:
                              volume: true
                              source: true
                              power: true
                              name: false
                              icon: true
                              controls: true
                            type: custom:mini-media-player
                            entity: media_player.partout
                        - type: conditional
                          conditions:
                            - entity: media_player.sejour
                              state: playing
                          card:
                            info: scroll
                            artwork: full-cover-fit
                            hide:
                              volume: true
                              source: true
                              power: true
                              name: false
                              icon: true
                              controls: true
                            type: custom:mini-media-player
                            entity: media_player.sejour
                        - type: conditional
                          conditions:
                            - entity: media_player.la_cuisine
                              state: playing
                          card:
                            info: scroll
                            artwork: full-cover-fit
                            hide:
                              volume: true
                              source: true
                              power: true
                              name: false
                              icon: true
                              controls: true
                            type: custom:mini-media-player
                            entity: media_player.la_cuisine
                        - type: conditional
                          conditions:
                            - entity: media_player.en_bas
                              state: playing
                          card:
                            info: scroll
                            artwork: full-cover-fit
                            hide:
                              volume: true
                              source: true
                              power: true
                              name: false
                              icon: true
                              controls: true
                            type: custom:mini-media-player
                            entity: media_player.en_bas
                      columns: 2
                  - type: conditional
                    conditions:
                      - entity: sensor.musique_rdc_on
                        state_not: playing
                    card:
                      type: custom:button-card
                      entity: sensor.musique_rdc_on
                      name: RDC
                      icon: mdi:speaker
                      template:
                        - bouton_multimedia
                        - effet
                      label: |
                        [[[
                          if (states['sensor.musique_rdc_on'].state == "playing")
                            return "En cours";
                          return "";
                        ]]]
                      styles:
                        custom_fields:
                          notification:
                            - background-color: |
                                [[[
                                  if (states['sensor.compteur_musique_rdc'].state == 0)
                                    return 'rgba(0,191,205,0)';
                                 return 'rgba(128,128,128,0.0)';
                                ]]]
                            - color: |
                                [[[
                                  if (states['sensor.compteur_musique_rdc'].state == 0)
                                    return 'transparent';
                                 return 'var(--text_on)';
                                ]]]
                      custom_fields:
                        circle: >
                          [[[ if (entity.state === 'on' &&
                          entity.attributes.brightness) {
                             const brightness = Math.round(entity.attributes.brightness / 2.54);
                             const radius = 20.5; const circumference = radius * 2 * Math.PI; 
                             return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="darkslategrey" stroke-width="1.5" fill="none" style="
                             transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - brightness / 100 * circumference};" />
                             <text x="50%" y="54%" fill="lightgrey" font-size="14" text-anchor="middle" alignment-baseline="middle">${brightness}<tspan font-size="10">%</tspan></text></svg>`; } ]]]
                        notification: >
                          [[[ return
                          Math.floor(states['sensor.compteur_musique_rdc'].state
                          ) ]]]
                      tap_action:
                        action: fire-dom-event
                        browser_mod:
                          command: popup
                          title: Musique
                          card:
                            type: vertical-stack
                            cards:
                              - type: conditional
                                conditions:
                                  - entity: media_player.partout
                                    state: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.partout
                              - type: conditional
                                conditions:
                                  - entity: media_player.sejour
                                    state: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.sejour
                              - type: conditional
                                conditions:
                                  - entity: media_player.la_cuisine
                                    state: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.la_cuisine
                              - type: conditional
                                conditions:
                                  - entity: media_player.la_salle_de_bain
                                    state: playing
                                  - entity: media_player.partout
                                    state_not: playing
                                  - entity: media_player.etage
                                    state_not: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.la_salle_de_bain
                              - type: conditional
                                conditions:
                                  - entity: media_player.en_bas
                                    state: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.en_bas
                              - type: conditional
                                conditions:
                                  - entity: media_player.leane
                                    state: playing
                                  - entity: media_player.partout
                                    state_not: playing
                                  - entity: media_player.etage
                                    state_not: playing
                                  - entity: media_player.chambre_de_manon_et_leane
                                    state_not: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.leane
                              - type: conditional
                                conditions:
                                  - entity: media_player.tom
                                    state: playing
                                  - entity: media_player.partout
                                    state_not: playing
                                  - entity: media_player.etage
                                    state_not: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.tom
                              - type: conditional
                                conditions:
                                  - entity: media_player.nina
                                    state: playing
                                  - entity: media_player.partout
                                    state_not: playing
                                  - entity: media_player.etage
                                    state_not: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.nina
                              - type: conditional
                                conditions:
                                  - entity: media_player.manon
                                    state: playing
                                  - entity: media_player.partout
                                    state_not: playing
                                  - entity: media_player.etage
                                    state_not: playing
                                  - entity: media_player.chambre_de_manon_et_leane
                                    state_not: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.manon
                              - type: conditional
                                conditions:
                                  - entity: media_player.etage
                                    state: playing
                                  - entity: media_player.partout
                                    state_not: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.etage
                              - type: conditional
                                conditions:
                                  - entity: media_player.chambre_de_manon_et_leane
                                    state: playing
                                  - entity: media_player.partout
                                    state_not: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.chambre_de_manon_et_leane
                              - type: entities
                                entities:
                                  - media_player.sejour
                                  - media_player.la_cuisine
                                  - media_player.en_bas
                                  - media_player.tom
                                  - media_player.manon
                                  - media_player.nina
                                  - media_player.leane
                                  - media_player.chambre_de_manon_et_leane
                                  - media_player.la_salle_de_bain
                                  - media_player.etage
                                  - media_player.partout
                  - type: conditional
                    conditions:
                      - entity: sensor.musique_etage_on
                        state: playing
                    card:
                      type: custom:swipe-card
                      parameters:
                        effect: fade
                        fadeEffect:
                          crossFade: true
                        autoplay:
                          delay: 3000
                        speed: 2000
                      cards:
                        - type: custom:button-card
                          entity: sensor.musique_etage_on
                          name: Etage
                          icon: mdi:speaker
                          template:
                            - bouton_multimedia
                            - effet
                          label: |
                            [[[
                              if (states['sensor.musique_etage_on'].state == "playing")
                                return "En cours";
                              return "";
                            ]]]
                          styles:
                            custom_fields:
                              notification:
                                - background-color: |
                                    [[[
                                      if (states['sensor.compteur_musique_etage'].state == 0)
                                        return 'rgba(0,191,205,0)';
                                     return 'rgba(128,128,128,0.0)';
                                    ]]]
                                - color: |
                                    [[[
                                      if (states['sensor.compteur_musique_etage'].state == 0)
                                        return 'transparent';
                                     return 'var(--text_on)';
                                    ]]]
                          custom_fields:
                            circle: >
                              [[[ if (entity.state === 'on' &&
                              entity.attributes.brightness) {
                                 const brightness = Math.round(entity.attributes.brightness / 2.54);
                                 const radius = 20.5; const circumference = radius * 2 * Math.PI; 
                                 return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="darkslategrey" stroke-width="1.5" fill="none" style="
                                 transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - brightness / 100 * circumference};" />
                                 <text x="50%" y="54%" fill="lightgrey" font-size="14" text-anchor="middle" alignment-baseline="middle">${brightness}<tspan font-size="10">%</tspan></text></svg>`; } ]]]
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_musique_etage'].state
                              ) ]]]
                          tap_action:
                            action: fire-dom-event
                            browser_mod:
                              command: popup
                              title: Musique
                              card:
                                type: vertical-stack
                                cards:
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.partout
                                        state: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.partout
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.sejour
                                        state: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.sejour
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.la_cuisine
                                        state: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.la_cuisine
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.la_salle_de_bain
                                        state: playing
                                      - entity: media_player.partout
                                        state_not: playing
                                      - entity: media_player.etage
                                        state_not: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.la_salle_de_bain
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.en_bas
                                        state: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.en_bas
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.leane
                                        state: playing
                                      - entity: media_player.partout
                                        state_not: playing
                                      - entity: media_player.etage
                                        state_not: playing
                                      - entity: media_player.chambre_de_manon_et_leane
                                        state_not: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.leane
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.tom
                                        state: playing
                                      - entity: media_player.partout
                                        state_not: playing
                                      - entity: media_player.etage
                                        state_not: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.tom
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.nina
                                        state: playing
                                      - entity: media_player.partout
                                        state_not: playing
                                      - entity: media_player.etage
                                        state_not: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.nina
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.manon
                                        state: playing
                                      - entity: media_player.partout
                                        state_not: playing
                                      - entity: media_player.etage
                                        state_not: playing
                                      - entity: media_player.chambre_de_manon_et_leane
                                        state_not: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.manon
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.etage
                                        state: playing
                                      - entity: media_player.partout
                                        state_not: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.etage
                                  - type: conditional
                                    conditions:
                                      - entity: media_player.chambre_de_manon_et_leane
                                        state: playing
                                      - entity: media_player.partout
                                        state_not: playing
                                    card:
                                      info: scroll
                                      artwork: full-cover-fit
                                      hide:
                                        volume: false
                                        source: true
                                        power: false
                                        name: false
                                        icon: true
                                        controls: false
                                      type: custom:mini-media-player
                                      entity: media_player.chambre_de_manon_et_leane
                                  - type: entities
                                    entities:
                                      - media_player.sejour
                                      - media_player.la_cuisine
                                      - media_player.en_bas
                                      - media_player.tom
                                      - media_player.manon
                                      - media_player.nina
                                      - media_player.leane
                                      - media_player.chambre_de_manon_et_leane
                                      - media_player.la_salle_de_bain
                                      - media_player.etage
                                      - media_player.partout
                        - type: conditional
                          conditions:
                            - entity: media_player.la_salle_de_bain
                              state: playing
                            - entity: media_player.partout
                              state_not: playing
                            - entity: media_player.etage
                              state_not: playing
                          card:
                            info: scroll
                            artwork: full-cover-fit
                            hide:
                              volume: true
                              source: true
                              power: true
                              name: false
                              icon: true
                              controls: true
                            type: custom:mini-media-player
                            entity: media_player.la_salle_de_bain
                        - type: conditional
                          conditions:
                            - entity: media_player.leane
                              state: playing
                            - entity: media_player.partout
                              state_not: playing
                            - entity: media_player.etage
                              state_not: playing
                            - entity: media_player.chambre_de_manon_et_leane
                              state_not: playing
                          card:
                            info: scroll
                            artwork: full-cover-fit
                            hide:
                              volume: true
                              source: true
                              power: true
                              name: false
                              icon: true
                              controls: true
                            type: custom:mini-media-player
                            entity: media_player.leane
                        - type: conditional
                          conditions:
                            - entity: media_player.tom
                              state: playing
                            - entity: media_player.partout
                              state_not: playing
                            - entity: media_player.etage
                              state_not: playing
                          card:
                            info: scroll
                            artwork: full-cover-fit
                            hide:
                              volume: true
                              source: true
                              power: true
                              name: false
                              icon: true
                              controls: true
                            type: custom:mini-media-player
                            entity: media_player.tom
                        - type: conditional
                          conditions:
                            - entity: media_player.nina
                              state: playing
                            - entity: media_player.partout
                              state_not: playing
                            - entity: media_player.etage
                              state_not: playing
                          card:
                            info: scroll
                            artwork: full-cover-fit
                            hide:
                              volume: true
                              source: true
                              power: true
                              name: false
                              icon: true
                              controls: true
                            type: custom:mini-media-player
                            entity: media_player.nina
                        - type: conditional
                          conditions:
                            - entity: media_player.manon
                              state: playing
                            - entity: media_player.partout
                              state_not: playing
                            - entity: media_player.etage
                              state_not: playing
                            - entity: media_player.chambre_de_manon_et_leane
                              state_not: playing
                          card:
                            info: scroll
                            artwork: full-cover-fit
                            hide:
                              volume: true
                              source: true
                              power: true
                              name: false
                              icon: true
                              controls: true
                            type: custom:mini-media-player
                            entity: media_player.manon
                        - type: conditional
                          conditions:
                            - entity: media_player.etage
                              state: playing
                            - entity: media_player.partout
                              state_not: playing
                          card:
                            info: scroll
                            artwork: full-cover-fit
                            hide:
                              volume: true
                              source: true
                              power: true
                              name: false
                              icon: true
                              controls: true
                            type: custom:mini-media-player
                            entity: media_player.etage
                        - type: conditional
                          conditions:
                            - entity: media_player.chambre_de_manon_et_leane
                              state: playing
                            - entity: media_player.partout
                              state_not: playing
                          card:
                            info: scroll
                            artwork: full-cover-fit
                            hide:
                              volume: true
                              source: true
                              power: true
                              name: false
                              icon: true
                              controls: true
                            type: custom:mini-media-player
                            entity: media_player.chambre_de_manon_et_leane
                      columns: 2
                  - type: conditional
                    conditions:
                      - entity: sensor.musique_etage_on
                        state: 'off'
                    card:
                      type: custom:button-card
                      entity: sensor.musique_etage_on
                      name: Etage
                      icon: mdi:speaker
                      template:
                        - bouton_multimedia
                        - effet
                      label: |
                        [[[
                          if (states['sensor.musique_etage_on'].state == "playing")
                            return "En cours";
                          return "";
                        ]]]
                      styles:
                        custom_fields:
                          notification:
                            - background-color: |
                                [[[
                                  if (states['sensor.compteur_musique_etage'].state == 0)
                                    return 'rgba(0,191,205,0)';
                                 return 'rgba(128,128,128,0.0)';
                                ]]]
                            - color: |
                                [[[
                                  if (states['sensor.compteur_musique_etage'].state == 0)
                                    return 'transparent';
                                 return 'var(--text_on)';
                                ]]]
                      custom_fields:
                        circle: >
                          [[[ if (entity.state === 'on' &&
                          entity.attributes.brightness) {
                             const brightness = Math.round(entity.attributes.brightness / 2.54);
                             const radius = 20.5; const circumference = radius * 2 * Math.PI; 
                             return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="darkslategrey" stroke-width="1.5" fill="none" style="
                             transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - brightness / 100 * circumference};" />
                             <text x="50%" y="54%" fill="lightgrey" font-size="14" text-anchor="middle" alignment-baseline="middle">${brightness}<tspan font-size="10">%</tspan></text></svg>`; } ]]]
                        notification: >
                          [[[ return
                          Math.floor(states['sensor.compteur_musique_etage'].state
                          ) ]]]
                      tap_action:
                        action: fire-dom-event
                        browser_mod:
                          command: popup
                          title: Musique
                          card:
                            type: vertical-stack
                            cards:
                              - type: conditional
                                conditions:
                                  - entity: media_player.partout
                                    state: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.partout
                              - type: conditional
                                conditions:
                                  - entity: media_player.sejour
                                    state: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.sejour
                              - type: conditional
                                conditions:
                                  - entity: media_player.la_cuisine
                                    state: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.la_cuisine
                              - type: conditional
                                conditions:
                                  - entity: media_player.la_salle_de_bain
                                    state: playing
                                  - entity: media_player.partout
                                    state_not: playing
                                  - entity: media_player.etage
                                    state_not: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.la_salle_de_bain
                              - type: conditional
                                conditions:
                                  - entity: media_player.en_bas
                                    state: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.en_bas
                              - type: conditional
                                conditions:
                                  - entity: media_player.leane
                                    state: playing
                                  - entity: media_player.partout
                                    state_not: playing
                                  - entity: media_player.etage
                                    state_not: playing
                                  - entity: media_player.chambre_de_manon_et_leane
                                    state_not: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.leane
                              - type: conditional
                                conditions:
                                  - entity: media_player.tom
                                    state: playing
                                  - entity: media_player.partout
                                    state_not: playing
                                  - entity: media_player.etage
                                    state_not: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.tom
                              - type: conditional
                                conditions:
                                  - entity: media_player.nina
                                    state: playing
                                  - entity: media_player.partout
                                    state_not: playing
                                  - entity: media_player.etage
                                    state_not: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.nina
                              - type: conditional
                                conditions:
                                  - entity: media_player.manon
                                    state: playing
                                  - entity: media_player.partout
                                    state_not: playing
                                  - entity: media_player.etage
                                    state_not: playing
                                  - entity: media_player.chambre_de_manon_et_leane
                                    state_not: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.manon
                              - type: conditional
                                conditions:
                                  - entity: media_player.etage
                                    state: playing
                                  - entity: media_player.partout
                                    state_not: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.etage
                              - type: conditional
                                conditions:
                                  - entity: media_player.chambre_de_manon_et_leane
                                    state: playing
                                  - entity: media_player.partout
                                    state_not: playing
                                card:
                                  info: scroll
                                  artwork: full-cover-fit
                                  hide:
                                    volume: false
                                    source: true
                                    power: false
                                    name: false
                                    icon: true
                                    controls: false
                                  type: custom:mini-media-player
                                  entity: media_player.chambre_de_manon_et_leane
                              - type: entities
                                entities:
                                  - media_player.sejour
                                  - media_player.la_cuisine
                                  - media_player.en_bas
                                  - media_player.tom
                                  - media_player.manon
                                  - media_player.nina
                                  - media_player.leane
                                  - media_player.chambre_de_manon_et_leane
                                  - media_player.la_salle_de_bain
                                  - media_player.etage
                                  - media_player.partout
                columns: 2
                square: false
              - type: custom:button-card
                template:
                  - bouton_titre_piece
                style:
                  .: |
                    ha-card {
                        --ha-card-background: none !important;
                        box-shadow: none !important;
                        font-family: Avenir
                name: |
                  [[[ return "Appareils" ]]]
                label: |
                  [[[
                    if (states['sensor.compteur_appareils'].state == 0)
                      return "Tout est éteint" ;
                    if (states['sensor.compteur_appareils'].state == 1)
                      return "🤖 " +(states['sensor.compteur_appareils'].state ) + " en fonctionnement" ;
                    return "🤖  " +(states['sensor.compteur_appareils'].state ) + " en fonctionnement";
                  ]]]
              - type: grid
                cards:
                  - type: custom:button-card
                    entity: vacuum.wall_e
                    name: Wall-E
                    icon: phu:roborock
                    template:
                      - bouton_appareil
                      - bouton_appareil_aspi_state
                      - effet
                    label: |
                      [[[ return states['sensor.walle_state'].state;  ]]]
                    styles:
                      label:
                        - color: |
                            [[[
                              if (states['sensor.walle_state'].state == "Nettoyage")
                                return 'var(--text_on)';
                              if (states['sensor.walle_state'].state == "Retour")
                                return 'firebrick';
                              if (states['sensor.walle_state'].state == "️ERREUR")
                                return "firebrick";
                              if (states['sensor.walle_state'].state == "En pause")
                                return 'firebrick';
                              if (states['sensor.walle_state'].state == "En charge")
                                return 'grey';
                            ]]]
                    custom_fields:
                      batterie: |
                        [[[ 
                          if (states['sensor.walle_batterie'].state == 100 )
                            return '';
                          return states['sensor.walle_batterie'].state + "%" ]]]
                      ic:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: script.aspi_walle_demarrage
                              show_name: false
                              styles:
                                icon:
                                  - color: var(--icon_off)
                                  - width: 70%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                              tap_action:
                                action: toggle
                            - type: custom:button-card
                              entity: script.aspi_pause
                              show_name: false
                              styles:
                                icon:
                                  - color: var(--icon_off)
                                  - width: 70%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                              tap_action:
                                action: toggle
                            - type: custom:button-card
                              entity: script.aspi_retour_base
                              show_name: false
                              styles:
                                icon:
                                  - color: var(--icon_off)
                                  - width: 70%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                              tap_action:
                                action: toggle
                            - type: custom:button-card
                              entity: script.sortir_l_aspi
                              show_name: false
                              tap_action:
                                action: toggle
                              styles:
                                icon:
                                  - color: var(--icon_off)
                                  - width: 70%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                          columns: 4
                          square: false
                  - type: custom:button-card
                    entity: vacuum.r2d2
                    name: R2D2
                    icon: phu:roborock
                    template:
                      - bouton_appareil
                      - bouton_appareil_aspi_state
                      - effet
                    label: |
                      [[[ return states['sensor.r2d2_state'].state;  ]]]
                    styles:
                      label:
                        - color: |
                            [[[
                              if (states['sensor.r2d2_state'].state == "Nettoyage")
                                return 'black';
                              if (states['sensor.r2d2_state'].state == "Retour")
                                return 'firebrick';
                              if (states['sensor.r2d2_state'].state == "️ERREUR")
                                return "firebrick";
                              if (states['sensor.r2d2_state'].state == "En pause")
                                return 'firebrick';
                              if (states['sensor.r2d2_state'].state == "En charge")
                                return 'grey';
                            ]]]
                    custom_fields:
                      batterie: |
                        [[[ 
                          if (states['sensor.r2d2_batterie'].state == 100 )
                            return '';
                          return states['sensor.r2d2_batterie'].state + "%"]]]
                      ic:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: script.aspi_r2d2_demarrage
                              show_name: false
                              styles:
                                icon:
                                  - color: var(--icon_off)
                                  - width: 50%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                              tap_action:
                                action: toggle
                            - type: custom:button-card
                              entity: script.aspi_pause
                              show_name: false
                              styles:
                                icon:
                                  - color: var(--icon_off)
                                  - width: 50%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                              tap_action:
                                action: toggle
                            - type: custom:button-card
                              entity: script.aspi_retour_base
                              show_name: false
                              styles:
                                icon:
                                  - color: var(--icon_off)
                                  - width: 50%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                              tap_action:
                                action: toggle
                          columns: 3
                          square: false
                  - type: custom:button-card
                    entity: switch.lave_vaisselle_power
                    name: Vaisselle
                    icon: mdi:dishwasher
                    template:
                      - bouton_appareil
                      - bouton_appareil_lave_state
                      - effet
                    label: |
                      [[[
                        if (states['switch.lave_vaisselle_power'].state == "on")
                          return states['sensor.lave_vaisselle2'].state;
                        if (states['switch.lave_vaisselle_power'].state == "off")
                          return "";
                        return "" ;
                      ]]]
                    tap_action:
                      action: more-info
                    double_tap_action:
                      action: toggle
                    custom_fields:
                      circle: |
                        [[[ if (entity.state == 'on' ) {
                           ;
                           const radius = 20.5; const circumference = radius * 2 * Math.PI; 
                           return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="grey" stroke-width="1.5" fill="none" style="
                           transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - states['sensor.lave_vaisselle_program_progress'].state / 100 * circumference};" />
                           <text x="50%" y="54%" fill="lightgrey" font-size="15" text-anchor="middle" alignment-baseline="middle">${states['sensor.lave_vaisselle_program_progress'].state}%<tspan font-size="10"></tspan></text></svg>`; } ]]]
                  - type: custom:button-card
                    entity: input_boolean.lave_linge
                    name: Linge
                    icon: mdi:tshirt-crew
                    template:
                      - bouton_appareil
                      - bouton_appareil_lave_state
                      - effet
                    label: |
                      [[[
                        if (states['input_boolean.lave_linge'].state == "off")
                          return "";
                        if (states['input_boolean.lave_linge'].state == "on")
                          return states['sensor.lave_linge2'].state;

                      ]]]
                    styles:
                      - color: |
                          [[[
                            if (states['input_boolean.lave_linge'].state == "on")
                              return "var(--text_on)";
                            if (states['input_boolean.lave_linge'].state == "unavailable")
                              return "red";
                            return "grey" ;
                          ]]]
                    tap_action:
                      action: more-info
                    double_tap_action:
                      action: toggle
                  - type: custom:button-card
                    entity: binary_sensor.boite_aux_lettres
                    name: null
                    icon: null
                    show_last_changed: true
                    template:
                      - bouton_appareil
                      - effet
                    state:
                      - value: 'on'
                        styles:
                          card:
                            - animation: ball-scale 0.2s
                          img_cell:
                            - background-color: rgba(255,127,80,0.5)
                          icon:
                            - color: var(--icon_on)
                            - transition: 2s ease
                          name:
                            - color: var(--text_on)
                          label:
                            - color: var(--text_on)
                      - value: 'off'
                        color: grey
                        styles:
                          card:
                            - animation: ball-scale 0.2s
                          img_cell:
                            - background-color: var(--pastille_off)
                          icon:
                            - color: var(--icon_off)
                            - transition: 2s ease
                          name:
                            - color: grey
                          label:
                            - color: grey
                    double_tap_action:
                      action: toggle
                    tap_action:
                      action: more-info
                  - type: custom:button-card
                    entity: sensor.canon_mg4100_series_black
                    name: Imprimante
                    icon: mdi:printer
                    template:
                      - bouton_appareil
                      - bouton_appareil_imprimante_state
                      - effet
                    label: |
                      [[[
                        if (entity.state == "unavailable")
                          return "";
                        return states['sensor.imprim_on'].state ;
                      ]]]
                    styles:
                      custom_fields: null
                    state:
                      - value: 0
                        operator: '>='
                        styles:
                          card:
                            - animation: ball-scale 0.2s
                          img_cell:
                            - background-color: rgba(250,250,250,0.5)
                          icon:
                            - color: var(--icon_on)
                            - transition: 2s ease
                          name:
                            - color: var(--text_on)
                          label:
                            - color: var(--text_on)
                      - value: 'off'
                        color: grey
                        styles:
                          card:
                            - animation: ball-scale 0.2s
                          img_cell:
                            - background-color: var(--pastille_off)
                          icon:
                            - color: var(--icon_off)
                            - transition: 2s ease
                          name:
                            - color: grey
                          label:
                            - color: grey
                      - value: unavailable
                        color: grey
                        styles:
                          card:
                            - animation: ball-scale 0.2s
                          img_cell:
                            - background-color: var(--pastille_off)
                          icon:
                            - color: var(--icon_off)
                            - transition: 2s ease
                          name:
                            - color: grey
                          label:
                            - color: grey
                    tap_action:
                      action: more-info
                    double_tap_action:
                      action: toggle
                columns: 2
                square: false
            type: vertical-stack
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - cards:
              - type: custom:button-card
                template:
                  - bouton_titre_piece
                style:
                  .: |
                    ha-card {
                        --ha-card-background: none !important;
                        box-shadow: none !important;
                        font-family: Avenir
                name: |
                  [[[ return "Maison" ]]]
                label: |
                  [[[
                    if (states['sensor.compteur_home'].state == 0)
                      return "👤 Y'a personne" ;
                    if (states['sensor.compteur_home'].state == 1)
                      return "👤 " +(states['sensor.compteur_home'].state ) + " personne" ;
                    return "👤 " +(states['sensor.compteur_home'].state ) + " personnes";
                  ]]]
              - type: grid
                cards:
                  - type: custom:button-card
                    entity: person.herve
                    name: Aurel
                    template:
                      - bouton_person
                      - effet
                    label: |
                      [[[
                        return states['sensor.aurel_gps'].state
                      ]]]
                    styles:
                      label:
                        - color: |
                            [[[
                              if (states['person.herve'].state == "home")
                                return 'darkgrey';
                              if (states['person.herve'].state == "Salle de sport")
                                return 'darkgrey';
                              if (states['person.herve'].state == "Hopital")
                                return 'darkgrey';
                              if (states['person.herve'].state == "Travail")
                                return 'darkgrey';
                             if (states['person.herve'].state == "Collège")
                                return 'darkgrey';
                              return 'red';
                            ]]]
                      custom_fields:
                        icon_batterie:
                          - color: |
                              [[[
                                if (states['sensor.iphone_aurel_battery_state'].state == "Charging")
                                  return 'gold';
                                if (states['sensor.iphone_aurel_battery_state'].state == "Charged")
                                  return 'red';
                                if (states['sensor.iphone_aurel_battery_level'].state > 80)
                                  return 'darkgrey';
                                if (states['sensor.iphone_aurel_battery_level'].state > 60)
                                  return 'darkgrey';
                                if (states['sensor.iphone_aurel_battery_level'].state > 50)
                                  return 'tomato';
                                if (states['sensor.iphone_aurel_battery_level'].state > 30)
                                  return 'red';
                                if (states['sensor.iphone_aurel_battery_level'].state > 0)
                                  return 'red';
                                return 'red';
                              ]]]
                    custom_fields:
                      batterie: >
                        [[[ return
                        states['sensor.iphone_aurel_battery_level'].state + "%"
                        ]]]
                      icon_batterie: |
                        [[[
                          if (states['sensor.iphone_aurel_battery_state'].state == "Charging")
                            return '<ha-icon icon="phu:battery-charged">';
                          if (states['sensor.iphone_aurel_battery_state'].state == "Charged")
                            return '<ha-icon icon="phu:battery-charged">';
                          if (states['sensor.iphone_aurel_battery_state'].state > 80)
                            return '<ha-icon icon="phu:battery-full">';
                          if (states['sensor.iphone_aurel_battery_state'].state > 70)
                            return '<ha-icon icon="phu:battery-good">';
                          if (states['sensor.iphone_aurel_battery_state'].state > 50)
                            return '<ha-icon icon="phu:battery-half">';
                          if (states['sensor.iphone_aurel_battery_state'].state > 30)
                            return '<ha-icon icon="phu:battery-low">';
                          if (states['sensor.iphone_aurel_battery_state'].state > 0)
                            return '<ha-icon icon="phu:battery-critical">';
                          return '<ha-icon icon="phu:battery-full">';
                        ]]]
                      heure: |
                        [[[ return states['sensor.aurel_heure'].state ]]]
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        command: popup
                        title: Aurel
                        card:
                          type: custom:vertical-stack-in-card
                          cards:
                            - type: entities
                              entities:
                                - entity: person.herve
                                - entity: person.alex
                                - entity: person.tom
                            - aspect_ratio: '1:1'
                              dark_mode: true
                              default_zoom: 17
                              entities:
                                - entity: person.herve
                                - entity: person.alex
                                - entity: person.tom
                              hours_to_show: 12
                              type: map
                            - header:
                                title: 📱iPhone ️
                                show: true
                                show_states: true
                                colorize_states: true
                              experimental:
                                brush: true
                              graph_span: 72h
                              brush:
                                selection_span: 12h
                              apex_config:
                                grid:
                                  show: false
                                legend:
                                  fontSize: 12px
                                  height: 40
                                dataLabels:
                                  enabled: false
                                stroke:
                                  width: 3
                                  curve: smooth
                                fill:
                                  type: gradient
                                  gradient:
                                    type: vertical
                                    shadeIntensity: 0.8
                                    inverseColors: false
                                    opacityFrom: 0.5
                                    opacityTo: 0
                                    stops:
                                      - - 0
                                        - 50
                                        - 100
                                tooltip:
                                  enabled: true
                                yaxis:
                                  - show: true
                                    decimalsInFloat: 0
                                    labels:
                                      style:
                                        colors: '#FFB62E'
                                        fontSize: 12px
                                    forceNiceScale: true
                                  - show: true
                                    decimalsInFloat: 0
                                    opposite: true
                                    labels:
                                      style:
                                        colors: '#2eb9ff'
                                        fontSize: 12px
                                    forceNiceScale: true
                                xaxis:
                                  axisBorder:
                                    show: false
                                  labels:
                                    style:
                                      fontSize: 14px
                              series:
                                - entity: sensor.iphone_aurel_battery_level
                                  name: Aurel
                                  show:
                                    extremas: false
                                  type: area
                                  color: grey
                                  fill_raw: last
                                  float_precision: 1
                                  group_by:
                                    duration: 10min
                                    func: avg
                                - entity: sensor.alex_iphone_battery_level_ha
                                  name: Alex
                                  show:
                                    extremas: false
                                  type: area
                                  color: purple
                                  fill_raw: last
                                  float_precision: 1
                                  group_by:
                                    duration: 10min
                                    func: avg
                                - entity: sensor.iphone_aurel_battery_level
                                  name: Aurel
                                  color: dodgerblue
                                  fill_raw: last
                                  type: area
                                  stroke_width: 1
                                  group_by:
                                    duration: 10min
                                    func: avg
                                  show:
                                    in_brush: true
                                    in_chart: false
                              card_mod:
                                style: |
                                  ha-card {
                                  background-color: black;
                                  }
                              type: custom:apexcharts-card
                  - type: custom:button-card
                    entity: person.alex
                    name: Alex
                    template:
                      - bouton_person
                      - effet
                    label: |
                      [[[
                        return states['sensor.alex_gps'].state
                      ]]]
                    styles:
                      label:
                        - color: |
                            [[[
                              if (states['person.alex'].state == "home")
                                return 'darkgrey';
                              if (states['person.alex'].state == "Salle de sport")
                                return 'darkgrey';
                              if (states['person.alex'].state == "Travail")
                                return 'darkgrey';
                              if (states['person.alex'].state == "Collège")
                                return 'darkgrey';
                              if (states['person.alex'].state == "Complexe sportif")
                                return 'darkgrey';
                              if (states['person.alex'].state == "Atoll")
                                return 'darkgrey';
                              return 'red';
                            ]]]
                      custom_fields:
                        icon_batterie:
                          - color: |
                              [[[
                                if (states['sensor.alex_iphone_battery_state_ha'].state == "Charging")
                                  return 'gold';
                                if (states['sensor.alex_iphone_battery_state_ha'].state == "Charged")
                                  return 'red';
                                if (states['sensor.alex_iphone_battery_level_ha'].state > 80)
                                  return 'darkgrey';
                                if (states['sensor.alex_iphone_battery_level_ha'].state > 60)
                                  return 'darkgrey';
                                if (states['sensor.alex_iphone_battery_level_ha'].state > 50)
                                  return 'tomato';
                                if (states['sensor.alex_iphone_battery_level_ha'].state > 30)
                                  return 'red';
                                if (states['sensor.alex_iphone_battery_level_ha'].state > 0)
                                  return 'red';
                                return 'red';
                              ]]]
                    custom_fields:
                      batterie: >
                        [[[ return
                        states['sensor.alex_iphone_battery_level_ha'].state +
                        "%" ]]]
                      icon_batterie: |
                        [[[
                          if (states['sensor.alex_iphone_battery_state_ha'].state == "Charging")
                            return '<ha-icon icon="phu:battery-charged">';
                          if (states['sensor.alex_iphone_battery_state_ha'].state == "Charged")
                            return '<ha-icon icon="phu:battery-charged">';
                          if (states['sensor.alex_iphone_battery_level_ha'].state > 80)
                            return '<ha-icon icon="phu:battery-full">';
                          if (states['sensor.alex_iphone_battery_level_ha'].state > 70)
                            return '<ha-icon icon="phu:battery-good">';
                          if (states['sensor.alex_iphone_battery_level_ha'].state > 50)
                            return '<ha-icon icon="phu:battery-half">';
                          if (states['sensor.alex_iphone_battery_level_ha'].state > 30)
                            return '<ha-icon icon="phu:battery-low">';
                          if (states['sensor.alex_iphone_battery_level_ha'].state > 0)
                            return '<ha-icon icon="phu:battery-critical">';
                          return '<ha-icon icon="phu:battery-full">';
                        ]]]
                      heure: |
                        [[[ return states['sensor.alex_heure'].state ]]]
                    double_tap_action:
                      action: more-info
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        command: popup
                        title: Alex
                        card:
                          type: custom:vertical-stack-in-card
                          cards:
                            - type: entities
                              entities:
                                - entity: person.herve
                                - entity: person.alex
                                - entity: person.tom
                            - aspect_ratio: '1:1'
                              dark_mode: true
                              default_zoom: 17
                              entities:
                                - entity: person.herve
                                - entity: person.alex
                                - entity: person.tom
                              hours_to_show: 12
                              type: map
                            - header:
                                title: 📱iPhone ️
                                show: true
                                show_states: true
                                colorize_states: true
                              experimental:
                                brush: true
                              graph_span: 72h
                              brush:
                                selection_span: 12h
                              apex_config:
                                grid:
                                  show: false
                                legend:
                                  fontSize: 12px
                                  height: 40
                                dataLabels:
                                  enabled: false
                                stroke:
                                  width: 3
                                  curve: smooth
                                fill:
                                  type: gradient
                                  gradient:
                                    type: vertical
                                    shadeIntensity: 0.8
                                    inverseColors: false
                                    opacityFrom: 0.5
                                    opacityTo: 0
                                    stops:
                                      - - 0
                                        - 50
                                        - 100
                                tooltip:
                                  enabled: true
                                yaxis:
                                  - show: true
                                    decimalsInFloat: 0
                                    labels:
                                      style:
                                        colors: '#FFB62E'
                                        fontSize: 12px
                                    forceNiceScale: true
                                  - show: true
                                    decimalsInFloat: 0
                                    opposite: true
                                    labels:
                                      style:
                                        colors: '#2eb9ff'
                                        fontSize: 12px
                                    forceNiceScale: true
                                xaxis:
                                  axisBorder:
                                    show: false
                                  labels:
                                    style:
                                      fontSize: 14px
                              series:
                                - entity: sensor.iphone_aurel_battery_level
                                  name: Aurel
                                  show:
                                    extremas: false
                                  type: area
                                  color: grey
                                  fill_raw: last
                                  float_precision: 1
                                  group_by:
                                    duration: 10min
                                    func: avg
                                - entity: sensor.alex_iphone_battery_level_ha
                                  name: Alex
                                  show:
                                    extremas: false
                                  type: area
                                  color: purple
                                  fill_raw: last
                                  float_precision: 1
                                  group_by:
                                    duration: 10min
                                    func: avg
                                - entity: sensor.iphone_aurel_battery_level
                                  name: Aurel
                                  color: dodgerblue
                                  fill_raw: last
                                  type: area
                                  stroke_width: 1
                                  group_by:
                                    duration: 10min
                                    func: avg
                                  show:
                                    in_brush: true
                                    in_chart: false
                              card_mod:
                                style: |
                                  ha-card {
                                  background-color: black;
                                  }
                              type: custom:apexcharts-card
                  - type: custom:button-card
                    entity: person.tom
                    name: Tom
                    template:
                      - bouton_person
                      - effet
                    label: |
                      [[[
                        return states['sensor.tom_gps'].state
                      ]]]
                    styles:
                      label:
                        - color: |
                            [[[
                              if (states['person.tom'].state == "home")
                                return 'darkgrey';
                              if (states['person.tom'].state == "not_home")
                                return 'red';
                              return 'red';
                            ]]]
                      card:
                        - opacity: |
                            [[[
                              if (states['input_boolean.nilemato'].state == "off")
                                return '100%';
                              return '100%';
                            ]]]
                    custom_fields:
                      heure: |
                        [[[ return states['sensor.tom_heure'].state ]]]
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        command: popup
                        title: Tom
                        card:
                          type: custom:vertical-stack-in-card
                          cards:
                            - type: entities
                              entities:
                                - entity: person.herve
                                - entity: person.alex
                                - entity: person.tom
                            - aspect_ratio: '1:1'
                              dark_mode: true
                              default_zoom: 17
                              entities:
                                - entity: person.herve
                                - entity: person.alex
                                - entity: person.tom
                              hours_to_show: 12
                              type: map
                            - header:
                                title: 📱iPhone ️
                                show: true
                                show_states: true
                                colorize_states: true
                              experimental:
                                brush: true
                              graph_span: 72h
                              brush:
                                selection_span: 12h
                              apex_config:
                                grid:
                                  show: false
                                legend:
                                  fontSize: 12px
                                  height: 40
                                dataLabels:
                                  enabled: false
                                stroke:
                                  width: 3
                                  curve: smooth
                                fill:
                                  type: gradient
                                  gradient:
                                    type: vertical
                                    shadeIntensity: 0.8
                                    inverseColors: false
                                    opacityFrom: 0.5
                                    opacityTo: 0
                                    stops:
                                      - - 0
                                        - 50
                                        - 100
                                tooltip:
                                  enabled: true
                                yaxis:
                                  - show: true
                                    decimalsInFloat: 0
                                    labels:
                                      style:
                                        colors: '#FFB62E'
                                        fontSize: 12px
                                    forceNiceScale: true
                                  - show: true
                                    decimalsInFloat: 0
                                    opposite: true
                                    labels:
                                      style:
                                        colors: '#2eb9ff'
                                        fontSize: 12px
                                    forceNiceScale: true
                                xaxis:
                                  axisBorder:
                                    show: false
                                  labels:
                                    style:
                                      fontSize: 14px
                              series:
                                - entity: sensor.iphone_aurel_battery_level
                                  name: Aurel
                                  show:
                                    extremas: false
                                  type: area
                                  color: grey
                                  fill_raw: last
                                  float_precision: 1
                                  group_by:
                                    duration: 10min
                                    func: avg
                                - entity: sensor.alex_iphone_battery_level_ha
                                  name: Alex
                                  show:
                                    extremas: false
                                  type: area
                                  color: purple
                                  fill_raw: last
                                  float_precision: 1
                                  group_by:
                                    duration: 10min
                                    func: avg
                                - entity: sensor.iphone_aurel_battery_level
                                  name: Aurel
                                  color: dodgerblue
                                  fill_raw: last
                                  type: area
                                  stroke_width: 1
                                  group_by:
                                    duration: 10min
                                    func: avg
                                  show:
                                    in_brush: true
                                    in_chart: false
                              card_mod:
                                style: |
                                  ha-card {
                                  background-color: black;
                                  }
                              type: custom:apexcharts-card
                square: false
                columns: 3
              - type: grid
                cards:
                  - type: custom:button-card
                    entity: alarm_control_panel.alarme
                    name: Alarme
                    icon: |
                      [[[
                        if (entity.state == "disarmed" )
                          return "mdi:shield-off";
                        if (entity.state == "armed_away" )
                          return "mdi:shield-lock";
                        if (entity.state == "arming" )
                          return "mdi:shield-half-full";
                        if (entity.state == "triggered" )
                          return "mdi:shield-alert";
                        return "mdi:shield-off";
                      ]]]
                    template:
                      - bouton_securite
                    custom_fields:
                      alarme_heure: |
                        [[[ return states['sensor.alarme_heure'].state ]]]
                      ic:
                        card:
                          type: glance
                          entities:
                            - entity: group.cameras
                            - entity: group.mouvements
                            - entity: group.portes
                          show_state: false
                          show_name: false
                          state_color: true
                          style: |
                            ha-card {
                              background: transparent
                            }
                          tap_action:
                            action: fire-dom-event
                            browser_mod:
                              command: popup
                              title: Portes
                              card:
                                type: glance
                                entities:
                                  - entity: binary_sensor.porte_entree
                                    show_last_changed: true
                                  - entity: binary_sensor.porte_cagibi
                                    show_last_changed: true
                                  - entity: binary_sensor.porte_garage
                                    show_last_changed: true
                                  - entity: binary_sensor.porte_chambre_parents
                                    show_last_changed: true
                                  - entity: binary_sensor.porte_salle_a_manger
                                    show_last_changed: true
                                  - entity: binary_sensor.porte_cuisine
                                    show_last_changed: true
                                state_color: true
                                columns: 3
                                style: |
                                  ha-card {
                                    border-radius: 15px; 
                                    background: var(--my_color_card);
                                    font-size: 14px;
                                    color: grey;
                                  }
                      circle: |
                        [[[ if (entity.state != 'unavailable' ) 
                        {
                           ;
                           const radius = 20.5; const circumference = radius * 2 * Math.PI; 
                           return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="transparent" stroke-width="1" fill="none" style="
                           transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - 100 / 100 * circumference};" />
                           <text x="50%" y="54%" fill="lightgrey" font-size="10" text-anchor="middle" alignment-baseline="middle">${states['sensor.alarme_heure'].state}<tspan font-size="10"></tspan></text></svg>`; } ]]]
                    double_tap_action:
                      action: more-info
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        command: popup
                        title: Système de sécurité
                        card:
                          type: vertical-stack
                          cards:
                            - type: alarm-panel
                              states:
                                - arm_away
                              entity: alarm_control_panel.alarme
                              style: |
                                ha-card {
                                  border-radius: 15px;
                                  background: var(--my_color2) ;
                                }
                            - type: grid
                              cards:
                                - type: custom:button-card
                                  entity: script.alarme_sirene_off
                                  name: 'OFF'
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.alarme_sirene
                                  name: Sirène
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: siren.alarme_sirene
                                  name: Sirène
                                  template:
                                    - popup_capteur
                              square: false
                              columns: 3
                            - type: custom:button-card
                              style:
                                .: |
                                  ha-card {
                                      --ha-card-background: none !important;
                                      box-shadow: none !important;
                                      font-family: Avenir
                              show_icon: false
                              show_name: false
                              show_state: false
                              show_label: true
                              label: |
                                [[[ return "Portes" ]]]
                              styles:
                                label:
                                  - justify-self: center
                                  - font-size: 15px
                                  - font-weight: bold
                                  - font-style: italic
                                  - color: darkgrey
                                card:
                                  - height: 20px
                            - type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.porte_entree
                                  name: Entrée
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.porte_salle_a_manger
                                  name: SaM
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.porte_cuisine
                                  name: null
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.porte_chambre_parents
                                  name: null
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.porte_cagibi
                                  name: null
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.porte_garage
                                  name: null
                                  template:
                                    - popup_capteur
                              square: false
                              columns: 3
                            - content: >
                                <center><i><font size='4'><font
                                color='darkgrey'>Mouvements 
                              style:
                                .: |
                                  ha-card {
                                      --ha-card-background: none !important;
                                      box-shadow: none !important;
                                      font-family: Avenir
                              type: markdown
                            - type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_salon
                                  name: Salon
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_salle_a_manger
                                  name: SaM
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_couloir
                                  name: Couloir
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_salle_d_eau
                                  name: Lavabo
                                  template:
                                    - popup_capteur
                                  tap_action:
                                    action: more-info
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_garage
                                  name: Garage
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_escaliers
                                  name: Escaliers
                                  template:
                                    - popup_capteur
                              square: false
                              columns: 3
                            - type: grid
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_tom
                                  name: Tom
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_manon
                                  name: Manon
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_leane
                                  name: Léane
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_nina
                                  name: Nina
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_palier
                                  name: Palier
                                  template:
                                    - popup_capteur
                              square: false
                              columns: 3
                  - type: custom:button-card
                    entity: alarm_control_panel.aarlo_sonnette
                    template:
                      - bouton_securite
                    name: Sonnette
                    icon: phu:arlo-video-doorbell
                    styles:
                      custom_fields:
                        batterie:
                          - stroke: |
                              [[[
                                if (states['sensor.aarlo_battery_level_sonnette'].state < 40)
                                  return 'red';
                               return 'grey';
                              ]]]
                    custom_fields:
                      batterie: |
                        [[[ if (entity.state != '0' ) {
                           ;
                           const radius = 20.5; const circumference = radius * 2 * Math.PI; 
                           return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="grey" stroke-width="1.5" fill="none" style="
                           transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - states['sensor.aarlo_battery_level_sonnette'].state / 100 * circumference};" />
                           <text x="50%" y="54%" fill="lightgrey" font-size="15" text-anchor="middle" alignment-baseline="middle">${states['sensor.aarlo_battery_level_sonnette'].state}%<tspan font-size="10"></tspan></text></svg>`; } ]]]
                      ic:
                        card:
                          type: glance
                          entities:
                            - entity: switch.aarlo_snapshot_sonnette
                            - entity: binary_sensor.aarlo_motion_sonnette
                            - entity: binary_sensor.aarlo_ding_sonnette
                          show_state: false
                          show_name: false
                          state_color: true
                          style: |
                            ha-card {
                              background: transparent
                            }
                    double_tap_action:
                      action: toggle
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        command: popup
                        title: Sonnette Arlo
                        card:
                          type: vertical-stack
                          cards:
                            - entity: camera.aarlo_sonnette
                              hide:
                                - title
                                - date
                              image_click: play
                              show:
                                - motion
                                - sound
                                - image_date
                                - signal_strength
                                - captured_today
                                - image_date
                                - on_off
                                - snapshot
                                - battery_level
                              top_date: true
                              top_status: false
                              top_title: false
                              type: custom:aarlo-glance
                            - type: grid
                              cards:
                                - type: custom:button-card
                                  entity: alarm_control_panel.aarlo_sonnette
                                  name: null
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: switch.aarlo_snapshot_sonnette
                                  name: Capture
                                  template:
                                    - popup_capteur
                                - type: custom:button-card
                                  entity: binary_sensor.aarlo_ding_sonnette
                                  name: Ding Dong !
                                  template:
                                    - popup_capteur
                              square: false
                              columns: 3
                            - header:
                                title: 🚪Sonnette Arlo
                                show: true
                                show_states: true
                                colorize_states: true
                              experimental:
                                brush: true
                              graph_span: 336h
                              brush:
                                selection_span: 72h
                              apex_config:
                                grid:
                                  show: false
                                legend:
                                  fontSize: 12px
                                  height: 40
                                dataLabels:
                                  enabled: false
                                stroke:
                                  width: 3
                                  curve: smooth
                                fill:
                                  type: gradient
                                  gradient:
                                    type: vertical
                                    shadeIntensity: 0.8
                                    inverseColors: false
                                    opacityFrom: 0.5
                                    opacityTo: 0
                                    stops:
                                      - - 0
                                        - 50
                                        - 100
                                tooltip:
                                  enabled: true
                                yaxis:
                                  - show: true
                                    decimalsInFloat: 0
                                    labels:
                                      style:
                                        colors: '#FFB62E'
                                        fontSize: 12px
                                    forceNiceScale: true
                                  - show: true
                                    decimalsInFloat: 0
                                    opposite: true
                                    labels:
                                      style:
                                        colors: '#2eb9ff'
                                        fontSize: 12px
                                    forceNiceScale: true
                                xaxis:
                                  axisBorder:
                                    show: false
                                  labels:
                                    style:
                                      fontSize: 14px
                              series:
                                - entity: sensor.aarlo_battery_level_sonnette
                                  name: Batterie
                                  show:
                                    extremas: true
                                  type: area
                                  color: grey
                                  fill_raw: last
                                  float_precision: 1
                                  group_by:
                                    duration: 10min
                                    func: avg
                                - entity: sensor.aarlo_battery_level_sonnette
                                  name: Batterie
                                  color: dodgerblue
                                  fill_raw: last
                                  type: area
                                  stroke_width: 1
                                  group_by:
                                    duration: 10min
                                    func: avg
                                  show:
                                    in_brush: true
                                    in_chart: false
                              card_mod:
                                style: |
                                  ha-card {
                                  background-color: var(--my_color2);
                                  }
                              type: custom:apexcharts-card
                columns: 2
                square: false
              - type: custom:button-card
                template:
                  - bouton_titre_piece
                style:
                  .: |
                    ha-card {
                        --ha-card-background: none !important;
                        box-shadow: none !important;
                        font-family: Avenir
                name: |
                  [[[ return "Système" ]]]
                label: |
                  [[[
                      return states['sensor.systeme'].state ;
                  ]]]
              - type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.cpu_temperature
                    name: RPI 4
                    icon: mdi:raspberry-pi
                    template:
                      - bouton_systeme
                    styles:
                      img_cell:
                        - background-color: |
                            [[[
                              if (entity.state < 50) return 'var(--pastille_off)';
                              if (entity.state >= 50 && entity.state < 60) return 'tomato';
                              else return 'red';
                            ]]]
                      icon:
                        - animation: |
                            [[[
                              if (entity.state > "50" )
                                return "blink 1s ease infinite";
                             return "";
                            ]]]
                      custom_fields:
                        circle:
                          - stroke: |
                              [[[
                                if (entity.state < 49)
                                  return 'grey';
                                if (entity.state > 49)
                                  return 'tomato';
                                return '';
                              ]]]
                        info1:
                          - '--text-color-sensor': >-
                              [[[ if
                              (states["sensor.processor_use_percent"].state >
                              50) return "red";  else return "lightgrey"; ]]]
                        info2:
                          - '--text-color-sensor': >-
                              [[[ if (states["sensor.memory_use_percent"].state
                              > 60) return  "red";  else return "lightgrey"; ]]]
                        info3:
                          - '--text-color-sensor': >-
                              [[[ if
                              (states["sensor.disk_use_percent_home"].state >
                              70) return "red";  else return "lightgrey"; ]]]
                        info4:
                          - '--text-color-sensor': >-
                              [[[ if (states["sensor.speedtest_download"].state
                              < 200)  return  "red";   if
                              (states["sensor.speedtest_download"].state ==
                              "unavailable")  return  "transparent"; else 
                              return "lightgrey"; 

                              ]]]
                    custom_fields:
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(100,100,100,0.4)
                              entity: sensor.cpu_temperature
                          height: 300
                          line_width: 1
                          lower_bound: 18
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                      circle: |
                        [[[ if (entity.state != '0' ) {
                           ;
                           const radius = 20.5; const circumference = radius * 2 * Math.PI; 
                           return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="grey" stroke-width="1.5" fill="none" style="
                           transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - entity.state / 90 * circumference};" />
                           <text x="50%" y="54%" fill="lightgrey" font-size="15" text-anchor="middle" alignment-baseline="middle">${entity.state}°<tspan font-size="10"></tspan></text></svg>`; } ]]]
                      info1: |
                        [[[
                          return `<ha-icon
                            icon="mdi:server"
                            style="width: 12px; height: 12px; color: grey;">
                            </ha-icon><span> CPU : <span style="color: var(--text-color-sensor);">${states['sensor.processor_use_percent'].state}%</span></span>`
                        ]]]
                      info2: |
                        [[[
                          return `<ha-icon
                            icon="mdi:memory"
                            style="width: 12px; height: 12px; color: grey;">
                            </ha-icon><span> RAM : <span style="color: var(--text-color-sensor);">${states['sensor.memory_use_percent'].state}%</span></span>`
                        ]]]
                      info3: |
                        [[[
                          return `<ha-icon
                            icon="mdi:harddisk"
                            style="width: 12px; height: 12px; color: grey;">
                            </ha-icon><span> SSD : <span style="color: var(--text-color-sensor);">${states['sensor.disk_use_percent_home'].state}%</span></span>`
                        ]]]
                      info4: |
                        [[[
                          return `<ha-icon
                            icon="mdi:speedometer"
                            style="width: 12px; height: 12px; color: grey;">
                            </ha-icon><span> Débit: <span style="color: var(--text-color-sensor);">${states['sensor.speedtest_download'].state} Mb/s</span></span>`
                        ]]]
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        command: popup
                        title: Raspberry
                        card:
                          header:
                            title: Home Assistant
                            show: true
                            show_states: true
                            colorize_states: true
                          experimental:
                            brush: true
                          graph_span: 72h
                          brush:
                            selection_span: 12h
                          apex_config:
                            grid:
                              show: false
                            legend:
                              fontSize: 12px
                              height: 40
                            dataLabels:
                              enabled: false
                            stroke:
                              width: 3
                              curve: smooth
                            fill:
                              type: gradient
                              gradient:
                                type: vertical
                                shadeIntensity: 0.8
                                inverseColors: false
                                opacityFrom: 0.5
                                opacityTo: 0
                                stops:
                                  - - 0
                                    - 50
                                    - 100
                            tooltip:
                              enabled: true
                            yaxis:
                              - show: true
                                decimalsInFloat: 0
                                labels:
                                  style:
                                    colors: '#FFB62E'
                                    fontSize: 12px
                                forceNiceScale: true
                              - show: true
                                decimalsInFloat: 0
                                opposite: true
                                labels:
                                  style:
                                    colors: '#2eb9ff'
                                    fontSize: 12px
                                forceNiceScale: true
                            xaxis:
                              axisBorder:
                                show: false
                              labels:
                                style:
                                  fontSize: 14px
                          series:
                            - entity: sensor.cpu_temperature
                              name: Raspberry
                              show:
                                extremas: false
                              type: area
                              color: grey
                              fill_raw: last
                              float_precision: 1
                              group_by:
                                duration: 10min
                                func: avg
                            - entity: sensor.processor_use_percent
                              name: CPU
                              show:
                                extremas: false
                              type: area
                              color: dodgerblue
                              fill_raw: last
                              float_precision: 1
                              group_by:
                                duration: 10min
                                func: avg
                            - entity: sensor.memory_use_percent
                              name: RAM
                              show:
                                extremas: false
                              type: area
                              color: red
                              fill_raw: last
                              float_precision: 1
                              group_by:
                                duration: 10min
                                func: avg
                            - entity: sensor.disk_use_percent_home
                              name: Carte SD
                              show:
                                extremas: false
                              type: area
                              color: salmon
                              fill_raw: last
                              float_precision: 1
                              group_by:
                                duration: 10min
                                func: avg
                            - entity: sensor.cpu_temperature
                              name: Raspberry
                              color: grey
                              fill_raw: last
                              type: area
                              stroke_width: 1
                              group_by:
                                duration: 10min
                                func: avg
                              show:
                                in_brush: true
                                in_chart: false
                          card_mod:
                            style: |
                              ha-card {
                              background-color: var(--my_color2);
                              }
                          type: custom:apexcharts-card
                  - type: custom:button-card
                    entity: sensor.myenedis_cout_j1
                    name: Enedis
                    icon: mdi:flash
                    template:
                      - bouton_systeme
                    styles:
                      img_cell:
                        - background-color: |
                            [[[
                              if (entity.state < 2) return 'var(--pastille_off)';
                              if (entity.state >= 2 && entity.state < 3) return 'tomato';
                              else return 'red';
                            ]]]
                      icon:
                        - color: |
                            [[[
                              if (entity.state < 2) return 'var(--icon_off)';
                              if (entity.state >= 2 && entity.state < 3) return 'var(--icon_on)';
                              else return 'var(--icon_on)';
                            ]]]
                        - animation: |
                            [[[
                              if (entity.state == "unavailable" )
                                return "blink 1s ease infinite";
                             return "";
                            ]]]
                      custom_fields:
                        circle:
                          - stroke: |
                              [[[
                                if (entity.state < 2)
                                  return 'grey';
                                if (entity.state > 2)
                                  return 'tomato';
                                return '';
                              ]]]
                        info1:
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.myenedis_conso_semaine_en_cours_v2'].state == "unavailable")
                                 return 'transparent'
                                return 'lightgrey';
                              ]]]
                        info2:
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.myenedis_cout_mois_en_cours_abo'].state == "unavailable")
                                 return 'transparent'
                                return 'lightgrey';
                              ]]]
                        info3:
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.myenedis_cout_annee_en_cours_abo'].state == "unavailable")
                                 return 'transparent'
                                return 'lightgrey';
                              ]]]
                    custom_fields:
                      ic:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: script.rechargement_integration_myenedis
                              icon: mdi:reload-alert
                              show_name: false
                              styles:
                                icon:
                                  - color: firebrick
                                  - width: 80%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - entity: sensor.myenedis_cout_j7
                              color: rgba(123,104,238,0.2)
                            - entity: sensor.myenedis_cout_j6
                              color: rgba(123,104,238,0.2)
                            - entity: sensor.myenedis_cout_j5
                              color: rgba(123,104,238,0.2)
                            - entity: sensor.myenedis_cout_j4
                              color: rgba(123,104,238,0.2)
                            - entity: sensor.myenedis_cout_j3
                              color: rgba(123,104,238,0.2)
                            - entity: sensor.myenedis_cout_j2
                              color: rgba(123,104,238,0.2)
                            - entity: sensor.myenedis_cout_j1
                              color: rgba(123,104,238,0.4)
                          height: 300
                          line_width: 1
                          lower_bound: 1
                          group_by: date
                          show:
                            graph: bar
                            fill: false
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                      circle: |
                        [[[ if (entity.state != '0' ) {
                           ;
                           const radius = 20.5; const circumference = radius * 2 * Math.PI; 
                           return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="" stroke-width="1.5" fill="none" style="
                           transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - entity.state / 5 * circumference};" />
                           <text x="50%" y="54%" fill="lightgrey" font-size="13" text-anchor="middle" alignment-baseline="middle">${entity.state}<tspan font-size="10"></tspan>€</svg>`; } ]]]
                      info1: |
                        [[[
                          return `
                            </ha-icon><span> Semaine : <span style="color: var(--text-color-sensor);">${states['sensor.myenedis_conso_semaine_en_cours_v2'].state}€</span></span>`
                        ]]]
                      info2: |
                        [[[
                          return `
                            </ha-icon><span> Mois : <span style="color: var(--text-color-sensor);">${states['sensor.myenedis_cout_mois_en_cours_abo'].state}€</span></span>`
                        ]]]
                      info3: |
                        [[[
                          return `
                            </ha-icon><span> Année : <span style="color: var(--text-color-sensor);">${states['sensor.myenedis_cout_annee_en_cours_abo'].state}€</span></span>`
                        ]]]
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        command: popup
                        title: Consommation électrique
                        card:
                          type: custom:vertical-stack-in-card
                          style: |
                            ha-card {
                              color: grey ;
                              border-radius: 10px;
                              font-size: 85%;
                              background: var(--my_color2);
                            }
                          cards:
                            - type: picture
                              image: /local/header/header_enedis2.png
                              style: |
                                ha-card {
                                  border-radius: 0px; 
                                  background: var(--my_color2);
                                }
                            - type: custom:content-card-linky
                              entity: sensor.myenedis_09397539765420
                              showInTableUnit: false
                              showPeakOffPeak: false
                              showHistory: true
                              showDayPrice: true
                              showDayPriceHCHP: false
                              showDayHCHP: false
                              showIcon: false
                              kWhPrice: false
                              showtitle: true
                              style: |
                                ha-card {
                                  color: lightgrey ;
                                  border-radius: 0px;
                                  font-size: 95%;
                                  background: var(--my_color2);
                                }
                            - type: markdown
                              content: >-

                                <font color='dodgerblue'><b>Coût :
                                </b></font><font
                                color='red'><b>`0.1557€`</b></font>

                                - Hier : **{{
                                (((states('sensor.myenedis_09397539765420') |
                                float) * (0.1557) | float)) | round(2) }}€**

                                - Cette semaine :  **{{
                                states('sensor.myenedis_conso_semaine_en_cours_v2')
                                }}€**

                                - Semaine dernière :  **{{
                                (((states('sensor.myenedis_conso_semaine_derniere')
                                | float) * (0.0001557) | float)) | round(2)
                                }}€**

                                ---

                                <font color='dodgerblue'><b>Abo mensuel inclus
                                :</b></font> <font
                                color='red'><b>`10.66€/mois`</b></font>

                                - Mois en cours : **{{
                                states('sensor.myenedis_cout_mois_en_cours_abo')
                                }}€**

                                - Mois dernier : **{{
                                states('sensor.myenedis_conso_mois_dernier')
                                }}€** 

                                - Année en cours :  **{{
                                states('sensor.myenedis_cout_annee_en_cours_abo')
                                }}€**
                              style: |
                                ha-card {
                                  color: lightgrey ;
                                  border-radius: 0px;
                                  font-size: 110%;
                                  background: var(--my_color2);
                                }
                            - align_header: center
                              align_icon: center
                              align_state: center
                              animate: true
                              color_thresholds:
                                - color: dodgerblue
                                  value: 0
                                - color: dodgerblue
                                  value: 0.2
                                - color: dodgerblue
                                  value: 0.4
                                - color: dodgerblue
                                  value: 0.6
                                - color: dodgerblue
                                  value: 0.8
                                - color: dodgerblue
                                  value: 1
                                - color: blue
                                  value: 1.2
                                - color: blue
                                  value: 1.4
                                - color: blue
                                  value: 1.6
                                - color: gold
                                  value: 1.8
                                - color: orange
                                  value: 2
                                - color: orange
                                  value: 2.2
                                - color: orange
                                  value: 2.4
                                - color: orange
                                  value: 2.6
                                - color: orange
                                  value: 2.8
                                - color: red
                                  value: 3
                                - color: red
                                  value: 3.5
                                - color: red
                                  value: 4
                                - color: red
                                  value: 4.5
                                - color: red
                                  value: 5
                                - color: red
                                  value: 5.5
                                - color: red
                                  value: 6
                                - color: firebrick
                                  value: 7
                                - color: firebrick
                                  value: 8
                                - color: firebrick
                                  value: 9
                                - color: firebrick
                                  value: 10
                              entities:
                                - entity: sensor.myenedis_cout_j7
                                - entity: sensor.myenedis_cout_j6
                                - entity: sensor.myenedis_cout_j5
                                - entity: sensor.myenedis_cout_j4
                                - entity: sensor.myenedis_cout_j3
                                - entity: sensor.myenedis_cout_j2
                                - entity: sensor.myenedis_cout_j1
                              font_size: 80
                              font_size_header: 13
                              hour24: true
                              hours_to_show: 24
                              icon: mdi:currency-eur
                              line_width: 2
                              name: Coût sur 7 jours
                              point_per_hour: 1
                              group_by: date
                              show:
                                graph: bar
                                name: true
                                state: false
                                extrema: false
                                fill: false
                                icon: true
                                icon_adaptive_color: false
                                labels: true
                                labels_secondary: false
                                legend: false
                                line: false
                                indicator: false
                                name_adaptive_color: false
                              style: |
                                ha-card {
                                  color: dodgerblue;
                                  border-radius: 0px;
                                  background: var(--my_color2);
                                }
                                :host {
                                  --paper-item-icon-color: dodgerblue;
                                }
                              type: custom:mini-graph-card
                  - type: custom:button-card
                    entity: sensor.temp_moyenne_rdc
                    icon: mdi:thermometer
                    name: Températures
                    template:
                      - bouton_systeme
                    styles:
                      icon:
                        - color: |
                            [[[
                              if (states['sensor.temp_moyenne_rdc'].state < 19.5 || states['sensor.temp_moyenne_etage'].state < 19.5)
                                return 'rgba(30,144,255,0.8)';
                              return 'grey';
                              if (states['sensor.temp_moyenne_rdc'].state > 24 || states['sensor.temp_moyenne_etage'].state > 24)
                                return 'rgba(178,34,34,0.8)';
                              return 'grey';
                            ]]]
                      img_cell:
                        - background-color: |
                            [[[
                              if (entity.state < 18) return 'red';
                              if (entity.state >= 19 && entity.state < 26) return 'var(--pastille_off)';
                              else return 'red';
                            ]]]
                      custom_fields:
                        info1:
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.temp_moyenne_rdc'].state <= 18)
                                  return 'rgba(0,191,255,0.5)';
                                if (states['sensor.temp_moyenne_rdc'].state > 25)
                                  return 'tomato';
                                return 'lightgrey';
                              ]]]
                        info2:
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.temp_moyenne_etage'].state <= 18)
                                  return 'rgba(0,191,255,0.5)';
                                if (states['sensor.temp_moyenne_etage'].state > 25)
                                  return 'tomato';
                                return 'lightgrey';
                              ]]]
                    custom_fields:
                      info1: |
                        [[[
                          return `
                            </ha-icon><span> RDC : <span style="color: var(--text-color-sensor);">${states['sensor.temp_moyenne_rdc'].state}°</span></span>`
                        ]]]
                      info2: |
                        [[[
                          return `
                            </ha-icon><span> Etage : <span style="color: var(--text-color-sensor);">${states['sensor.temp_moyenne_etage'].state}°</span></span>`
                        ]]]
                      ic:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: script.rechargement_integration_ble_monitor
                              icon: mdi:reload-alert
                              show_name: false
                              styles:
                                icon:
                                  - color: firebrick
                                  - width: 75%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                              tap_action:
                                action: toggle
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(0,191,255,0.3)
                              entity: sensor.temp_moyenne_etage
                            - color: rgba(255,0,0,0.3)
                              entity: sensor.temp_moyenne_rdc
                          height: 300
                          line_width: 2
                          lower_bound: 18
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                    double_tap_action:
                      action: more-info
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        command: popup
                        title: Température / Humidité
                        card:
                          type: vertical-stack
                          cards:
                            - type: grid
                              cards:
                                - type: custom:button-card
                                  entity: sensor.temp_sejour
                                  name: null
                                  template:
                                    - popup_temp
                                - type: custom:button-card
                                  entity: sensor.temp_couloir_rdc
                                  name: null
                                  template:
                                    - popup_temp
                                - type: custom:button-card
                                  entity: sensor.temp_cuisine
                                  name: Cuisine
                                  template:
                                    - popup_temp
                                - type: custom:button-card
                                  entity: sensor.temp_parents
                                  name: null
                                  template:
                                    - popup_temp
                              columns: 4
                            - type: grid
                              cards:
                                - type: custom:button-card
                                  entity: sensor.temp_tom
                                  name: null
                                  template:
                                    - popup_temp
                                - type: custom:button-card
                                  entity: sensor.temp_manon
                                  name: null
                                  template:
                                    - popup_temp
                                - type: custom:button-card
                                  entity: sensor.temp_nina
                                  name: null
                                  template:
                                    - popup_temp
                                - type: custom:button-card
                                  entity: sensor.temp_salle_de_bain
                                  name: null
                                  template:
                                    - popup_temp
                              columns: 4
                            - type: vertical-stack
                              cards:
                                - header:
                                    title: 🛋 RDC température
                                    show: true
                                    show_states: true
                                    colorize_states: true
                                  experimental:
                                    brush: true
                                  graph_span: 72h
                                  brush:
                                    selection_span: 12h
                                  apex_config:
                                    grid:
                                      show: false
                                    legend:
                                      fontSize: 12px
                                      height: 40
                                    dataLabels:
                                      enabled: false
                                    stroke:
                                      width: 3
                                      curve: smooth
                                    fill:
                                      type: gradient
                                      gradient:
                                        type: vertical
                                        shadeIntensity: 0.8
                                        inverseColors: false
                                        opacityFrom: 0.5
                                        opacityTo: 0
                                        stops:
                                          - - 0
                                            - 50
                                            - 100
                                    tooltip:
                                      enabled: true
                                    xaxis:
                                      axisBorder:
                                        show: false
                                      labels:
                                        style:
                                          fontSize: 14px
                                  series:
                                    - entity: sensor.temp_sejour
                                      name: Séjour
                                      show:
                                        extremas: false
                                      type: area
                                      color: grey
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.temp_couloir_rdc
                                      name: Couloir
                                      show:
                                        extremas: false
                                      type: area
                                      color: violet
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.temp_cuisine
                                      name: Cuisine
                                      show:
                                        extremas: false
                                      type: area
                                      color: red
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.temp_moyenne_rdc
                                      name: Moyenne
                                      color: dodgerblue
                                      fill_raw: last
                                      type: area
                                      stroke_width: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                      show:
                                        in_brush: true
                                        in_chart: false
                                  card_mod:
                                    style: |
                                      ha-card {
                                      background-color: black;
                                      }
                                  type: custom:apexcharts-card
                                - header:
                                    title: 🛋 RDC humidité
                                    show: true
                                    show_states: true
                                    colorize_states: true
                                  experimental:
                                    brush: true
                                  graph_span: 72h
                                  brush:
                                    selection_span: 12h
                                  apex_config:
                                    grid:
                                      show: false
                                    legend:
                                      fontSize: 12px
                                      height: 40
                                    dataLabels:
                                      enabled: false
                                    stroke:
                                      width: 3
                                      curve: smooth
                                    fill:
                                      type: gradient
                                      gradient:
                                        type: vertical
                                        shadeIntensity: 0.8
                                        inverseColors: false
                                        opacityFrom: 0.5
                                        opacityTo: 0
                                        stops:
                                          - - 0
                                            - 50
                                            - 100
                                    tooltip:
                                      enabled: true
                                    xaxis:
                                      axisBorder:
                                        show: false
                                      labels:
                                        style:
                                          fontSize: 14px
                                  series:
                                    - entity: sensor.hum_sejour
                                      name: Séjour
                                      show:
                                        extremas: false
                                      type: area
                                      color: grey
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.hum_couloir_rdc
                                      name: Couloir
                                      show:
                                        extremas: false
                                      type: area
                                      color: violet
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.hum_cuisine
                                      name: Cuisine
                                      show:
                                        extremas: false
                                      type: area
                                      color: red
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                  card_mod:
                                    style: |
                                      ha-card {
                                      background-color: black;
                                      }
                                  type: custom:apexcharts-card
                            - type: vertical-stack
                              cards:
                                - header:
                                    title: 🛏Chambres température
                                    show: true
                                    show_states: true
                                    colorize_states: true
                                  experimental:
                                    brush: true
                                  graph_span: 72h
                                  brush:
                                    selection_span: 12h
                                  apex_config:
                                    grid:
                                      show: false
                                    legend:
                                      fontSize: 12px
                                      height: 40
                                    dataLabels:
                                      enabled: false
                                    stroke:
                                      width: 3
                                      curve: smooth
                                    fill:
                                      type: gradient
                                      gradient:
                                        type: vertical
                                        shadeIntensity: 0.8
                                        inverseColors: false
                                        opacityFrom: 0.5
                                        opacityTo: 0
                                        stops:
                                          - - 0
                                            - 50
                                            - 100
                                    tooltip:
                                      enabled: true
                                    xaxis:
                                      axisBorder:
                                        show: false
                                      labels:
                                        style:
                                          fontSize: 14px
                                  series:
                                    - entity: sensor.temp_parents
                                      name: Parents
                                      show:
                                        extremas: false
                                      type: area
                                      color: grey
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.temp_tom
                                      name: Tom
                                      show:
                                        extremas: false
                                      type: area
                                      color: dodgerblue
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.temp_manon
                                      name: Manon
                                      show:
                                        extremas: false
                                      type: area
                                      color: red
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.temp_nina
                                      name: Nina
                                      show:
                                        extremas: false
                                      type: area
                                      color: salmon
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.temp_parents
                                      name: Parents
                                      color: grey
                                      fill_raw: last
                                      type: area
                                      stroke_width: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                      show:
                                        in_brush: true
                                        in_chart: false
                                  card_mod:
                                    style: |
                                      ha-card {
                                      background-color: black;
                                      }
                                  type: custom:apexcharts-card
                                - header:
                                    title: 🛏Chambres humidité
                                    show: true
                                    show_states: true
                                    colorize_states: true
                                  experimental:
                                    brush: true
                                  graph_span: 72h
                                  brush:
                                    selection_span: 12h
                                  apex_config:
                                    grid:
                                      show: false
                                    legend:
                                      fontSize: 12px
                                      height: 40
                                    dataLabels:
                                      enabled: false
                                    stroke:
                                      width: 3
                                      curve: smooth
                                    fill:
                                      type: gradient
                                      gradient:
                                        type: vertical
                                        shadeIntensity: 0.8
                                        inverseColors: false
                                        opacityFrom: 0.5
                                        opacityTo: 0
                                        stops:
                                          - - 0
                                            - 50
                                            - 100
                                    tooltip:
                                      enabled: true
                                    xaxis:
                                      axisBorder:
                                        show: false
                                      labels:
                                        style:
                                          fontSize: 14px
                                  series:
                                    - entity: sensor.hum_parents
                                      name: Parents
                                      show:
                                        extremas: false
                                      type: area
                                      color: grey
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.hum_tom
                                      name: Tom
                                      show:
                                        extremas: false
                                      type: area
                                      color: dodgerblue
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.hum_manon
                                      name: Manon
                                      show:
                                        extremas: false
                                      type: area
                                      color: red
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.hum_nina
                                      name: Nina
                                      show:
                                        extremas: false
                                      type: area
                                      color: salmon
                                      fill_raw: last
                                      float_precision: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                    - entity: sensor.temp_parents
                                      name: Parents
                                      color: grey
                                      fill_raw: last
                                      type: area
                                      stroke_width: 1
                                      group_by:
                                        duration: 10min
                                        func: avg
                                      show:
                                        in_brush: true
                                        in_chart: false
                                  card_mod:
                                    style: |
                                      ha-card {
                                      background-color: black;
                                      }
                                  type: custom:apexcharts-card
                  - type: custom:button-card
                    entity: sensor.plante_citro_temp
                    name: Plantes
                    icon: mdi:flower-tulip
                    template:
                      - bouton_systeme
                    styles:
                      img_cell:
                        - background-color: |
                            [[[
                              if (entity.state < 1) return 'red';
                              if (entity.state >= 1 && entity.state < 26) return 'var(--pastille_off)';
                              else return 'red';
                            ]]]
                      icon:
                        - color: |
                            [[[
                              if (entity.state < 1) return 'var(--icon_on)';
                              if (entity.state >= 1 && entity.state < 26) return 'var(--icon_off)';
                              else return 'var(--icon_off)';
                            ]]]
                      custom_fields:
                        circle:
                          - stroke: |
                              [[[
                                if (entity.state < 10)
                                  return 'dodgerblue';
                                if (entity.state > 27)
                                  return 'tomato';
                                return 'grey';
                              ]]]
                        info1:
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.plante_hum_dracaena'].state == "unavailable")
                                 return 'transparent'
                                return 'lightgrey';
                              ]]]
                        info2:
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.plante_hum_pied_elephant'].state == "unavailable")
                                 return 'transparent'
                                return 'lightgrey';
                              ]]]
                        info3:
                          - '--text-color-sensor': |
                              [[[
                                if (states['sensor.plante_citro_humidite'].state == "unavailable" )
                                 return 'transparent'
                                if (states['sensor.bt_off'].state == "off dongle" )
                                 return 'red'
                                return 'lightgrey';
                              ]]]
                    custom_fields:
                      circle: |
                        [[[ if (entity.state != '0' ) {
                           ;
                           const radius = 20.5; const circumference = radius * 2 * Math.PI; 
                           return `<svg viewBox="0 0 50 50"><circle cx="25" cy="25" r="${radius}" stroke="grey" stroke-width="1.5" fill="none" style="
                           transform: rotate(-90deg); transform-origin: 50% 50%; stroke-dasharray: ${circumference}; stroke-dashoffset: ${circumference - entity.state / 35 * circumference};" />
                           <text x="50%" y="54%" fill="lightgrey" font-size="14" text-anchor="middle" alignment-baseline="middle">${entity.state}<tspan font-size="10"></tspan>°</svg>`; } ]]]
                      info1: |
                        [[[
                          return `<ha-icon
                            icon="mdi:water"
                            style="width: 12px; height: 12px; color: grey;">
                            </ha-icon><span> Dracena : <span style="color: var(--text-color-sensor);">${states['sensor.plante_hum_dracaena'].state}%</span></span>`
                        ]]]
                      info2: |
                        [[[
                          return `<ha-icon
                            icon="mdi:water"
                            style="width: 12px; height: 12px; color: grey;">
                            </ha-icon><span> Pied Eléphant : <span style="color: var(--text-color-sensor);">${states['sensor.plante_hum_pied_elephant'].state}%</span></span>`
                        ]]]
                      info3: |
                        [[[
                          return `<ha-icon
                            icon="mdi:water"
                            style="width: 12px; height: 12px; color: grey;">
                            </ha-icon><span> Citronnier : <span style="color: var(--text-color-sensor);">${states['sensor.plante_citro_humidite'].state}%</span></span>`
                        ]]]
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(0,255,0,0.3)
                              entity: sensor.plante_hum_dracaena
                            - color: rgba(192,192,192,0.3)
                              entity: sensor.plante_hum_pied_elephant
                            - color: rgba(255,215,0,0.3)
                              entity: sensor.plante_citro_humidite
                          height: 300
                          line_width: 1
                          lower_bound: 18
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                    tap_action:
                      action: fire-dom-event
                      browser_mod:
                        command: popup
                        title: Plantes
                        card:
                          type: vertical-stack
                          cards:
                            - type: vertical-stack
                              cards:
                                - cards:
                                    - type: picture
                                      image: /local/header/header_dracaena2.png
                                      style: |
                                        ha-card {
                                          
                                          border-radius: 20px 20px 0px 0px; 
                                          background: #101010 ;
                                        }
                                    - entities:
                                        - entity: sensor.plante_hum_dracaena
                                          style: |
                                            :host {
                                              border-right: 1px solid violet;
                                              --paper-item-icon-color: violet;
                                            }
                                        - entity: sensor.plante_temp_dracaena
                                          style: |
                                            :host {
                                              border-right: 1px solid violet;
                                              --paper-item-icon-color: violet;
                                            }
                                        - entity: sensor.plante_lum_dracaena
                                          style: |
                                            :host {
                                              border-right: 1px solid violet;
                                              --paper-item-icon-color: violet;
                                            }
                                        - entity: sensor.plante_fertilite_dracaena
                                          style: |
                                            :host {
                                              --paper-item-icon-color: violet;
                                            }
                                      show_name: false
                                      style: |
                                        ha-card {

                                          border-radius: 20px;
                                          background: #101010;
                                          color: violet;
                                          font-size: 105%;
                                        .card-header {
                                          color: violet;  
                                        }
                                      type: glance
                                    - align_header: center
                                      align_icon: center
                                      align_state: center
                                      animate: true
                                      color_thresholds:
                                        - color: black
                                          value: 0
                                        - color: grey
                                          value: 1
                                        - color: grey
                                          value: 2
                                        - color: grey
                                          value: 3
                                        - color: grey
                                          value: 5
                                        - color: lightblue
                                          value: 6
                                        - color: lightblue
                                          value: 7
                                        - color: lightblue
                                          value: 8
                                        - color: lightblue
                                          value: 9
                                        - color: dodgerblue
                                          value: 10
                                        - color: dodgerblue
                                          value: 15
                                        - color: yellow
                                          value: 20
                                        - color: yellow
                                          value: 25
                                        - color: orange
                                          value: 30
                                        - color: orange
                                          value: 35
                                        - color: red
                                          value: 40
                                        - color: red
                                          value: 45
                                        - color: firebrick
                                          value: 50
                                        - color: firebrick
                                          value: 55
                                        - color: firebrick
                                          value: 60
                                      entities:
                                        - entity: sensor.plante_hum_dracaena
                                          name: null
                                      font_size_header: 20
                                      hour24: true
                                      hours_to_show: 168
                                      line_width: 2
                                      name: Humidité
                                      point_per_hour: 1
                                      show:
                                        extrema: true
                                        fill: true
                                        icon: true
                                        icon_adaptive_color: false
                                        labels: true
                                        labels_secondary: true
                                        legend: true
                                        line: true
                                        name_adaptive_color: false
                                      style: |
                                        ha-card {
                                          
                                          border-radius: 20px ;
                                          color: violet;    
                                          background: #101010 ; 
                                        }
                                        :host {
                                          --paper-item-icon-color: violet;
                                        }
                                      tap_action: none
                                      type: custom:mini-graph-card
                                    - type: custom:button-card
                                      color_type: blank-card
                                    - type: custom:button-card
                                      color_type: blank-card
                                    - type: custom:button-card
                                      color_type: blank-card
                                  type: custom:vertical-stack-in-card
                                  style: |
                                    ha-card {        
                                      border-radius: 20px ;
                                      background: #101010 ; 
                                    }
                                - type: custom:button-card
                                  color_type: blank-card
                                - type: custom:button-card
                                  color_type: blank-card
                            - cards:
                                - type: picture
                                  image: /local/header/header_pied2.png
                                  style: |
                                    ha-card {
                                      border-radius: 20px 20px 0px 0px; 
                                      background: #101010 ;
                                    }
                                - entities:
                                    - entity: sensor.plante_hum_pied_elephant
                                      style: |
                                        :host {
                                          border-right: 1px solid lightgreen;
                                          --paper-item-icon-color: lightgreen;
                                        }
                                    - entity: sensor.plante_temp_pied_elephant
                                      style: |
                                        :host {
                                          border-right: 1px solid lightgreen;
                                          --paper-item-icon-color: lightgreen;
                                        }
                                    - entity: sensor.plante_lum_pied_elephant
                                      style: |
                                        :host {
                                          border-right: 1px solid lightgreen;
                                          --paper-item-icon-color: lightgreen;
                                        }
                                    - entity: sensor.plante_fertilite_pied_elephant
                                      style: |
                                        :host {
                                          --paper-item-icon-color: lightgreen;
                                        }
                                  show_name: false
                                  style: |
                                    ha-card {

                                      border-radius: 20px;
                                      background: #101010 ;
                                      color: lightgreen;
                                      font-size: 105%;
                                    .card-header {
                                      color: lightgreen;  
                                    }
                                  type: glance
                                - align_header: center
                                  align_icon: center
                                  align_state: center
                                  animate: true
                                  color_thresholds:
                                    - color: black
                                      value: 0
                                    - color: grey
                                      value: 1
                                    - color: grey
                                      value: 2
                                    - color: grey
                                      value: 3
                                    - color: grey
                                      value: 5
                                    - color: lightblue
                                      value: 6
                                    - color: lightblue
                                      value: 7
                                    - color: lightblue
                                      value: 8
                                    - color: lightblue
                                      value: 9
                                    - color: dodgerblue
                                      value: 10
                                    - color: dodgerblue
                                      value: 15
                                    - color: yellow
                                      value: 20
                                    - color: yellow
                                      value: 25
                                    - color: orange
                                      value: 30
                                    - color: orange
                                      value: 35
                                    - color: red
                                      value: 40
                                    - color: red
                                      value: 45
                                    - color: firebrick
                                      value: 50
                                    - color: firebrick
                                      value: 55
                                    - color: firebrick
                                      value: 60
                                  entities:
                                    - entity: sensor.plante_hum_pied_elephant
                                      name: null
                                  font_size_header: 20
                                  hour24: true
                                  hours_to_show: 168
                                  line_width: 2
                                  name: Humidité
                                  point_per_hour: 1
                                  show:
                                    extrema: true
                                    fill: true
                                    icon: true
                                    icon_adaptive_color: false
                                    labels: true
                                    labels_secondary: true
                                    legend: true
                                    line: true
                                    name_adaptive_color: false
                                  style: |
                                    ha-card {

                                      border-radius: 20px ;
                                      color: lightgreen;    
                                      background: #101010 ; 
                                    }
                                    :host {
                                      --paper-item-icon-color: lightgreen;
                                    }
                                  tap_action: none
                                  type: custom:mini-graph-card
                                - type: custom:button-card
                                  color_type: blank-card
                                - type: custom:button-card
                                  color_type: blank-card
                                - type: custom:button-card
                                  color_type: blank-card
                              type: custom:vertical-stack-in-card
                              style: |
                                ha-card {        
                                  border-radius: 20px ;
                                  background: #101010 ; 
                                }
                            - cards:
                                - type: picture
                                  image: /local/header/header_citronnier2.png
                                  style: |
                                    ha-card {
                                      border-radius: 20px 20px 0px 0px; 
                                      background: #101010 ;
                                    }
                                - entities:
                                    - entity: sensor.plante_citro_humidite
                                      style: |
                                        :host {
                                          border-right: 1px solid yellow;
                                          --paper-item-icon-color: yellow;
                                        }
                                    - entity: sensor.plante_citro_temp
                                      style: |
                                        :host {
                                          border-right: 1px solid yellow;
                                          --paper-item-icon-color: yellow;
                                        }
                                    - entity: sensor.plante_citro_lum
                                      style: |
                                        :host {
                                          border-right: 1px solid yellow;
                                          --paper-item-icon-color: yellow;
                                        }
                                    - entity: sensor.plante_citro_fertilite
                                      style: |
                                        :host {
                                          --paper-item-icon-color: yellow;
                                        }
                                  show_name: false
                                  style: |
                                    ha-card {

                                      border-radius: 20px;
                                      background: #101010 ;
                                      font-size: 105%;
                                      color: yellow;
                                    .card-header {
                                      color: yellow;  
                                    }
                                  type: glance
                                - align_header: center
                                  align_icon: center
                                  align_state: center
                                  animate: true
                                  color_thresholds:
                                    - color: lightblue
                                      value: 0
                                    - color: lightblue
                                      value: 1
                                    - color: lightblue
                                      value: 2
                                    - color: lightblue
                                      value: 3
                                    - color: lightblue
                                      value: 5
                                    - color: lightblue
                                      value: 6
                                    - color: lightblue
                                      value: 7
                                    - color: lightblue
                                      value: 8
                                    - color: lightblue
                                      value: 9
                                    - color: dodgerblue
                                      value: 10
                                    - color: dodgerblue
                                      value: 15
                                    - color: yellow
                                      value: 20
                                    - color: yellow
                                      value: 25
                                    - color: orange
                                      value: 30
                                    - color: orange
                                      value: 35
                                    - color: red
                                      value: 40
                                    - color: red
                                      value: 45
                                    - color: firebrick
                                      value: 50
                                    - color: firebrick
                                      value: 55
                                    - color: firebrick
                                      value: 60
                                    - color: firebrick
                                      value: 65
                                    - color: firebrick
                                      value: 70
                                  entities:
                                    - entity: sensor.plante_citro_humidite
                                      name: null
                                  font_size_header: 20
                                  hour24: true
                                  hours_to_show: 168
                                  line_color: gold
                                  line_width: 2
                                  name: Humidité
                                  point_per_hour: 1
                                  show:
                                    extrema: true
                                    fill: true
                                    icon: true
                                    icon_adaptive_color: false
                                    labels: true
                                    labels_secondary: true
                                    legend: true
                                    line: true
                                    name_adaptive_color: false
                                  style: |
                                    ha-card {

                                      border-radius: 20px ;
                                      color: yellow;    
                                      background: #101010 ; 
                                    }
                                    :host {
                                      --paper-item-icon-color: yellow;
                                    }
                                  tap_action: none
                                  type: custom:mini-graph-card
                                - type: custom:button-card
                                  color_type: blank-card
                                - type: custom:button-card
                                  color_type: blank-card
                                - type: custom:button-card
                                  color_type: blank-card
                              type: custom:vertical-stack-in-card
                              style: |
                                ha-card {        
                                  border-radius: 20px ;
                                  background: #101010 ; 
                                }
                columns: 2
                square: false
            type: vertical-stack
  - icon: mdi:broom
    path: ''
    title: Aspis
    visible:
      - user: 2f0040afe95a4514ade3c049a0b5d479
      - user: 76afcf1927a948b19530bcbf1074ac59
      - user: d8316597eafd4333b737464a5b4c62d0
    badges: []
    cards:
      - type: vertical-stack
        cards:
          - type: vertical-stack
            cards:
              - type: custom:xiaomi-vacuum-card
                style: |
                  ha-card {
                    border-radius: 15px;
                  }
                entity: vacuum.wall_e
                image: /local/aspis/walle.jpeg
                name: Wall-E
                attributes:
                  main_brush:
                    label: 'Brosse '
                    unit: ' h'
                  side_brush:
                    label: 'Brosette '
                    unit: ' h'
                  filter:
                    label: 'Filtre '
                  sensor:
                    label: 'Capteurs '
                shortcuts:
                  spot:
                    show: true
                    label: Nettoyage localisé
                  new_button:
                    icon: mdi:flag-variant
                    label: Custom button!
                    service: script.turn_on
                    service_data:
                      entity_id: script.sortir_l_aspi
              - type: custom:xiaomi-vacuum-map-card
                style: |
                  ha-card {
                    border-radius: 15px;
                    background: black;
                  }
                entity: vacuum.wall_e
                map_source:
                  camera: camera.roborock_s6
                calibration_source:
                  camera: true
                language: fr
                debug: false
                map_modes:
                  - template: vacuum_clean_zone
                  - template: vacuum_goto
                  - template: vacuum_clean_zone_predefined
                    predefined_selections:
                      - zones:
                          - - 25027
                            - 24933
                            - 28549
                            - 28632
                      - zones:
                          - - 28625
                            - 25085
                            - 31969
                            - 28683
                      - zones:
                          - - 31944
                            - 24883
                            - 33895
                            - 28683
                      - zones:
                          - - 23761
                            - 28734
                            - 27308
                            - 31571
                      - zones:
                          - - 28777
                            - 28759
                            - 32603
                            - 30507
                      - zones:
                          - - 32628
                            - 28835
                            - 33768
                            - 30532
                      - zones:
                          - - 27308
                            - 28759
                            - 28802
                            - 33522
                      - zones:
                          - - 28828
                            - 30608
                            - 29740
                            - 33547
                      - zones:
                          - - 23659
                            - 31672
                            - 27282
                            - 35118
                      - zones:
                          - - 30150
                            - 30550
                            - 33050
                            - 34300
                map_locked: true
                two_finger_pan: false
              - type: horizontal-stack
                cards:
                  - type: custom:button-card
                    entity: script.aspi_walle_reset_brosse_principale
                    name: Brosse principale
                    icon: mdi:robot-vacuum-variant
                    template: capteur_aspi
                    confirmation:
                      text: '[[[ return `Wall-E Reset de la brosse principale ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_walle_reset_brosse_principale
                  - type: custom:button-card
                    entity: script.aspi_walle_reset_brosse_laterale
                    name: Brosse latérale
                    icon: mdi:broom
                    template: capteur_aspi
                    confirmation:
                      text: '[[[ return `Wall-E Reset de la brosse latérale ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_walle_reset_brosse_laterale
                  - type: custom:button-card
                    entity: script.aspi_walle_reset_capteurs
                    icon: mdi:state-machine
                    template: capteur_aspi
                    name: Capteurs
                    confirmation:
                      text: '[[[ return `Wall-E Reset des capteurs ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_walle_reset_capteurs
                  - type: custom:button-card
                    entity: script.aspi_walle_reset_filtre
                    name: Filtre
                    icon: mdi:air-filter
                    template: capteur_aspi
                    confirmation:
                      text: '[[[ return `Wall-E Reset du filtre ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_walle_reset_filtre
      - type: vertical-stack
        cards:
          - type: custom:xiaomi-vacuum-card
            entity: vacuum.r2d2
            image: /local/aspis/r2d2.jpg
            name: R2D2
            vendor: xiaomi
            attributes:
              main_brush:
                label: 'Brosse '
                unit: ' h'
              side_brush:
                label: 'Brossette '
                unit: ' h'
              filter:
                label: 'Filtre: '
              sensor:
                label: 'Capteurs: '
            buttons:
              spot:
                show: true
                label: Nettoyage localisé
          - type: custom:xiaomi-vacuum-map-card
            style: |
              ha-card {
                border-radius: 15px;
                background: black;
              }
            entity: vacuum.r2d2
            map_source:
              camera: camera.roborock_s50
            calibration_source:
              camera: true
            language: fr
            debug: false
            map_modes:
              - template: vacuum_clean_zone
              - template: vacuum_goto
              - template: vacuum_clean_zone_predefined
                predefined_selections:
                  - zones:
                      - - 27589
                        - 24459
                        - 30627
                        - 27454
                  - zones:
                      - - 22780
                        - 21316
                        - 26598
                        - 24332
                  - zones:
                      - - 27589
                        - 21505
                        - 31217
                        - 24374
                  - zones:
                      - - 22864
                        - 17730
                        - 31112
                        - 21231
                  - zones:
                      - - 25227
                        - 24501
                        - 27526
                        - 25809
                  - zones:
                      - - 26661
                        - 21442
                        - 27547
                        - 24501
            map_locked: true
            two_finger_pan: false
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: script.aspi_r2d2_reset_brosse_principale
                name: Brosse principale
                icon: mdi:robot-vacuum-variant
                template: capteur_aspi
                confirmation:
                  text: '[[[ return `R2D2 Reset de la brosse principale ?` ]]]'
                tap_action:
                  action: call-service
                  service: script.turn_on
                  service_data:
                    entity_id: script.aspi_r2d2_reset_brosse_principale
              - type: custom:button-card
                entity: script.aspi_r2d2_reset_brosse_laterale
                name: Brosse latérale
                icon: mdi:broom
                template: capteur_aspi
                confirmation:
                  text: '[[[ return `R2D2 Reset de la brosse latérale ?` ]]]'
                tap_action:
                  action: call-service
                  service: script.turn_on
                  service_data:
                    entity_id: script.aspi_r2d2_reset_brosse_laterale
              - type: custom:button-card
                entity: script.aspi_r2d2_reset_capteurs
                icon: mdi:state-machine
                name: Capteurs
                template: capteur_aspi
                confirmation:
                  text: '[[[ return `R2D2 Reset des capteurs ?` ]]]'
                tap_action:
                  action: call-service
                  service: script.turn_on
                  service_data:
                    entity_id: script.aspi_r2d2_reset_capteurs
              - type: custom:button-card
                entity: script.aspi_r2d2_reset_filtre
                name: Filtre
                icon: mdi:air-filter
                template: capteur_aspi
                confirmation:
                  text: '[[[ return `R2D2 Reset du filtre ?` ]]]'
                tap_action:
                  action: call-service
                  service: script.turn_on
                  service_data:
                    entity_id: script.aspi_r2d2_reset_filtre

